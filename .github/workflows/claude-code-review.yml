name: Claude Code Review
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  claude-review:
    if: github.actor == 'haryoiro'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      statuses: write
      checks: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 全履歴を取得（差分比較のため）

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          model: "claude-opus-4-20250514"
          direct_prompt: |
            ## Context
            PR #${{ github.event.pull_request.number }} in ${{ github.repository }}

            ## Workflow
            1. First check for existing reviews: `mcp__github__list_pull_request_reviews`
            2. If Claude's previous review exists:
               - Get review ID from the list
               - Update existing comments: `mcp__github__update_pull_request_review_comment`
               - Delete outdated comments if needed: `mcp__github__delete_pull_request_review_comment`
            3. If no previous review or first time:
               - Start new review: `mcp__github__create_pending_pull_request_review`
               - Analyze diff: `mcp__github__get_pull_request_diff`
               - Add comments: `mcp__github__add_pull_request_review_comment_to_pending_review`
               - Submit review: `mcp__github__submit_pending_pull_request_review` with COMMENT type

            ## Review Update Strategy
            - Check if a review by 'github-actions[bot]' or with Claude signature exists
            - If exists, update that review's comments instead of creating new ones
            - Remove comments that are no longer relevant (resolved issues)
            - Add new comments for new issues found
            - Preserve useful discussion threads

            ## Inline Comments
            - Start with one-line conclusion
            - Follow with reasoning and specific fix
            - Use code suggestions when fix is clear
            - Focus on actionable improvements

            ## Review Focus
            - CLAUDE.md compliance (if exists)
            - Code quality and best practices
            - Security vulnerabilities and bugs
            - Performance issues
            - Architecture and maintainability
            - Type safety and error handling

            ## Comment Management
            - Mark resolved issues as outdated
            - Update existing comments if the issue persists but context changed
            - Add new comments only for newly introduced issues
            - Include commit SHA reference for tracking

            ## Notes
            - Use Japanese for all feedback（必ず日本語でフィードバックをお願いします）
            - Be specific and actionable
            - Always use COMMENT type (never block PR)
            - Include line numbers and file paths in comments
            - Reference specific commit if commenting on changes

          allowed_tools: |
            Bash(git:*),
            View,
            GlobTool,
            GrepTool,
            mcp__github__list_pull_request_reviews,
            mcp__github__get_pull_request_review,
            mcp__github__list_pull_request_review_comments,
            mcp__github__create_pending_pull_request_review,
            mcp__github__add_pull_request_review_comment_to_pending_review,
            mcp__github__submit_pending_pull_request_review,
            mcp__github__get_pull_request_diff,
            mcp__github__update_pull_request_review_comment,
            mcp__github__delete_pull_request_review_comment,
            mcp__github__get_pull_request

      - name: Add review metadata
        if: always()
        run: |
          echo "Review completed at $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_STEP_SUMMARY
          echo "PR: #${{ github.event.pull_request.number }}" >> $GITHUB_STEP_SUMMARY
          echo "Commit: ${{ github.event.pull_request.head.sha }}" >> $GITHUB_STEP_SUMMARY
