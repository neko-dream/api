// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: get_password_auth_by_user_id.sql

package model

import (
	"context"

	"github.com/google/uuid"
)

const getPasswordAuthByUserId = `-- name: GetPasswordAuthByUserId :one
SELECT
  password_auth.password_auth_id, password_auth.user_id, password_auth.password_hash, password_auth.salt, password_auth.required_password_change, password_auth.last_changed, password_auth.created_at, password_auth.updated_at
FROM password_auth
WHERE user_id = $1
`

type GetPasswordAuthByUserIdRow struct {
	PasswordAuth PasswordAuth
}

// GetPasswordAuthByUserId
//
//	SELECT
//	  password_auth.password_auth_id, password_auth.user_id, password_auth.password_hash, password_auth.salt, password_auth.required_password_change, password_auth.last_changed, password_auth.created_at, password_auth.updated_at
//	FROM password_auth
//	WHERE user_id = $1
func (q *Queries) GetPasswordAuthByUserId(ctx context.Context, userID uuid.UUID) (GetPasswordAuthByUserIdRow, error) {
	row := q.db.QueryRowContext(ctx, getPasswordAuthByUserId, userID)
	var i GetPasswordAuthByUserIdRow
	err := row.Scan(
		&i.PasswordAuth.PasswordAuthID,
		&i.PasswordAuth.UserID,
		&i.PasswordAuth.PasswordHash,
		&i.PasswordAuth.Salt,
		&i.PasswordAuth.RequiredPasswordChange,
		&i.PasswordAuth.LastChanged,
		&i.PasswordAuth.CreatedAt,
		&i.PasswordAuth.UpdatedAt,
	)
	return i, err
}
