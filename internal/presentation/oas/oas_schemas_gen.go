// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"net/url"
	"time"

	"github.com/go-faster/errors"

	ht "github.com/ogen-go/ogen/http"
)

// Ref: #/components/schemas/ActionItem
type ActionItem struct {
	ActionItemID string `json:"actionItemID"`
	Sequence     int    `json:"sequence"`
	Content      string `json:"content"`
	Status       string `json:"status"`
	CreatedAt    string `json:"createdAt"`
	UpdatedAt    string `json:"updatedAt"`
}

// GetActionItemID returns the value of ActionItemID.
func (s *ActionItem) GetActionItemID() string {
	return s.ActionItemID
}

// GetSequence returns the value of Sequence.
func (s *ActionItem) GetSequence() int {
	return s.Sequence
}

// GetContent returns the value of Content.
func (s *ActionItem) GetContent() string {
	return s.Content
}

// GetStatus returns the value of Status.
func (s *ActionItem) GetStatus() string {
	return s.Status
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ActionItem) GetCreatedAt() string {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ActionItem) GetUpdatedAt() string {
	return s.UpdatedAt
}

// SetActionItemID sets the value of ActionItemID.
func (s *ActionItem) SetActionItemID(val string) {
	s.ActionItemID = val
}

// SetSequence sets the value of Sequence.
func (s *ActionItem) SetSequence(val int) {
	s.Sequence = val
}

// SetContent sets the value of Content.
func (s *ActionItem) SetContent(val string) {
	s.Content = val
}

// SetStatus sets the value of Status.
func (s *ActionItem) SetStatus(val string) {
	s.Status = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ActionItem) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ActionItem) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

func (*ActionItem) editTimeLineRes() {}

// Ref: #/components/schemas/AnalysisReportResponse
type AnalysisReportResponse struct {
	// レポート本文.
	Report OptString `json:"report"`
}

// GetReport returns the value of Report.
func (s *AnalysisReportResponse) GetReport() OptString {
	return s.Report
}

// SetReport sets the value of Report.
func (s *AnalysisReportResponse) SetReport(val OptString) {
	s.Report = val
}

type AuthAccountDetachBadRequest struct{}

func (*AuthAccountDetachBadRequest) authAccountDetachRes() {}

type AuthAccountDetachInternalServerError struct{}

func (*AuthAccountDetachInternalServerError) authAccountDetachRes() {}

type AuthAccountDetachOK struct{}

// AuthAccountDetachOKHeaders wraps AuthAccountDetachOK with response headers.
type AuthAccountDetachOKHeaders struct {
	SetCookie []string
	Response  AuthAccountDetachOK
}

// GetSetCookie returns the value of SetCookie.
func (s *AuthAccountDetachOKHeaders) GetSetCookie() []string {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *AuthAccountDetachOKHeaders) GetResponse() AuthAccountDetachOK {
	return s.Response
}

// SetSetCookie sets the value of SetCookie.
func (s *AuthAccountDetachOKHeaders) SetSetCookie(val []string) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *AuthAccountDetachOKHeaders) SetResponse(val AuthAccountDetachOK) {
	s.Response = val
}

func (*AuthAccountDetachOKHeaders) authAccountDetachRes() {}

type AuthorizeBadRequest struct{}

func (*AuthorizeBadRequest) authorizeRes() {}

type AuthorizeFound struct{}

// AuthorizeFoundHeaders wraps AuthorizeFound with response headers.
type AuthorizeFoundHeaders struct {
	Location  string
	SetCookie []string
	Response  AuthorizeFound
}

// GetLocation returns the value of Location.
func (s *AuthorizeFoundHeaders) GetLocation() string {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *AuthorizeFoundHeaders) GetSetCookie() []string {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *AuthorizeFoundHeaders) GetResponse() AuthorizeFound {
	return s.Response
}

// SetLocation sets the value of Location.
func (s *AuthorizeFoundHeaders) SetLocation(val string) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *AuthorizeFoundHeaders) SetSetCookie(val []string) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *AuthorizeFoundHeaders) SetResponse(val AuthorizeFound) {
	s.Response = val
}

func (*AuthorizeFoundHeaders) authorizeRes() {}

type AuthorizeInternalServerError struct{}

func (*AuthorizeInternalServerError) authorizeRes() {}

type AuthorizeProvider string

const (
	AuthorizeProviderGoogle AuthorizeProvider = "google"
	AuthorizeProviderLine   AuthorizeProvider = "line"
)

// AllValues returns all AuthorizeProvider values.
func (AuthorizeProvider) AllValues() []AuthorizeProvider {
	return []AuthorizeProvider{
		AuthorizeProviderGoogle,
		AuthorizeProviderLine,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AuthorizeProvider) MarshalText() ([]byte, error) {
	switch s {
	case AuthorizeProviderGoogle:
		return []byte(s), nil
	case AuthorizeProviderLine:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AuthorizeProvider) UnmarshalText(data []byte) error {
	switch AuthorizeProvider(data) {
	case AuthorizeProviderGoogle:
		*s = AuthorizeProviderGoogle
		return nil
	case AuthorizeProviderLine:
		*s = AuthorizeProviderLine
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ChangePasswordBadRequest struct{}

func (*ChangePasswordBadRequest) changePasswordRes() {}

type ChangePasswordInternalServerError struct{}

func (*ChangePasswordInternalServerError) changePasswordRes() {}

type ChangePasswordOK struct{}

func (*ChangePasswordOK) changePasswordRes() {}

// Ref: #/components/schemas/Conclusion
type Conclusion struct {
	// 作成ユーザー.
	User ConclusionUser `json:"user"`
	// 結論本文.
	Content string `json:"content"`
}

// GetUser returns the value of User.
func (s *Conclusion) GetUser() ConclusionUser {
	return s.User
}

// GetContent returns the value of Content.
func (s *Conclusion) GetContent() string {
	return s.Content
}

// SetUser sets the value of User.
func (s *Conclusion) SetUser(val ConclusionUser) {
	s.User = val
}

// SetContent sets the value of Content.
func (s *Conclusion) SetContent(val string) {
	s.Content = val
}

func (*Conclusion) getConclusionRes()  {}
func (*Conclusion) postConclusionRes() {}

type ConclusionUser struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *ConclusionUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *ConclusionUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *ConclusionUser) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *ConclusionUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ConclusionUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *ConclusionUser) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type ConsentTalkSessionBadRequest struct{}

func (*ConsentTalkSessionBadRequest) consentTalkSessionRes() {}

type ConsentTalkSessionInternalServerError struct{}

func (*ConsentTalkSessionInternalServerError) consentTalkSessionRes() {}

type ConsentTalkSessionOK struct{}

func (*ConsentTalkSessionOK) consentTalkSessionRes() {}

type CookieAuth struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *CookieAuth) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *CookieAuth) SetAPIKey(val string) {
	s.APIKey = val
}

type CreateOrganizationAliasBadRequest struct{}

func (*CreateOrganizationAliasBadRequest) createOrganizationAliasRes() {}

type CreateOrganizationAliasInternalServerError struct{}

func (*CreateOrganizationAliasInternalServerError) createOrganizationAliasRes() {}

type CreateOrganizationAliasOK struct {
	AliasID   string `json:"aliasID"`
	AliasName string `json:"aliasName"`
	CreatedAt string `json:"createdAt"`
}

// GetAliasID returns the value of AliasID.
func (s *CreateOrganizationAliasOK) GetAliasID() string {
	return s.AliasID
}

// GetAliasName returns the value of AliasName.
func (s *CreateOrganizationAliasOK) GetAliasName() string {
	return s.AliasName
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateOrganizationAliasOK) GetCreatedAt() string {
	return s.CreatedAt
}

// SetAliasID sets the value of AliasID.
func (s *CreateOrganizationAliasOK) SetAliasID(val string) {
	s.AliasID = val
}

// SetAliasName sets the value of AliasName.
func (s *CreateOrganizationAliasOK) SetAliasName(val string) {
	s.AliasName = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateOrganizationAliasOK) SetCreatedAt(val string) {
	s.CreatedAt = val
}

func (*CreateOrganizationAliasOK) createOrganizationAliasRes() {}

type CreateOrganizationAliasReq struct {
	AliasName string `json:"aliasName"`
}

// GetAliasName returns the value of AliasName.
func (s *CreateOrganizationAliasReq) GetAliasName() string {
	return s.AliasName
}

// SetAliasName sets the value of AliasName.
func (s *CreateOrganizationAliasReq) SetAliasName(val string) {
	s.AliasName = val
}

type DeleteOrganizationAliasBadRequest struct{}

func (*DeleteOrganizationAliasBadRequest) deleteOrganizationAliasRes() {}

type DeleteOrganizationAliasInternalServerError struct{}

func (*DeleteOrganizationAliasInternalServerError) deleteOrganizationAliasRes() {}

type DeleteOrganizationAliasOK struct{}

func (*DeleteOrganizationAliasOK) deleteOrganizationAliasRes() {}

type DevAuthorizeBadRequest struct{}

func (*DevAuthorizeBadRequest) devAuthorizeRes() {}

type DevAuthorizeFound struct{}

// DevAuthorizeFoundHeaders wraps DevAuthorizeFound with response headers.
type DevAuthorizeFoundHeaders struct {
	Location  OptString
	SetCookie []string
	Response  DevAuthorizeFound
}

// GetLocation returns the value of Location.
func (s *DevAuthorizeFoundHeaders) GetLocation() OptString {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *DevAuthorizeFoundHeaders) GetSetCookie() []string {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *DevAuthorizeFoundHeaders) GetResponse() DevAuthorizeFound {
	return s.Response
}

// SetLocation sets the value of Location.
func (s *DevAuthorizeFoundHeaders) SetLocation(val OptString) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *DevAuthorizeFoundHeaders) SetSetCookie(val []string) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *DevAuthorizeFoundHeaders) SetResponse(val DevAuthorizeFound) {
	s.Response = val
}

func (*DevAuthorizeFoundHeaders) devAuthorizeRes() {}

type DevAuthorizeInternalServerError struct{}

func (*DevAuthorizeInternalServerError) devAuthorizeRes() {}

type DummiInitBadRequest struct{}

func (*DummiInitBadRequest) dummiInitRes() {}

type DummiInitInternalServerError struct{}

func (*DummiInitInternalServerError) dummiInitRes() {}

type DummiInitOK struct{}

func (*DummiInitOK) dummiInitRes() {}

type EditTalkSessionBadRequest struct{}

func (*EditTalkSessionBadRequest) editTalkSessionRes() {}

type EditTalkSessionInternalServerError struct{}

func (*EditTalkSessionInternalServerError) editTalkSessionRes() {}

type EditTalkSessionReq struct {
	Theme            string        `json:"theme"`
	ScheduledEndTime time.Time     `json:"scheduledEndTime"`
	Latitude         OptNilFloat64 `json:"latitude"`
	Longitude        OptFloat64    `json:"longitude"`
	Prefecture       OptNilString  `json:"prefecture"`
	City             OptNilString  `json:"city"`
	Description      OptNilString  `json:"description"`
	ThumbnailURL     OptString     `json:"thumbnailURL"`
}

// GetTheme returns the value of Theme.
func (s *EditTalkSessionReq) GetTheme() string {
	return s.Theme
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *EditTalkSessionReq) GetScheduledEndTime() time.Time {
	return s.ScheduledEndTime
}

// GetLatitude returns the value of Latitude.
func (s *EditTalkSessionReq) GetLatitude() OptNilFloat64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *EditTalkSessionReq) GetLongitude() OptFloat64 {
	return s.Longitude
}

// GetPrefecture returns the value of Prefecture.
func (s *EditTalkSessionReq) GetPrefecture() OptNilString {
	return s.Prefecture
}

// GetCity returns the value of City.
func (s *EditTalkSessionReq) GetCity() OptNilString {
	return s.City
}

// GetDescription returns the value of Description.
func (s *EditTalkSessionReq) GetDescription() OptNilString {
	return s.Description
}

// GetThumbnailURL returns the value of ThumbnailURL.
func (s *EditTalkSessionReq) GetThumbnailURL() OptString {
	return s.ThumbnailURL
}

// SetTheme sets the value of Theme.
func (s *EditTalkSessionReq) SetTheme(val string) {
	s.Theme = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *EditTalkSessionReq) SetScheduledEndTime(val time.Time) {
	s.ScheduledEndTime = val
}

// SetLatitude sets the value of Latitude.
func (s *EditTalkSessionReq) SetLatitude(val OptNilFloat64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *EditTalkSessionReq) SetLongitude(val OptFloat64) {
	s.Longitude = val
}

// SetPrefecture sets the value of Prefecture.
func (s *EditTalkSessionReq) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

// SetCity sets the value of City.
func (s *EditTalkSessionReq) SetCity(val OptNilString) {
	s.City = val
}

// SetDescription sets the value of Description.
func (s *EditTalkSessionReq) SetDescription(val OptNilString) {
	s.Description = val
}

// SetThumbnailURL sets the value of ThumbnailURL.
func (s *EditTalkSessionReq) SetThumbnailURL(val OptString) {
	s.ThumbnailURL = val
}

type EditTimeLineBadRequest struct{}

func (*EditTimeLineBadRequest) editTimeLineRes() {}

type EditTimeLineInternalServerError struct{}

func (*EditTimeLineInternalServerError) editTimeLineRes() {}

type EditTimeLineReq struct {
	Content OptNilString `json:"content"`
	Status  OptNilString `json:"status"`
}

// GetContent returns the value of Content.
func (s *EditTimeLineReq) GetContent() OptNilString {
	return s.Content
}

// GetStatus returns the value of Status.
func (s *EditTimeLineReq) GetStatus() OptNilString {
	return s.Status
}

// SetContent sets the value of Content.
func (s *EditTimeLineReq) SetContent(val OptNilString) {
	s.Content = val
}

// SetStatus sets the value of Status.
func (s *EditTimeLineReq) SetStatus(val OptNilString) {
	s.Status = val
}

type EstablishOrganizationBadRequest struct{}

func (*EstablishOrganizationBadRequest) establishOrganizationRes() {}

type EstablishOrganizationInternalServerError struct{}

func (*EstablishOrganizationInternalServerError) establishOrganizationRes() {}

type EstablishOrganizationOK struct{}

func (*EstablishOrganizationOK) establishOrganizationRes() {}

type EstablishOrganizationReq struct {
	Name string `json:"name"`
	// 組織コード（ログイン時に使用）
	// 4文字以上127文字以下の英数字 _- のみ使用可能.
	Code string `json:"code"`
	// 組織タイプ
	// - 1: 通常（基本これ）.
	OrgType float64 `json:"orgType"`
}

// GetName returns the value of Name.
func (s *EstablishOrganizationReq) GetName() string {
	return s.Name
}

// GetCode returns the value of Code.
func (s *EstablishOrganizationReq) GetCode() string {
	return s.Code
}

// GetOrgType returns the value of OrgType.
func (s *EstablishOrganizationReq) GetOrgType() float64 {
	return s.OrgType
}

// SetName sets the value of Name.
func (s *EstablishOrganizationReq) SetName(val string) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *EstablishOrganizationReq) SetCode(val string) {
	s.Code = val
}

// SetOrgType sets the value of OrgType.
func (s *EstablishOrganizationReq) SetOrgType(val float64) {
	s.OrgType = val
}

type EstablishUserBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *EstablishUserBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *EstablishUserBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *EstablishUserBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *EstablishUserBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*EstablishUserBadRequest) establishUserRes() {}

type EstablishUserInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *EstablishUserInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *EstablishUserInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *EstablishUserInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *EstablishUserInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*EstablishUserInternalServerError) establishUserRes() {}

type EstablishUserReq struct {
	DisplayName string                       `json:"displayName"`
	DisplayID   string                       `json:"displayID"`
	Icon        OptMultipartFile             `json:"icon"`
	DateOfBirth OptString                    `json:"dateOfBirth"`
	Gender      OptNilEstablishUserReqGender `json:"gender"`
	Prefecture  OptString                    `json:"prefecture"`
	City        OptNilString                 `json:"city"`
	Email       OptNilString                 `json:"email"`
}

// GetDisplayName returns the value of DisplayName.
func (s *EstablishUserReq) GetDisplayName() string {
	return s.DisplayName
}

// GetDisplayID returns the value of DisplayID.
func (s *EstablishUserReq) GetDisplayID() string {
	return s.DisplayID
}

// GetIcon returns the value of Icon.
func (s *EstablishUserReq) GetIcon() OptMultipartFile {
	return s.Icon
}

// GetDateOfBirth returns the value of DateOfBirth.
func (s *EstablishUserReq) GetDateOfBirth() OptString {
	return s.DateOfBirth
}

// GetGender returns the value of Gender.
func (s *EstablishUserReq) GetGender() OptNilEstablishUserReqGender {
	return s.Gender
}

// GetPrefecture returns the value of Prefecture.
func (s *EstablishUserReq) GetPrefecture() OptString {
	return s.Prefecture
}

// GetCity returns the value of City.
func (s *EstablishUserReq) GetCity() OptNilString {
	return s.City
}

// GetEmail returns the value of Email.
func (s *EstablishUserReq) GetEmail() OptNilString {
	return s.Email
}

// SetDisplayName sets the value of DisplayName.
func (s *EstablishUserReq) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetDisplayID sets the value of DisplayID.
func (s *EstablishUserReq) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetIcon sets the value of Icon.
func (s *EstablishUserReq) SetIcon(val OptMultipartFile) {
	s.Icon = val
}

// SetDateOfBirth sets the value of DateOfBirth.
func (s *EstablishUserReq) SetDateOfBirth(val OptString) {
	s.DateOfBirth = val
}

// SetGender sets the value of Gender.
func (s *EstablishUserReq) SetGender(val OptNilEstablishUserReqGender) {
	s.Gender = val
}

// SetPrefecture sets the value of Prefecture.
func (s *EstablishUserReq) SetPrefecture(val OptString) {
	s.Prefecture = val
}

// SetCity sets the value of City.
func (s *EstablishUserReq) SetCity(val OptNilString) {
	s.City = val
}

// SetEmail sets the value of Email.
func (s *EstablishUserReq) SetEmail(val OptNilString) {
	s.Email = val
}

type EstablishUserReqGender string

const (
	EstablishUserReqGender_0 EstablishUserReqGender = "男性"
	EstablishUserReqGender_1 EstablishUserReqGender = "女性"
	EstablishUserReqGender_2 EstablishUserReqGender = "その他"
	EstablishUserReqGender_3 EstablishUserReqGender = "回答しない"
)

// AllValues returns all EstablishUserReqGender values.
func (EstablishUserReqGender) AllValues() []EstablishUserReqGender {
	return []EstablishUserReqGender{
		EstablishUserReqGender_0,
		EstablishUserReqGender_1,
		EstablishUserReqGender_2,
		EstablishUserReqGender_3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s EstablishUserReqGender) MarshalText() ([]byte, error) {
	switch s {
	case EstablishUserReqGender_0:
		return []byte(s), nil
	case EstablishUserReqGender_1:
		return []byte(s), nil
	case EstablishUserReqGender_2:
		return []byte(s), nil
	case EstablishUserReqGender_3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EstablishUserReqGender) UnmarshalText(data []byte) error {
	switch EstablishUserReqGender(data) {
	case EstablishUserReqGender_0:
		*s = EstablishUserReqGender_0
		return nil
	case EstablishUserReqGender_1:
		*s = EstablishUserReqGender_1
		return nil
	case EstablishUserReqGender_2:
		*s = EstablishUserReqGender_2
		return nil
	case EstablishUserReqGender_3:
		*s = EstablishUserReqGender_3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetConclusionBadRequest struct{}

func (*GetConclusionBadRequest) getConclusionRes() {}

type GetConclusionInternalServerError struct{}

func (*GetConclusionInternalServerError) getConclusionRes() {}

type GetOpenedTalkSessionBadRequest struct{}

func (*GetOpenedTalkSessionBadRequest) getOpenedTalkSessionRes() {}

type GetOpenedTalkSessionInternalServerError struct{}

func (*GetOpenedTalkSessionInternalServerError) getOpenedTalkSessionRes() {}

type GetOpenedTalkSessionOK struct {
	TalkSessions []GetOpenedTalkSessionOKTalkSessionsItem `json:"talkSessions"`
}

// GetTalkSessions returns the value of TalkSessions.
func (s *GetOpenedTalkSessionOK) GetTalkSessions() []GetOpenedTalkSessionOKTalkSessionsItem {
	return s.TalkSessions
}

// SetTalkSessions sets the value of TalkSessions.
func (s *GetOpenedTalkSessionOK) SetTalkSessions(val []GetOpenedTalkSessionOKTalkSessionsItem) {
	s.TalkSessions = val
}

func (*GetOpenedTalkSessionOK) getOpenedTalkSessionRes() {}

type GetOpenedTalkSessionOKTalkSessionsItem struct {
	TalkSession  TalkSession `json:"talkSession"`
	OpinionCount int         `json:"opinionCount"`
}

// GetTalkSession returns the value of TalkSession.
func (s *GetOpenedTalkSessionOKTalkSessionsItem) GetTalkSession() TalkSession {
	return s.TalkSession
}

// GetOpinionCount returns the value of OpinionCount.
func (s *GetOpenedTalkSessionOKTalkSessionsItem) GetOpinionCount() int {
	return s.OpinionCount
}

// SetTalkSession sets the value of TalkSession.
func (s *GetOpenedTalkSessionOKTalkSessionsItem) SetTalkSession(val TalkSession) {
	s.TalkSession = val
}

// SetOpinionCount sets the value of OpinionCount.
func (s *GetOpenedTalkSessionOKTalkSessionsItem) SetOpinionCount(val int) {
	s.OpinionCount = val
}

type GetOpenedTalkSessionStatus string

const (
	GetOpenedTalkSessionStatusFinished GetOpenedTalkSessionStatus = "finished"
	GetOpenedTalkSessionStatusOpen     GetOpenedTalkSessionStatus = "open"
)

// AllValues returns all GetOpenedTalkSessionStatus values.
func (GetOpenedTalkSessionStatus) AllValues() []GetOpenedTalkSessionStatus {
	return []GetOpenedTalkSessionStatus{
		GetOpenedTalkSessionStatusFinished,
		GetOpenedTalkSessionStatusOpen,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetOpenedTalkSessionStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetOpenedTalkSessionStatusFinished:
		return []byte(s), nil
	case GetOpenedTalkSessionStatusOpen:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetOpenedTalkSessionStatus) UnmarshalText(data []byte) error {
	switch GetOpenedTalkSessionStatus(data) {
	case GetOpenedTalkSessionStatusFinished:
		*s = GetOpenedTalkSessionStatusFinished
		return nil
	case GetOpenedTalkSessionStatusOpen:
		*s = GetOpenedTalkSessionStatusOpen
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetOpinionAnalysisBadRequest struct{}

func (*GetOpinionAnalysisBadRequest) getOpinionAnalysisRes() {}

type GetOpinionAnalysisInternalServerError struct{}

func (*GetOpinionAnalysisInternalServerError) getOpinionAnalysisRes() {}

type GetOpinionAnalysisOKApplicationJSON []OpinionGroupRatio

func (*GetOpinionAnalysisOKApplicationJSON) getOpinionAnalysisRes() {}

type GetOpinionDetail2InternalServerError struct{}

func (*GetOpinionDetail2InternalServerError) getOpinionDetail2Res() {}

type GetOpinionDetail2OK struct {
	Opinion    Opinion                             `json:"opinion"`
	User       User                                `json:"user"`
	MyVoteType OptNilGetOpinionDetail2OKMyVoteType `json:"myVoteType"`
}

// GetOpinion returns the value of Opinion.
func (s *GetOpinionDetail2OK) GetOpinion() Opinion {
	return s.Opinion
}

// GetUser returns the value of User.
func (s *GetOpinionDetail2OK) GetUser() User {
	return s.User
}

// GetMyVoteType returns the value of MyVoteType.
func (s *GetOpinionDetail2OK) GetMyVoteType() OptNilGetOpinionDetail2OKMyVoteType {
	return s.MyVoteType
}

// SetOpinion sets the value of Opinion.
func (s *GetOpinionDetail2OK) SetOpinion(val Opinion) {
	s.Opinion = val
}

// SetUser sets the value of User.
func (s *GetOpinionDetail2OK) SetUser(val User) {
	s.User = val
}

// SetMyVoteType sets the value of MyVoteType.
func (s *GetOpinionDetail2OK) SetMyVoteType(val OptNilGetOpinionDetail2OKMyVoteType) {
	s.MyVoteType = val
}

func (*GetOpinionDetail2OK) getOpinionDetail2Res() {}

// 投票タイプ.
type GetOpinionDetail2OKMyVoteType string

const (
	GetOpinionDetail2OKMyVoteTypeAgree    GetOpinionDetail2OKMyVoteType = "agree"
	GetOpinionDetail2OKMyVoteTypeDisagree GetOpinionDetail2OKMyVoteType = "disagree"
	GetOpinionDetail2OKMyVoteTypePass     GetOpinionDetail2OKMyVoteType = "pass"
)

// AllValues returns all GetOpinionDetail2OKMyVoteType values.
func (GetOpinionDetail2OKMyVoteType) AllValues() []GetOpinionDetail2OKMyVoteType {
	return []GetOpinionDetail2OKMyVoteType{
		GetOpinionDetail2OKMyVoteTypeAgree,
		GetOpinionDetail2OKMyVoteTypeDisagree,
		GetOpinionDetail2OKMyVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetOpinionDetail2OKMyVoteType) MarshalText() ([]byte, error) {
	switch s {
	case GetOpinionDetail2OKMyVoteTypeAgree:
		return []byte(s), nil
	case GetOpinionDetail2OKMyVoteTypeDisagree:
		return []byte(s), nil
	case GetOpinionDetail2OKMyVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetOpinionDetail2OKMyVoteType) UnmarshalText(data []byte) error {
	switch GetOpinionDetail2OKMyVoteType(data) {
	case GetOpinionDetail2OKMyVoteTypeAgree:
		*s = GetOpinionDetail2OKMyVoteTypeAgree
		return nil
	case GetOpinionDetail2OKMyVoteTypeDisagree:
		*s = GetOpinionDetail2OKMyVoteTypeDisagree
		return nil
	case GetOpinionDetail2OKMyVoteTypePass:
		*s = GetOpinionDetail2OKMyVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetOpinionReportReasonsBadRequest struct{}

func (*GetOpinionReportReasonsBadRequest) getOpinionReportReasonsRes() {}

type GetOpinionReportReasonsInternalServerError struct{}

func (*GetOpinionReportReasonsInternalServerError) getOpinionReportReasonsRes() {}

type GetOpinionReportReasonsOKApplicationJSON []ReportReason

func (*GetOpinionReportReasonsOKApplicationJSON) getOpinionReportReasonsRes() {}

type GetOpinionReportsBadRequest struct{}

func (*GetOpinionReportsBadRequest) getOpinionReportsRes() {}

type GetOpinionReportsInternalServerError struct{}

func (*GetOpinionReportsInternalServerError) getOpinionReportsRes() {}

type GetOpinionsForTalkSessionBadRequest struct{}

func (*GetOpinionsForTalkSessionBadRequest) getOpinionsForTalkSessionRes() {}

type GetOpinionsForTalkSessionInternalServerError struct{}

func (*GetOpinionsForTalkSessionInternalServerError) getOpinionsForTalkSessionRes() {}

type GetOpinionsForTalkSessionOK struct {
	Opinions   []GetOpinionsForTalkSessionOKOpinionsItem `json:"opinions"`
	Pagination GetOpinionsForTalkSessionOKPagination     `json:"pagination"`
}

// GetOpinions returns the value of Opinions.
func (s *GetOpinionsForTalkSessionOK) GetOpinions() []GetOpinionsForTalkSessionOKOpinionsItem {
	return s.Opinions
}

// GetPagination returns the value of Pagination.
func (s *GetOpinionsForTalkSessionOK) GetPagination() GetOpinionsForTalkSessionOKPagination {
	return s.Pagination
}

// SetOpinions sets the value of Opinions.
func (s *GetOpinionsForTalkSessionOK) SetOpinions(val []GetOpinionsForTalkSessionOKOpinionsItem) {
	s.Opinions = val
}

// SetPagination sets the value of Pagination.
func (s *GetOpinionsForTalkSessionOK) SetPagination(val GetOpinionsForTalkSessionOKPagination) {
	s.Pagination = val
}

func (*GetOpinionsForTalkSessionOK) getOpinionsForTalkSessionRes() {}

type GetOpinionsForTalkSessionOKOpinionsItem struct {
	Opinion    Opinion                                                 `json:"opinion"`
	User       User                                                    `json:"user"`
	ReplyCount int                                                     `json:"replyCount"`
	MyVoteType OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType `json:"myVoteType"`
}

// GetOpinion returns the value of Opinion.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) GetOpinion() Opinion {
	return s.Opinion
}

// GetUser returns the value of User.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) GetUser() User {
	return s.User
}

// GetReplyCount returns the value of ReplyCount.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) GetReplyCount() int {
	return s.ReplyCount
}

// GetMyVoteType returns the value of MyVoteType.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) GetMyVoteType() OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType {
	return s.MyVoteType
}

// SetOpinion sets the value of Opinion.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) SetOpinion(val Opinion) {
	s.Opinion = val
}

// SetUser sets the value of User.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) SetUser(val User) {
	s.User = val
}

// SetReplyCount sets the value of ReplyCount.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) SetReplyCount(val int) {
	s.ReplyCount = val
}

// SetMyVoteType sets the value of MyVoteType.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) SetMyVoteType(val OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType) {
	s.MyVoteType = val
}

// 投票タイプ.
type GetOpinionsForTalkSessionOKOpinionsItemMyVoteType string

const (
	GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeAgree    GetOpinionsForTalkSessionOKOpinionsItemMyVoteType = "agree"
	GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeDisagree GetOpinionsForTalkSessionOKOpinionsItemMyVoteType = "disagree"
	GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypePass     GetOpinionsForTalkSessionOKOpinionsItemMyVoteType = "pass"
)

// AllValues returns all GetOpinionsForTalkSessionOKOpinionsItemMyVoteType values.
func (GetOpinionsForTalkSessionOKOpinionsItemMyVoteType) AllValues() []GetOpinionsForTalkSessionOKOpinionsItemMyVoteType {
	return []GetOpinionsForTalkSessionOKOpinionsItemMyVoteType{
		GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeAgree,
		GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeDisagree,
		GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetOpinionsForTalkSessionOKOpinionsItemMyVoteType) MarshalText() ([]byte, error) {
	switch s {
	case GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeAgree:
		return []byte(s), nil
	case GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeDisagree:
		return []byte(s), nil
	case GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetOpinionsForTalkSessionOKOpinionsItemMyVoteType) UnmarshalText(data []byte) error {
	switch GetOpinionsForTalkSessionOKOpinionsItemMyVoteType(data) {
	case GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeAgree:
		*s = GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeAgree
		return nil
	case GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeDisagree:
		*s = GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeDisagree
		return nil
	case GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypePass:
		*s = GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetOpinionsForTalkSessionOKPagination struct {
	TotalCount int `json:"totalCount"`
}

// GetTotalCount returns the value of TotalCount.
func (s *GetOpinionsForTalkSessionOKPagination) GetTotalCount() int {
	return s.TotalCount
}

// SetTotalCount sets the value of TotalCount.
func (s *GetOpinionsForTalkSessionOKPagination) SetTotalCount(val int) {
	s.TotalCount = val
}

type GetOpinionsForTalkSessionSort string

const (
	GetOpinionsForTalkSessionSortLatest      GetOpinionsForTalkSessionSort = "latest"
	GetOpinionsForTalkSessionSortMostReplies GetOpinionsForTalkSessionSort = "mostReplies"
	GetOpinionsForTalkSessionSortOldest      GetOpinionsForTalkSessionSort = "oldest"
)

// AllValues returns all GetOpinionsForTalkSessionSort values.
func (GetOpinionsForTalkSessionSort) AllValues() []GetOpinionsForTalkSessionSort {
	return []GetOpinionsForTalkSessionSort{
		GetOpinionsForTalkSessionSortLatest,
		GetOpinionsForTalkSessionSortMostReplies,
		GetOpinionsForTalkSessionSortOldest,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetOpinionsForTalkSessionSort) MarshalText() ([]byte, error) {
	switch s {
	case GetOpinionsForTalkSessionSortLatest:
		return []byte(s), nil
	case GetOpinionsForTalkSessionSortMostReplies:
		return []byte(s), nil
	case GetOpinionsForTalkSessionSortOldest:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetOpinionsForTalkSessionSort) UnmarshalText(data []byte) error {
	switch GetOpinionsForTalkSessionSort(data) {
	case GetOpinionsForTalkSessionSortLatest:
		*s = GetOpinionsForTalkSessionSortLatest
		return nil
	case GetOpinionsForTalkSessionSortMostReplies:
		*s = GetOpinionsForTalkSessionSortMostReplies
		return nil
	case GetOpinionsForTalkSessionSortOldest:
		*s = GetOpinionsForTalkSessionSortOldest
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetOrganizationAliasesBadRequest struct{}

func (*GetOrganizationAliasesBadRequest) getOrganizationAliasesRes() {}

type GetOrganizationAliasesInternalServerError struct{}

func (*GetOrganizationAliasesInternalServerError) getOrganizationAliasesRes() {}

type GetOrganizationAliasesOK struct {
	Aliases []GetOrganizationAliasesOKAliasesItem `json:"aliases"`
}

// GetAliases returns the value of Aliases.
func (s *GetOrganizationAliasesOK) GetAliases() []GetOrganizationAliasesOKAliasesItem {
	return s.Aliases
}

// SetAliases sets the value of Aliases.
func (s *GetOrganizationAliasesOK) SetAliases(val []GetOrganizationAliasesOKAliasesItem) {
	s.Aliases = val
}

func (*GetOrganizationAliasesOK) getOrganizationAliasesRes() {}

type GetOrganizationAliasesOKAliasesItem struct {
	AliasID   string `json:"aliasID"`
	AliasName string `json:"aliasName"`
	CreatedAt string `json:"createdAt"`
}

// GetAliasID returns the value of AliasID.
func (s *GetOrganizationAliasesOKAliasesItem) GetAliasID() string {
	return s.AliasID
}

// GetAliasName returns the value of AliasName.
func (s *GetOrganizationAliasesOKAliasesItem) GetAliasName() string {
	return s.AliasName
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetOrganizationAliasesOKAliasesItem) GetCreatedAt() string {
	return s.CreatedAt
}

// SetAliasID sets the value of AliasID.
func (s *GetOrganizationAliasesOKAliasesItem) SetAliasID(val string) {
	s.AliasID = val
}

// SetAliasName sets the value of AliasName.
func (s *GetOrganizationAliasesOKAliasesItem) SetAliasName(val string) {
	s.AliasName = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetOrganizationAliasesOKAliasesItem) SetCreatedAt(val string) {
	s.CreatedAt = val
}

type GetOrganizationsBadRequest struct{}

func (*GetOrganizationsBadRequest) getOrganizationsRes() {}

type GetOrganizationsInternalServerError struct{}

func (*GetOrganizationsInternalServerError) getOrganizationsRes() {}

type GetOrganizationsOK struct {
	Organizations []Organization `json:"organizations"`
}

// GetOrganizations returns the value of Organizations.
func (s *GetOrganizationsOK) GetOrganizations() []Organization {
	return s.Organizations
}

// SetOrganizations sets the value of Organizations.
func (s *GetOrganizationsOK) SetOrganizations(val []Organization) {
	s.Organizations = val
}

func (*GetOrganizationsOK) getOrganizationsRes() {}

type GetPolicyConsentStatusBadRequest struct{}

func (*GetPolicyConsentStatusBadRequest) getPolicyConsentStatusRes() {}

type GetPolicyConsentStatusInternalServerError struct{}

func (*GetPolicyConsentStatusInternalServerError) getPolicyConsentStatusRes() {}

type GetReportsForTalkSessionBadRequest struct{}

func (*GetReportsForTalkSessionBadRequest) getReportsForTalkSessionRes() {}

type GetReportsForTalkSessionInternalServerError struct{}

func (*GetReportsForTalkSessionInternalServerError) getReportsForTalkSessionRes() {}

type GetReportsForTalkSessionOK struct {
	Reports []ReportDetail `json:"reports"`
}

// GetReports returns the value of Reports.
func (s *GetReportsForTalkSessionOK) GetReports() []ReportDetail {
	return s.Reports
}

// SetReports sets the value of Reports.
func (s *GetReportsForTalkSessionOK) SetReports(val []ReportDetail) {
	s.Reports = val
}

func (*GetReportsForTalkSessionOK) getReportsForTalkSessionRes() {}

type GetReportsForTalkSessionStatus string

const (
	GetReportsForTalkSessionStatusUnsolved GetReportsForTalkSessionStatus = "unsolved"
	GetReportsForTalkSessionStatusDeleted  GetReportsForTalkSessionStatus = "deleted"
	GetReportsForTalkSessionStatusHold     GetReportsForTalkSessionStatus = "hold"
)

// AllValues returns all GetReportsForTalkSessionStatus values.
func (GetReportsForTalkSessionStatus) AllValues() []GetReportsForTalkSessionStatus {
	return []GetReportsForTalkSessionStatus{
		GetReportsForTalkSessionStatusUnsolved,
		GetReportsForTalkSessionStatusDeleted,
		GetReportsForTalkSessionStatusHold,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetReportsForTalkSessionStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetReportsForTalkSessionStatusUnsolved:
		return []byte(s), nil
	case GetReportsForTalkSessionStatusDeleted:
		return []byte(s), nil
	case GetReportsForTalkSessionStatusHold:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetReportsForTalkSessionStatus) UnmarshalText(data []byte) error {
	switch GetReportsForTalkSessionStatus(data) {
	case GetReportsForTalkSessionStatusUnsolved:
		*s = GetReportsForTalkSessionStatusUnsolved
		return nil
	case GetReportsForTalkSessionStatusDeleted:
		*s = GetReportsForTalkSessionStatusDeleted
		return nil
	case GetReportsForTalkSessionStatusHold:
		*s = GetReportsForTalkSessionStatusHold
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetTalkSessionDetailBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetTalkSessionDetailBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetTalkSessionDetailBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetTalkSessionDetailBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetTalkSessionDetailBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*GetTalkSessionDetailBadRequest) getTalkSessionDetailRes() {}

type GetTalkSessionListBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetTalkSessionListBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetTalkSessionListBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetTalkSessionListBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetTalkSessionListBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*GetTalkSessionListBadRequest) getTalkSessionListRes() {}

type GetTalkSessionListInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetTalkSessionListInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetTalkSessionListInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetTalkSessionListInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetTalkSessionListInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetTalkSessionListInternalServerError) getTalkSessionListRes() {}

type GetTalkSessionListManageStatus string

const (
	GetTalkSessionListManageStatusActive   GetTalkSessionListManageStatus = "active"
	GetTalkSessionListManageStatusInactive GetTalkSessionListManageStatus = "inactive"
)

// AllValues returns all GetTalkSessionListManageStatus values.
func (GetTalkSessionListManageStatus) AllValues() []GetTalkSessionListManageStatus {
	return []GetTalkSessionListManageStatus{
		GetTalkSessionListManageStatusActive,
		GetTalkSessionListManageStatusInactive,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetTalkSessionListManageStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetTalkSessionListManageStatusActive:
		return []byte(s), nil
	case GetTalkSessionListManageStatusInactive:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetTalkSessionListManageStatus) UnmarshalText(data []byte) error {
	switch GetTalkSessionListManageStatus(data) {
	case GetTalkSessionListManageStatusActive:
		*s = GetTalkSessionListManageStatusActive
		return nil
	case GetTalkSessionListManageStatusInactive:
		*s = GetTalkSessionListManageStatusInactive
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetTalkSessionListOK struct {
	TalkSessions []GetTalkSessionListOKTalkSessionsItem `json:"talkSessions"`
	Pagination   OffsetPagination                       `json:"pagination"`
}

// GetTalkSessions returns the value of TalkSessions.
func (s *GetTalkSessionListOK) GetTalkSessions() []GetTalkSessionListOKTalkSessionsItem {
	return s.TalkSessions
}

// GetPagination returns the value of Pagination.
func (s *GetTalkSessionListOK) GetPagination() OffsetPagination {
	return s.Pagination
}

// SetTalkSessions sets the value of TalkSessions.
func (s *GetTalkSessionListOK) SetTalkSessions(val []GetTalkSessionListOKTalkSessionsItem) {
	s.TalkSessions = val
}

// SetPagination sets the value of Pagination.
func (s *GetTalkSessionListOK) SetPagination(val OffsetPagination) {
	s.Pagination = val
}

func (*GetTalkSessionListOK) getTalkSessionListRes() {}

type GetTalkSessionListOKTalkSessionsItem struct {
	TalkSession  TalkSession `json:"talkSession"`
	OpinionCount int         `json:"opinionCount"`
}

// GetTalkSession returns the value of TalkSession.
func (s *GetTalkSessionListOKTalkSessionsItem) GetTalkSession() TalkSession {
	return s.TalkSession
}

// GetOpinionCount returns the value of OpinionCount.
func (s *GetTalkSessionListOKTalkSessionsItem) GetOpinionCount() int {
	return s.OpinionCount
}

// SetTalkSession sets the value of TalkSession.
func (s *GetTalkSessionListOKTalkSessionsItem) SetTalkSession(val TalkSession) {
	s.TalkSession = val
}

// SetOpinionCount sets the value of OpinionCount.
func (s *GetTalkSessionListOKTalkSessionsItem) SetOpinionCount(val int) {
	s.OpinionCount = val
}

type GetTalkSessionListSortKey string

const (
	GetTalkSessionListSortKeyLatest      GetTalkSessionListSortKey = "latest"
	GetTalkSessionListSortKeyOldest      GetTalkSessionListSortKey = "oldest"
	GetTalkSessionListSortKeyMostReplies GetTalkSessionListSortKey = "mostReplies"
	GetTalkSessionListSortKeyNearest     GetTalkSessionListSortKey = "nearest"
)

// AllValues returns all GetTalkSessionListSortKey values.
func (GetTalkSessionListSortKey) AllValues() []GetTalkSessionListSortKey {
	return []GetTalkSessionListSortKey{
		GetTalkSessionListSortKeyLatest,
		GetTalkSessionListSortKeyOldest,
		GetTalkSessionListSortKeyMostReplies,
		GetTalkSessionListSortKeyNearest,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetTalkSessionListSortKey) MarshalText() ([]byte, error) {
	switch s {
	case GetTalkSessionListSortKeyLatest:
		return []byte(s), nil
	case GetTalkSessionListSortKeyOldest:
		return []byte(s), nil
	case GetTalkSessionListSortKeyMostReplies:
		return []byte(s), nil
	case GetTalkSessionListSortKeyNearest:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetTalkSessionListSortKey) UnmarshalText(data []byte) error {
	switch GetTalkSessionListSortKey(data) {
	case GetTalkSessionListSortKeyLatest:
		*s = GetTalkSessionListSortKeyLatest
		return nil
	case GetTalkSessionListSortKeyOldest:
		*s = GetTalkSessionListSortKeyOldest
		return nil
	case GetTalkSessionListSortKeyMostReplies:
		*s = GetTalkSessionListSortKeyMostReplies
		return nil
	case GetTalkSessionListSortKeyNearest:
		*s = GetTalkSessionListSortKeyNearest
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetTalkSessionListStatus string

const (
	GetTalkSessionListStatusOpen     GetTalkSessionListStatus = "open"
	GetTalkSessionListStatusFinished GetTalkSessionListStatus = "finished"
)

// AllValues returns all GetTalkSessionListStatus values.
func (GetTalkSessionListStatus) AllValues() []GetTalkSessionListStatus {
	return []GetTalkSessionListStatus{
		GetTalkSessionListStatusOpen,
		GetTalkSessionListStatusFinished,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetTalkSessionListStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetTalkSessionListStatusOpen:
		return []byte(s), nil
	case GetTalkSessionListStatusFinished:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetTalkSessionListStatus) UnmarshalText(data []byte) error {
	switch GetTalkSessionListStatus(data) {
	case GetTalkSessionListStatusOpen:
		*s = GetTalkSessionListStatusOpen
		return nil
	case GetTalkSessionListStatusFinished:
		*s = GetTalkSessionListStatusFinished
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetTalkSessionReportCountBadRequest struct{}

func (*GetTalkSessionReportCountBadRequest) getTalkSessionReportCountRes() {}

type GetTalkSessionReportCountInternalServerError struct{}

func (*GetTalkSessionReportCountInternalServerError) getTalkSessionReportCountRes() {}

type GetTalkSessionReportCountOK struct {
	Count int `json:"count"`
}

// GetCount returns the value of Count.
func (s *GetTalkSessionReportCountOK) GetCount() int {
	return s.Count
}

// SetCount sets the value of Count.
func (s *GetTalkSessionReportCountOK) SetCount(val int) {
	s.Count = val
}

func (*GetTalkSessionReportCountOK) getTalkSessionReportCountRes() {}

type GetTalkSessionReportCountStatus string

const (
	GetTalkSessionReportCountStatusUnsolved GetTalkSessionReportCountStatus = "unsolved"
	GetTalkSessionReportCountStatusDeleted  GetTalkSessionReportCountStatus = "deleted"
	GetTalkSessionReportCountStatusHold     GetTalkSessionReportCountStatus = "hold"
)

// AllValues returns all GetTalkSessionReportCountStatus values.
func (GetTalkSessionReportCountStatus) AllValues() []GetTalkSessionReportCountStatus {
	return []GetTalkSessionReportCountStatus{
		GetTalkSessionReportCountStatusUnsolved,
		GetTalkSessionReportCountStatusDeleted,
		GetTalkSessionReportCountStatusHold,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetTalkSessionReportCountStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetTalkSessionReportCountStatusUnsolved:
		return []byte(s), nil
	case GetTalkSessionReportCountStatusDeleted:
		return []byte(s), nil
	case GetTalkSessionReportCountStatusHold:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetTalkSessionReportCountStatus) UnmarshalText(data []byte) error {
	switch GetTalkSessionReportCountStatus(data) {
	case GetTalkSessionReportCountStatusUnsolved:
		*s = GetTalkSessionReportCountStatusUnsolved
		return nil
	case GetTalkSessionReportCountStatusDeleted:
		*s = GetTalkSessionReportCountStatusDeleted
		return nil
	case GetTalkSessionReportCountStatusHold:
		*s = GetTalkSessionReportCountStatusHold
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetTalkSessionReportInternalServerError struct{}

func (*GetTalkSessionReportInternalServerError) getTalkSessionReportRes() {}

type GetTalkSessionReportOK struct {
	Report OptNilString `json:"report"`
}

// GetReport returns the value of Report.
func (s *GetTalkSessionReportOK) GetReport() OptNilString {
	return s.Report
}

// SetReport sets the value of Report.
func (s *GetTalkSessionReportOK) SetReport(val OptNilString) {
	s.Report = val
}

func (*GetTalkSessionReportOK) getTalkSessionReportRes() {}

type GetTalkSessionRestrictionKeysBadRequest struct{}

func (*GetTalkSessionRestrictionKeysBadRequest) getTalkSessionRestrictionKeysRes() {}

type GetTalkSessionRestrictionKeysInternalServerError struct{}

func (*GetTalkSessionRestrictionKeysInternalServerError) getTalkSessionRestrictionKeysRes() {}

type GetTalkSessionRestrictionKeysOKApplicationJSON []Restriction

func (*GetTalkSessionRestrictionKeysOKApplicationJSON) getTalkSessionRestrictionKeysRes() {}

type GetTalkSessionRestrictionSatisfiedBadRequest struct{}

func (*GetTalkSessionRestrictionSatisfiedBadRequest) getTalkSessionRestrictionSatisfiedRes() {}

type GetTalkSessionRestrictionSatisfiedInternalServerError struct{}

func (*GetTalkSessionRestrictionSatisfiedInternalServerError) getTalkSessionRestrictionSatisfiedRes() {
}

type GetTalkSessionRestrictionSatisfiedOKApplicationJSON []Restriction

func (*GetTalkSessionRestrictionSatisfiedOKApplicationJSON) getTalkSessionRestrictionSatisfiedRes() {}

type GetTimeLineBadRequest struct{}

func (*GetTimeLineBadRequest) getTimeLineRes() {}

type GetTimeLineInternalServerError struct{}

func (*GetTimeLineInternalServerError) getTimeLineRes() {}

type GetTimeLineOK struct {
	Items []ActionItem `json:"items"`
}

// GetItems returns the value of Items.
func (s *GetTimeLineOK) GetItems() []ActionItem {
	return s.Items
}

// SetItems sets the value of Items.
func (s *GetTimeLineOK) SetItems(val []ActionItem) {
	s.Items = val
}

func (*GetTimeLineOK) getTimeLineRes() {}

type GetTokenInfoBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetTokenInfoBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetTokenInfoBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetTokenInfoBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetTokenInfoBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*GetTokenInfoBadRequest) getTokenInfoRes() {}

type GetTokenInfoInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetTokenInfoInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetTokenInfoInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetTokenInfoInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetTokenInfoInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetTokenInfoInternalServerError) getTokenInfoRes() {}

type GetUserInfoInternalServerError struct{}

func (*GetUserInfoInternalServerError) getUserInfoRes() {}

type GetUserInfoOK struct {
	User         User             `json:"user"`
	Demographics UserDemographics `json:"demographics"`
	Email        OptNilString     `json:"email"`
}

// GetUser returns the value of User.
func (s *GetUserInfoOK) GetUser() User {
	return s.User
}

// GetDemographics returns the value of Demographics.
func (s *GetUserInfoOK) GetDemographics() UserDemographics {
	return s.Demographics
}

// GetEmail returns the value of Email.
func (s *GetUserInfoOK) GetEmail() OptNilString {
	return s.Email
}

// SetUser sets the value of User.
func (s *GetUserInfoOK) SetUser(val User) {
	s.User = val
}

// SetDemographics sets the value of Demographics.
func (s *GetUserInfoOK) SetDemographics(val UserDemographics) {
	s.Demographics = val
}

// SetEmail sets the value of Email.
func (s *GetUserInfoOK) SetEmail(val OptNilString) {
	s.Email = val
}

func (*GetUserInfoOK) getUserInfoRes() {}

type GetUserListManageOrder string

const (
	GetUserListManageOrderAsc  GetUserListManageOrder = "asc"
	GetUserListManageOrderDesc GetUserListManageOrder = "desc"
)

// AllValues returns all GetUserListManageOrder values.
func (GetUserListManageOrder) AllValues() []GetUserListManageOrder {
	return []GetUserListManageOrder{
		GetUserListManageOrderAsc,
		GetUserListManageOrderDesc,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetUserListManageOrder) MarshalText() ([]byte, error) {
	switch s {
	case GetUserListManageOrderAsc:
		return []byte(s), nil
	case GetUserListManageOrderDesc:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetUserListManageOrder) UnmarshalText(data []byte) error {
	switch GetUserListManageOrder(data) {
	case GetUserListManageOrderAsc:
		*s = GetUserListManageOrderAsc
		return nil
	case GetUserListManageOrderDesc:
		*s = GetUserListManageOrderDesc
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetUserListManageOrderBy string

const (
	GetUserListManageOrderByCreatedAt   GetUserListManageOrderBy = "createdAt"
	GetUserListManageOrderByUpdatedAt   GetUserListManageOrderBy = "updatedAt"
	GetUserListManageOrderByDisplayName GetUserListManageOrderBy = "displayName"
	GetUserListManageOrderByLastLoginAt GetUserListManageOrderBy = "lastLoginAt"
)

// AllValues returns all GetUserListManageOrderBy values.
func (GetUserListManageOrderBy) AllValues() []GetUserListManageOrderBy {
	return []GetUserListManageOrderBy{
		GetUserListManageOrderByCreatedAt,
		GetUserListManageOrderByUpdatedAt,
		GetUserListManageOrderByDisplayName,
		GetUserListManageOrderByLastLoginAt,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetUserListManageOrderBy) MarshalText() ([]byte, error) {
	switch s {
	case GetUserListManageOrderByCreatedAt:
		return []byte(s), nil
	case GetUserListManageOrderByUpdatedAt:
		return []byte(s), nil
	case GetUserListManageOrderByDisplayName:
		return []byte(s), nil
	case GetUserListManageOrderByLastLoginAt:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetUserListManageOrderBy) UnmarshalText(data []byte) error {
	switch GetUserListManageOrderBy(data) {
	case GetUserListManageOrderByCreatedAt:
		*s = GetUserListManageOrderByCreatedAt
		return nil
	case GetUserListManageOrderByUpdatedAt:
		*s = GetUserListManageOrderByUpdatedAt
		return nil
	case GetUserListManageOrderByDisplayName:
		*s = GetUserListManageOrderByDisplayName
		return nil
	case GetUserListManageOrderByLastLoginAt:
		*s = GetUserListManageOrderByLastLoginAt
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type HandleAuthCallbackBadRequest struct{}

func (*HandleAuthCallbackBadRequest) handleAuthCallbackRes() {}

type HandleAuthCallbackFound struct{}

// HandleAuthCallbackFoundHeaders wraps HandleAuthCallbackFound with response headers.
type HandleAuthCallbackFoundHeaders struct {
	Location  string
	SetCookie []string
	Response  HandleAuthCallbackFound
}

// GetLocation returns the value of Location.
func (s *HandleAuthCallbackFoundHeaders) GetLocation() string {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *HandleAuthCallbackFoundHeaders) GetSetCookie() []string {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *HandleAuthCallbackFoundHeaders) GetResponse() HandleAuthCallbackFound {
	return s.Response
}

// SetLocation sets the value of Location.
func (s *HandleAuthCallbackFoundHeaders) SetLocation(val string) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *HandleAuthCallbackFoundHeaders) SetSetCookie(val []string) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *HandleAuthCallbackFoundHeaders) SetResponse(val HandleAuthCallbackFound) {
	s.Response = val
}

func (*HandleAuthCallbackFoundHeaders) handleAuthCallbackRes() {}

type HandleAuthCallbackInternalServerError struct{}

func (*HandleAuthCallbackInternalServerError) handleAuthCallbackRes() {}

type HasConsentBadRequest struct{}

func (*HasConsentBadRequest) hasConsentRes() {}

type HasConsentInternalServerError struct{}

func (*HasConsentInternalServerError) hasConsentRes() {}

type HasConsentOK struct {
	HasConsent bool `json:"hasConsent"`
}

// GetHasConsent returns the value of HasConsent.
func (s *HasConsentOK) GetHasConsent() bool {
	return s.HasConsent
}

// SetHasConsent sets the value of HasConsent.
func (s *HasConsentOK) SetHasConsent(val bool) {
	s.HasConsent = val
}

func (*HasConsentOK) hasConsentRes() {}

type HealthBadRequest struct{}

func (*HealthBadRequest) healthRes() {}

type HealthInternalServerError struct{}

func (*HealthInternalServerError) healthRes() {}

type HealthOK struct{}

func (*HealthOK) healthRes() {}

type InitiateTalkSessionBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *InitiateTalkSessionBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *InitiateTalkSessionBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *InitiateTalkSessionBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *InitiateTalkSessionBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*InitiateTalkSessionBadRequest) initiateTalkSessionRes() {}

type InitiateTalkSessionReq struct {
	Theme               string        `json:"theme"`
	ScheduledEndTime    time.Time     `json:"scheduledEndTime"`
	Latitude            OptNilFloat64 `json:"latitude"`
	Longitude           OptNilFloat64 `json:"longitude"`
	City                OptNilString  `json:"city"`
	Prefecture          OptNilString  `json:"prefecture"`
	Description         OptNilString  `json:"description"`
	ThumbnailURL        OptNilString  `json:"thumbnailURL"`
	Restrictions        []string      `json:"restrictions"`
	OrganizationAliasID OptNilString  `json:"organizationAliasID"`
}

// GetTheme returns the value of Theme.
func (s *InitiateTalkSessionReq) GetTheme() string {
	return s.Theme
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *InitiateTalkSessionReq) GetScheduledEndTime() time.Time {
	return s.ScheduledEndTime
}

// GetLatitude returns the value of Latitude.
func (s *InitiateTalkSessionReq) GetLatitude() OptNilFloat64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *InitiateTalkSessionReq) GetLongitude() OptNilFloat64 {
	return s.Longitude
}

// GetCity returns the value of City.
func (s *InitiateTalkSessionReq) GetCity() OptNilString {
	return s.City
}

// GetPrefecture returns the value of Prefecture.
func (s *InitiateTalkSessionReq) GetPrefecture() OptNilString {
	return s.Prefecture
}

// GetDescription returns the value of Description.
func (s *InitiateTalkSessionReq) GetDescription() OptNilString {
	return s.Description
}

// GetThumbnailURL returns the value of ThumbnailURL.
func (s *InitiateTalkSessionReq) GetThumbnailURL() OptNilString {
	return s.ThumbnailURL
}

// GetRestrictions returns the value of Restrictions.
func (s *InitiateTalkSessionReq) GetRestrictions() []string {
	return s.Restrictions
}

// GetOrganizationAliasID returns the value of OrganizationAliasID.
func (s *InitiateTalkSessionReq) GetOrganizationAliasID() OptNilString {
	return s.OrganizationAliasID
}

// SetTheme sets the value of Theme.
func (s *InitiateTalkSessionReq) SetTheme(val string) {
	s.Theme = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *InitiateTalkSessionReq) SetScheduledEndTime(val time.Time) {
	s.ScheduledEndTime = val
}

// SetLatitude sets the value of Latitude.
func (s *InitiateTalkSessionReq) SetLatitude(val OptNilFloat64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *InitiateTalkSessionReq) SetLongitude(val OptNilFloat64) {
	s.Longitude = val
}

// SetCity sets the value of City.
func (s *InitiateTalkSessionReq) SetCity(val OptNilString) {
	s.City = val
}

// SetPrefecture sets the value of Prefecture.
func (s *InitiateTalkSessionReq) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

// SetDescription sets the value of Description.
func (s *InitiateTalkSessionReq) SetDescription(val OptNilString) {
	s.Description = val
}

// SetThumbnailURL sets the value of ThumbnailURL.
func (s *InitiateTalkSessionReq) SetThumbnailURL(val OptNilString) {
	s.ThumbnailURL = val
}

// SetRestrictions sets the value of Restrictions.
func (s *InitiateTalkSessionReq) SetRestrictions(val []string) {
	s.Restrictions = val
}

// SetOrganizationAliasID sets the value of OrganizationAliasID.
func (s *InitiateTalkSessionReq) SetOrganizationAliasID(val OptNilString) {
	s.OrganizationAliasID = val
}

type InviteOrganizationBadRequest struct{}

func (*InviteOrganizationBadRequest) inviteOrganizationRes() {}

type InviteOrganizationForUserBadRequest struct{}

func (*InviteOrganizationForUserBadRequest) inviteOrganizationForUserRes() {}

type InviteOrganizationForUserInternalServerError struct{}

func (*InviteOrganizationForUserInternalServerError) inviteOrganizationForUserRes() {}

type InviteOrganizationForUserOK struct {
	Success bool `json:"success"`
}

// GetSuccess returns the value of Success.
func (s *InviteOrganizationForUserOK) GetSuccess() bool {
	return s.Success
}

// SetSuccess sets the value of Success.
func (s *InviteOrganizationForUserOK) SetSuccess(val bool) {
	s.Success = val
}

func (*InviteOrganizationForUserOK) inviteOrganizationForUserRes() {}

type InviteOrganizationForUserReq struct {
	DisplayID string  `json:"displayID"`
	Role      float64 `json:"role"`
}

// GetDisplayID returns the value of DisplayID.
func (s *InviteOrganizationForUserReq) GetDisplayID() string {
	return s.DisplayID
}

// GetRole returns the value of Role.
func (s *InviteOrganizationForUserReq) GetRole() float64 {
	return s.Role
}

// SetDisplayID sets the value of DisplayID.
func (s *InviteOrganizationForUserReq) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetRole sets the value of Role.
func (s *InviteOrganizationForUserReq) SetRole(val float64) {
	s.Role = val
}

type InviteOrganizationInternalServerError struct{}

func (*InviteOrganizationInternalServerError) inviteOrganizationRes() {}

type InviteOrganizationOK struct{}

func (*InviteOrganizationOK) inviteOrganizationRes() {}

type InviteOrganizationReq struct {
	Email string  `json:"email"`
	Role  float64 `json:"role"`
}

// GetEmail returns the value of Email.
func (s *InviteOrganizationReq) GetEmail() string {
	return s.Email
}

// GetRole returns the value of Role.
func (s *InviteOrganizationReq) GetRole() float64 {
	return s.Role
}

// SetEmail sets the value of Email.
func (s *InviteOrganizationReq) SetEmail(val string) {
	s.Email = val
}

// SetRole sets the value of Role.
func (s *InviteOrganizationReq) SetRole(val float64) {
	s.Role = val
}

// NewNilVote2ReqVoteStatus returns new NilVote2ReqVoteStatus with value set to v.
func NewNilVote2ReqVoteStatus(v Vote2ReqVoteStatus) NilVote2ReqVoteStatus {
	return NilVote2ReqVoteStatus{
		Value: v,
	}
}

// NilVote2ReqVoteStatus is nullable Vote2ReqVoteStatus.
type NilVote2ReqVoteStatus struct {
	Value Vote2ReqVoteStatus
	Null  bool
}

// SetTo sets value to v.
func (o *NilVote2ReqVoteStatus) SetTo(v Vote2ReqVoteStatus) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilVote2ReqVoteStatus) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilVote2ReqVoteStatus) SetToNull() {
	o.Null = true
	var v Vote2ReqVoteStatus
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilVote2ReqVoteStatus) Get() (v Vote2ReqVoteStatus, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilVote2ReqVoteStatus) Or(d Vote2ReqVoteStatus) Vote2ReqVoteStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/OffsetPagination
type OffsetPagination struct {
	TotalCount int `json:"totalCount"`
	Offset     int `json:"offset"`
	Limit      int `json:"limit"`
}

// GetTotalCount returns the value of TotalCount.
func (s *OffsetPagination) GetTotalCount() int {
	return s.TotalCount
}

// GetOffset returns the value of Offset.
func (s *OffsetPagination) GetOffset() int {
	return s.Offset
}

// GetLimit returns the value of Limit.
func (s *OffsetPagination) GetLimit() int {
	return s.Limit
}

// SetTotalCount sets the value of TotalCount.
func (s *OffsetPagination) SetTotalCount(val int) {
	s.TotalCount = val
}

// SetOffset sets the value of Offset.
func (s *OffsetPagination) SetOffset(val int) {
	s.Offset = val
}

// SetLimit sets the value of Limit.
func (s *OffsetPagination) SetLimit(val int) {
	s.Limit = val
}

// Ref: #/components/schemas/Opinion
type Opinion struct {
	// 意見ID.
	ID    string    `json:"id"`
	Title OptString `json:"title"`
	// 意見のテキスト.
	Content string `json:"content"`
	// 親の意見ID。ルートならば無し.
	ParentID OptString `json:"parentID"`
	// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
	VoteType OptNilOpinionVoteType `json:"voteType"`
	// 画像が返る場合もある.
	PictureURL OptNilString `json:"pictureURL"`
	// 参考文献URL.
	ReferenceURL OptString `json:"referenceURL"`
	PostedAt     string    `json:"postedAt"`
	IsDeleted    bool      `json:"isDeleted"`
}

// GetID returns the value of ID.
func (s *Opinion) GetID() string {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *Opinion) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *Opinion) GetContent() string {
	return s.Content
}

// GetParentID returns the value of ParentID.
func (s *Opinion) GetParentID() OptString {
	return s.ParentID
}

// GetVoteType returns the value of VoteType.
func (s *Opinion) GetVoteType() OptNilOpinionVoteType {
	return s.VoteType
}

// GetPictureURL returns the value of PictureURL.
func (s *Opinion) GetPictureURL() OptNilString {
	return s.PictureURL
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *Opinion) GetReferenceURL() OptString {
	return s.ReferenceURL
}

// GetPostedAt returns the value of PostedAt.
func (s *Opinion) GetPostedAt() string {
	return s.PostedAt
}

// GetIsDeleted returns the value of IsDeleted.
func (s *Opinion) GetIsDeleted() bool {
	return s.IsDeleted
}

// SetID sets the value of ID.
func (s *Opinion) SetID(val string) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *Opinion) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *Opinion) SetContent(val string) {
	s.Content = val
}

// SetParentID sets the value of ParentID.
func (s *Opinion) SetParentID(val OptString) {
	s.ParentID = val
}

// SetVoteType sets the value of VoteType.
func (s *Opinion) SetVoteType(val OptNilOpinionVoteType) {
	s.VoteType = val
}

// SetPictureURL sets the value of PictureURL.
func (s *Opinion) SetPictureURL(val OptNilString) {
	s.PictureURL = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *Opinion) SetReferenceURL(val OptString) {
	s.ReferenceURL = val
}

// SetPostedAt sets the value of PostedAt.
func (s *Opinion) SetPostedAt(val string) {
	s.PostedAt = val
}

// SetIsDeleted sets the value of IsDeleted.
func (s *Opinion) SetIsDeleted(val bool) {
	s.IsDeleted = val
}

type OpinionComments2BadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *OpinionComments2BadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *OpinionComments2BadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *OpinionComments2BadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *OpinionComments2BadRequest) SetMessage(val string) {
	s.Message = val
}

func (*OpinionComments2BadRequest) opinionComments2Res() {}

type OpinionComments2InternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *OpinionComments2InternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *OpinionComments2InternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *OpinionComments2InternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *OpinionComments2InternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*OpinionComments2InternalServerError) opinionComments2Res() {}

type OpinionComments2OK struct {
	Opinions []OpinionComments2OKOpinionsItem `json:"opinions"`
}

// GetOpinions returns the value of Opinions.
func (s *OpinionComments2OK) GetOpinions() []OpinionComments2OKOpinionsItem {
	return s.Opinions
}

// SetOpinions sets the value of Opinions.
func (s *OpinionComments2OK) SetOpinions(val []OpinionComments2OKOpinionsItem) {
	s.Opinions = val
}

func (*OpinionComments2OK) opinionComments2Res() {}

type OpinionComments2OKOpinionsItem struct {
	Opinion    Opinion                                        `json:"opinion"`
	User       User                                           `json:"user"`
	MyVoteType OptNilOpinionComments2OKOpinionsItemMyVoteType `json:"myVoteType"`
}

// GetOpinion returns the value of Opinion.
func (s *OpinionComments2OKOpinionsItem) GetOpinion() Opinion {
	return s.Opinion
}

// GetUser returns the value of User.
func (s *OpinionComments2OKOpinionsItem) GetUser() User {
	return s.User
}

// GetMyVoteType returns the value of MyVoteType.
func (s *OpinionComments2OKOpinionsItem) GetMyVoteType() OptNilOpinionComments2OKOpinionsItemMyVoteType {
	return s.MyVoteType
}

// SetOpinion sets the value of Opinion.
func (s *OpinionComments2OKOpinionsItem) SetOpinion(val Opinion) {
	s.Opinion = val
}

// SetUser sets the value of User.
func (s *OpinionComments2OKOpinionsItem) SetUser(val User) {
	s.User = val
}

// SetMyVoteType sets the value of MyVoteType.
func (s *OpinionComments2OKOpinionsItem) SetMyVoteType(val OptNilOpinionComments2OKOpinionsItemMyVoteType) {
	s.MyVoteType = val
}

// 投票タイプ.
type OpinionComments2OKOpinionsItemMyVoteType string

const (
	OpinionComments2OKOpinionsItemMyVoteTypeAgree    OpinionComments2OKOpinionsItemMyVoteType = "agree"
	OpinionComments2OKOpinionsItemMyVoteTypeDisagree OpinionComments2OKOpinionsItemMyVoteType = "disagree"
	OpinionComments2OKOpinionsItemMyVoteTypePass     OpinionComments2OKOpinionsItemMyVoteType = "pass"
)

// AllValues returns all OpinionComments2OKOpinionsItemMyVoteType values.
func (OpinionComments2OKOpinionsItemMyVoteType) AllValues() []OpinionComments2OKOpinionsItemMyVoteType {
	return []OpinionComments2OKOpinionsItemMyVoteType{
		OpinionComments2OKOpinionsItemMyVoteTypeAgree,
		OpinionComments2OKOpinionsItemMyVoteTypeDisagree,
		OpinionComments2OKOpinionsItemMyVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OpinionComments2OKOpinionsItemMyVoteType) MarshalText() ([]byte, error) {
	switch s {
	case OpinionComments2OKOpinionsItemMyVoteTypeAgree:
		return []byte(s), nil
	case OpinionComments2OKOpinionsItemMyVoteTypeDisagree:
		return []byte(s), nil
	case OpinionComments2OKOpinionsItemMyVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OpinionComments2OKOpinionsItemMyVoteType) UnmarshalText(data []byte) error {
	switch OpinionComments2OKOpinionsItemMyVoteType(data) {
	case OpinionComments2OKOpinionsItemMyVoteTypeAgree:
		*s = OpinionComments2OKOpinionsItemMyVoteTypeAgree
		return nil
	case OpinionComments2OKOpinionsItemMyVoteTypeDisagree:
		*s = OpinionComments2OKOpinionsItemMyVoteTypeDisagree
		return nil
	case OpinionComments2OKOpinionsItemMyVoteTypePass:
		*s = OpinionComments2OKOpinionsItemMyVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/OpinionGroupRatio
type OpinionGroupRatio struct {
	AgreeCount    int    `json:"agreeCount"`
	DisagreeCount int    `json:"disagreeCount"`
	PassCount     int    `json:"passCount"`
	GroupID       int    `json:"groupID"`
	GroupName     string `json:"groupName"`
}

// GetAgreeCount returns the value of AgreeCount.
func (s *OpinionGroupRatio) GetAgreeCount() int {
	return s.AgreeCount
}

// GetDisagreeCount returns the value of DisagreeCount.
func (s *OpinionGroupRatio) GetDisagreeCount() int {
	return s.DisagreeCount
}

// GetPassCount returns the value of PassCount.
func (s *OpinionGroupRatio) GetPassCount() int {
	return s.PassCount
}

// GetGroupID returns the value of GroupID.
func (s *OpinionGroupRatio) GetGroupID() int {
	return s.GroupID
}

// GetGroupName returns the value of GroupName.
func (s *OpinionGroupRatio) GetGroupName() string {
	return s.GroupName
}

// SetAgreeCount sets the value of AgreeCount.
func (s *OpinionGroupRatio) SetAgreeCount(val int) {
	s.AgreeCount = val
}

// SetDisagreeCount sets the value of DisagreeCount.
func (s *OpinionGroupRatio) SetDisagreeCount(val int) {
	s.DisagreeCount = val
}

// SetPassCount sets the value of PassCount.
func (s *OpinionGroupRatio) SetPassCount(val int) {
	s.PassCount = val
}

// SetGroupID sets the value of GroupID.
func (s *OpinionGroupRatio) SetGroupID(val int) {
	s.GroupID = val
}

// SetGroupName sets the value of GroupName.
func (s *OpinionGroupRatio) SetGroupName(val string) {
	s.GroupName = val
}

// 投票タイプ.
type OpinionVoteType string

const (
	OpinionVoteTypeAgree    OpinionVoteType = "agree"
	OpinionVoteTypeDisagree OpinionVoteType = "disagree"
	OpinionVoteTypePass     OpinionVoteType = "pass"
)

// AllValues returns all OpinionVoteType values.
func (OpinionVoteType) AllValues() []OpinionVoteType {
	return []OpinionVoteType{
		OpinionVoteTypeAgree,
		OpinionVoteTypeDisagree,
		OpinionVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OpinionVoteType) MarshalText() ([]byte, error) {
	switch s {
	case OpinionVoteTypeAgree:
		return []byte(s), nil
	case OpinionVoteTypeDisagree:
		return []byte(s), nil
	case OpinionVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OpinionVoteType) UnmarshalText(data []byte) error {
	switch OpinionVoteType(data) {
	case OpinionVoteTypeAgree:
		*s = OpinionVoteTypeAgree
		return nil
	case OpinionVoteTypeDisagree:
		*s = OpinionVoteTypeDisagree
		return nil
	case OpinionVoteTypePass:
		*s = OpinionVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type OpinionsHistoryBadRequest struct{}

func (*OpinionsHistoryBadRequest) opinionsHistoryRes() {}

type OpinionsHistoryInternalServerError struct{}

func (*OpinionsHistoryInternalServerError) opinionsHistoryRes() {}

type OpinionsHistoryOK struct {
	Opinions   []OpinionsHistoryOKOpinionsItem `json:"opinions"`
	Pagination OpinionsHistoryOKPagination     `json:"pagination"`
}

// GetOpinions returns the value of Opinions.
func (s *OpinionsHistoryOK) GetOpinions() []OpinionsHistoryOKOpinionsItem {
	return s.Opinions
}

// GetPagination returns the value of Pagination.
func (s *OpinionsHistoryOK) GetPagination() OpinionsHistoryOKPagination {
	return s.Pagination
}

// SetOpinions sets the value of Opinions.
func (s *OpinionsHistoryOK) SetOpinions(val []OpinionsHistoryOKOpinionsItem) {
	s.Opinions = val
}

// SetPagination sets the value of Pagination.
func (s *OpinionsHistoryOK) SetPagination(val OpinionsHistoryOKPagination) {
	s.Pagination = val
}

func (*OpinionsHistoryOK) opinionsHistoryRes() {}

type OpinionsHistoryOKOpinionsItem struct {
	User       User    `json:"user"`
	Opinion    Opinion `json:"opinion"`
	ReplyCount int     `json:"replyCount"`
}

// GetUser returns the value of User.
func (s *OpinionsHistoryOKOpinionsItem) GetUser() User {
	return s.User
}

// GetOpinion returns the value of Opinion.
func (s *OpinionsHistoryOKOpinionsItem) GetOpinion() Opinion {
	return s.Opinion
}

// GetReplyCount returns the value of ReplyCount.
func (s *OpinionsHistoryOKOpinionsItem) GetReplyCount() int {
	return s.ReplyCount
}

// SetUser sets the value of User.
func (s *OpinionsHistoryOKOpinionsItem) SetUser(val User) {
	s.User = val
}

// SetOpinion sets the value of Opinion.
func (s *OpinionsHistoryOKOpinionsItem) SetOpinion(val Opinion) {
	s.Opinion = val
}

// SetReplyCount sets the value of ReplyCount.
func (s *OpinionsHistoryOKOpinionsItem) SetReplyCount(val int) {
	s.ReplyCount = val
}

type OpinionsHistoryOKPagination struct {
	TotalCount int `json:"totalCount"`
}

// GetTotalCount returns the value of TotalCount.
func (s *OpinionsHistoryOKPagination) GetTotalCount() int {
	return s.TotalCount
}

// SetTotalCount sets the value of TotalCount.
func (s *OpinionsHistoryOKPagination) SetTotalCount(val int) {
	s.TotalCount = val
}

type OpinionsHistorySort string

const (
	OpinionsHistorySortLatest      OpinionsHistorySort = "latest"
	OpinionsHistorySortMostReplies OpinionsHistorySort = "mostReplies"
	OpinionsHistorySortOldest      OpinionsHistorySort = "oldest"
)

// AllValues returns all OpinionsHistorySort values.
func (OpinionsHistorySort) AllValues() []OpinionsHistorySort {
	return []OpinionsHistorySort{
		OpinionsHistorySortLatest,
		OpinionsHistorySortMostReplies,
		OpinionsHistorySortOldest,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OpinionsHistorySort) MarshalText() ([]byte, error) {
	switch s {
	case OpinionsHistorySortLatest:
		return []byte(s), nil
	case OpinionsHistorySortMostReplies:
		return []byte(s), nil
	case OpinionsHistorySortOldest:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OpinionsHistorySort) UnmarshalText(data []byte) error {
	switch OpinionsHistorySort(data) {
	case OpinionsHistorySortLatest:
		*s = OpinionsHistorySortLatest
		return nil
	case OpinionsHistorySortMostReplies:
		*s = OpinionsHistorySortMostReplies
		return nil
	case OpinionsHistorySortOldest:
		*s = OpinionsHistorySortOldest
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetReportsForTalkSessionStatus returns new OptGetReportsForTalkSessionStatus with value set to v.
func NewOptGetReportsForTalkSessionStatus(v GetReportsForTalkSessionStatus) OptGetReportsForTalkSessionStatus {
	return OptGetReportsForTalkSessionStatus{
		Value: v,
		Set:   true,
	}
}

// OptGetReportsForTalkSessionStatus is optional GetReportsForTalkSessionStatus.
type OptGetReportsForTalkSessionStatus struct {
	Value GetReportsForTalkSessionStatus
	Set   bool
}

// IsSet returns true if OptGetReportsForTalkSessionStatus was set.
func (o OptGetReportsForTalkSessionStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetReportsForTalkSessionStatus) Reset() {
	var v GetReportsForTalkSessionStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetReportsForTalkSessionStatus) SetTo(v GetReportsForTalkSessionStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetReportsForTalkSessionStatus) Get() (v GetReportsForTalkSessionStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetReportsForTalkSessionStatus) Or(d GetReportsForTalkSessionStatus) GetReportsForTalkSessionStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetTalkSessionListManageStatus returns new OptGetTalkSessionListManageStatus with value set to v.
func NewOptGetTalkSessionListManageStatus(v GetTalkSessionListManageStatus) OptGetTalkSessionListManageStatus {
	return OptGetTalkSessionListManageStatus{
		Value: v,
		Set:   true,
	}
}

// OptGetTalkSessionListManageStatus is optional GetTalkSessionListManageStatus.
type OptGetTalkSessionListManageStatus struct {
	Value GetTalkSessionListManageStatus
	Set   bool
}

// IsSet returns true if OptGetTalkSessionListManageStatus was set.
func (o OptGetTalkSessionListManageStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetTalkSessionListManageStatus) Reset() {
	var v GetTalkSessionListManageStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetTalkSessionListManageStatus) SetTo(v GetTalkSessionListManageStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetTalkSessionListManageStatus) Get() (v GetTalkSessionListManageStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetTalkSessionListManageStatus) Or(d GetTalkSessionListManageStatus) GetTalkSessionListManageStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetTalkSessionListSortKey returns new OptGetTalkSessionListSortKey with value set to v.
func NewOptGetTalkSessionListSortKey(v GetTalkSessionListSortKey) OptGetTalkSessionListSortKey {
	return OptGetTalkSessionListSortKey{
		Value: v,
		Set:   true,
	}
}

// OptGetTalkSessionListSortKey is optional GetTalkSessionListSortKey.
type OptGetTalkSessionListSortKey struct {
	Value GetTalkSessionListSortKey
	Set   bool
}

// IsSet returns true if OptGetTalkSessionListSortKey was set.
func (o OptGetTalkSessionListSortKey) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetTalkSessionListSortKey) Reset() {
	var v GetTalkSessionListSortKey
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetTalkSessionListSortKey) SetTo(v GetTalkSessionListSortKey) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetTalkSessionListSortKey) Get() (v GetTalkSessionListSortKey, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetTalkSessionListSortKey) Or(d GetTalkSessionListSortKey) GetTalkSessionListSortKey {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetUserListManageOrder returns new OptGetUserListManageOrder with value set to v.
func NewOptGetUserListManageOrder(v GetUserListManageOrder) OptGetUserListManageOrder {
	return OptGetUserListManageOrder{
		Value: v,
		Set:   true,
	}
}

// OptGetUserListManageOrder is optional GetUserListManageOrder.
type OptGetUserListManageOrder struct {
	Value GetUserListManageOrder
	Set   bool
}

// IsSet returns true if OptGetUserListManageOrder was set.
func (o OptGetUserListManageOrder) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetUserListManageOrder) Reset() {
	var v GetUserListManageOrder
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetUserListManageOrder) SetTo(v GetUserListManageOrder) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetUserListManageOrder) Get() (v GetUserListManageOrder, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetUserListManageOrder) Or(d GetUserListManageOrder) GetUserListManageOrder {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetUserListManageOrderBy returns new OptGetUserListManageOrderBy with value set to v.
func NewOptGetUserListManageOrderBy(v GetUserListManageOrderBy) OptGetUserListManageOrderBy {
	return OptGetUserListManageOrderBy{
		Value: v,
		Set:   true,
	}
}

// OptGetUserListManageOrderBy is optional GetUserListManageOrderBy.
type OptGetUserListManageOrderBy struct {
	Value GetUserListManageOrderBy
	Set   bool
}

// IsSet returns true if OptGetUserListManageOrderBy was set.
func (o OptGetUserListManageOrderBy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetUserListManageOrderBy) Reset() {
	var v GetUserListManageOrderBy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetUserListManageOrderBy) SetTo(v GetUserListManageOrderBy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetUserListManageOrderBy) Get() (v GetUserListManageOrderBy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetUserListManageOrderBy) Or(d GetUserListManageOrderBy) GetUserListManageOrderBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMultipartFile returns new OptMultipartFile with value set to v.
func NewOptMultipartFile(v ht.MultipartFile) OptMultipartFile {
	return OptMultipartFile{
		Value: v,
		Set:   true,
	}
}

// OptMultipartFile is optional ht.MultipartFile.
type OptMultipartFile struct {
	Value ht.MultipartFile
	Set   bool
}

// IsSet returns true if OptMultipartFile was set.
func (o OptMultipartFile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMultipartFile) Reset() {
	var v ht.MultipartFile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMultipartFile) SetTo(v ht.MultipartFile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMultipartFile) Get() (v ht.MultipartFile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMultipartFile) Or(d ht.MultipartFile) ht.MultipartFile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBool returns new OptNilBool with value set to v.
func NewOptNilBool(v bool) OptNilBool {
	return OptNilBool{
		Value: v,
		Set:   true,
	}
}

// OptNilBool is optional nullable bool.
type OptNilBool struct {
	Value bool
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBool was set.
func (o OptNilBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBool) SetTo(v bool) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilBool) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilBool) SetToNull() {
	o.Set = true
	o.Null = true
	var v bool
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilEstablishUserReqGender returns new OptNilEstablishUserReqGender with value set to v.
func NewOptNilEstablishUserReqGender(v EstablishUserReqGender) OptNilEstablishUserReqGender {
	return OptNilEstablishUserReqGender{
		Value: v,
		Set:   true,
	}
}

// OptNilEstablishUserReqGender is optional nullable EstablishUserReqGender.
type OptNilEstablishUserReqGender struct {
	Value EstablishUserReqGender
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilEstablishUserReqGender was set.
func (o OptNilEstablishUserReqGender) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilEstablishUserReqGender) Reset() {
	var v EstablishUserReqGender
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilEstablishUserReqGender) SetTo(v EstablishUserReqGender) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilEstablishUserReqGender) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilEstablishUserReqGender) SetToNull() {
	o.Set = true
	o.Null = true
	var v EstablishUserReqGender
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilEstablishUserReqGender) Get() (v EstablishUserReqGender, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilEstablishUserReqGender) Or(d EstablishUserReqGender) EstablishUserReqGender {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFloat64 returns new OptNilFloat64 with value set to v.
func NewOptNilFloat64(v float64) OptNilFloat64 {
	return OptNilFloat64{
		Value: v,
		Set:   true,
	}
}

// OptNilFloat64 is optional nullable float64.
type OptNilFloat64 struct {
	Value float64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFloat64 was set.
func (o OptNilFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFloat64) SetTo(v float64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilFloat64) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilFloat64) SetToNull() {
	o.Set = true
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilGetOpenedTalkSessionStatus returns new OptNilGetOpenedTalkSessionStatus with value set to v.
func NewOptNilGetOpenedTalkSessionStatus(v GetOpenedTalkSessionStatus) OptNilGetOpenedTalkSessionStatus {
	return OptNilGetOpenedTalkSessionStatus{
		Value: v,
		Set:   true,
	}
}

// OptNilGetOpenedTalkSessionStatus is optional nullable GetOpenedTalkSessionStatus.
type OptNilGetOpenedTalkSessionStatus struct {
	Value GetOpenedTalkSessionStatus
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGetOpenedTalkSessionStatus was set.
func (o OptNilGetOpenedTalkSessionStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGetOpenedTalkSessionStatus) Reset() {
	var v GetOpenedTalkSessionStatus
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGetOpenedTalkSessionStatus) SetTo(v GetOpenedTalkSessionStatus) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilGetOpenedTalkSessionStatus) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilGetOpenedTalkSessionStatus) SetToNull() {
	o.Set = true
	o.Null = true
	var v GetOpenedTalkSessionStatus
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGetOpenedTalkSessionStatus) Get() (v GetOpenedTalkSessionStatus, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilGetOpenedTalkSessionStatus) Or(d GetOpenedTalkSessionStatus) GetOpenedTalkSessionStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilGetOpinionDetail2OKMyVoteType returns new OptNilGetOpinionDetail2OKMyVoteType with value set to v.
func NewOptNilGetOpinionDetail2OKMyVoteType(v GetOpinionDetail2OKMyVoteType) OptNilGetOpinionDetail2OKMyVoteType {
	return OptNilGetOpinionDetail2OKMyVoteType{
		Value: v,
		Set:   true,
	}
}

// OptNilGetOpinionDetail2OKMyVoteType is optional nullable GetOpinionDetail2OKMyVoteType.
type OptNilGetOpinionDetail2OKMyVoteType struct {
	Value GetOpinionDetail2OKMyVoteType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGetOpinionDetail2OKMyVoteType was set.
func (o OptNilGetOpinionDetail2OKMyVoteType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGetOpinionDetail2OKMyVoteType) Reset() {
	var v GetOpinionDetail2OKMyVoteType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGetOpinionDetail2OKMyVoteType) SetTo(v GetOpinionDetail2OKMyVoteType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilGetOpinionDetail2OKMyVoteType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilGetOpinionDetail2OKMyVoteType) SetToNull() {
	o.Set = true
	o.Null = true
	var v GetOpinionDetail2OKMyVoteType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGetOpinionDetail2OKMyVoteType) Get() (v GetOpinionDetail2OKMyVoteType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilGetOpinionDetail2OKMyVoteType) Or(d GetOpinionDetail2OKMyVoteType) GetOpinionDetail2OKMyVoteType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType returns new OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType with value set to v.
func NewOptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType(v GetOpinionsForTalkSessionOKOpinionsItemMyVoteType) OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType {
	return OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType{
		Value: v,
		Set:   true,
	}
}

// OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType is optional nullable GetOpinionsForTalkSessionOKOpinionsItemMyVoteType.
type OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType struct {
	Value GetOpinionsForTalkSessionOKOpinionsItemMyVoteType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType was set.
func (o OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType) Reset() {
	var v GetOpinionsForTalkSessionOKOpinionsItemMyVoteType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType) SetTo(v GetOpinionsForTalkSessionOKOpinionsItemMyVoteType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType) SetToNull() {
	o.Set = true
	o.Null = true
	var v GetOpinionsForTalkSessionOKOpinionsItemMyVoteType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType) Get() (v GetOpinionsForTalkSessionOKOpinionsItemMyVoteType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilGetOpinionsForTalkSessionOKOpinionsItemMyVoteType) Or(d GetOpinionsForTalkSessionOKOpinionsItemMyVoteType) GetOpinionsForTalkSessionOKOpinionsItemMyVoteType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilGetOpinionsForTalkSessionSort returns new OptNilGetOpinionsForTalkSessionSort with value set to v.
func NewOptNilGetOpinionsForTalkSessionSort(v GetOpinionsForTalkSessionSort) OptNilGetOpinionsForTalkSessionSort {
	return OptNilGetOpinionsForTalkSessionSort{
		Value: v,
		Set:   true,
	}
}

// OptNilGetOpinionsForTalkSessionSort is optional nullable GetOpinionsForTalkSessionSort.
type OptNilGetOpinionsForTalkSessionSort struct {
	Value GetOpinionsForTalkSessionSort
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGetOpinionsForTalkSessionSort was set.
func (o OptNilGetOpinionsForTalkSessionSort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGetOpinionsForTalkSessionSort) Reset() {
	var v GetOpinionsForTalkSessionSort
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGetOpinionsForTalkSessionSort) SetTo(v GetOpinionsForTalkSessionSort) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilGetOpinionsForTalkSessionSort) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilGetOpinionsForTalkSessionSort) SetToNull() {
	o.Set = true
	o.Null = true
	var v GetOpinionsForTalkSessionSort
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGetOpinionsForTalkSessionSort) Get() (v GetOpinionsForTalkSessionSort, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilGetOpinionsForTalkSessionSort) Or(d GetOpinionsForTalkSessionSort) GetOpinionsForTalkSessionSort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilGetTalkSessionListStatus returns new OptNilGetTalkSessionListStatus with value set to v.
func NewOptNilGetTalkSessionListStatus(v GetTalkSessionListStatus) OptNilGetTalkSessionListStatus {
	return OptNilGetTalkSessionListStatus{
		Value: v,
		Set:   true,
	}
}

// OptNilGetTalkSessionListStatus is optional nullable GetTalkSessionListStatus.
type OptNilGetTalkSessionListStatus struct {
	Value GetTalkSessionListStatus
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGetTalkSessionListStatus was set.
func (o OptNilGetTalkSessionListStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGetTalkSessionListStatus) Reset() {
	var v GetTalkSessionListStatus
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGetTalkSessionListStatus) SetTo(v GetTalkSessionListStatus) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilGetTalkSessionListStatus) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilGetTalkSessionListStatus) SetToNull() {
	o.Set = true
	o.Null = true
	var v GetTalkSessionListStatus
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGetTalkSessionListStatus) Get() (v GetTalkSessionListStatus, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilGetTalkSessionListStatus) Or(d GetTalkSessionListStatus) GetTalkSessionListStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilInt) SetToNull() {
	o.Set = true
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilOpinionComments2OKOpinionsItemMyVoteType returns new OptNilOpinionComments2OKOpinionsItemMyVoteType with value set to v.
func NewOptNilOpinionComments2OKOpinionsItemMyVoteType(v OpinionComments2OKOpinionsItemMyVoteType) OptNilOpinionComments2OKOpinionsItemMyVoteType {
	return OptNilOpinionComments2OKOpinionsItemMyVoteType{
		Value: v,
		Set:   true,
	}
}

// OptNilOpinionComments2OKOpinionsItemMyVoteType is optional nullable OpinionComments2OKOpinionsItemMyVoteType.
type OptNilOpinionComments2OKOpinionsItemMyVoteType struct {
	Value OpinionComments2OKOpinionsItemMyVoteType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilOpinionComments2OKOpinionsItemMyVoteType was set.
func (o OptNilOpinionComments2OKOpinionsItemMyVoteType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilOpinionComments2OKOpinionsItemMyVoteType) Reset() {
	var v OpinionComments2OKOpinionsItemMyVoteType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilOpinionComments2OKOpinionsItemMyVoteType) SetTo(v OpinionComments2OKOpinionsItemMyVoteType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilOpinionComments2OKOpinionsItemMyVoteType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilOpinionComments2OKOpinionsItemMyVoteType) SetToNull() {
	o.Set = true
	o.Null = true
	var v OpinionComments2OKOpinionsItemMyVoteType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilOpinionComments2OKOpinionsItemMyVoteType) Get() (v OpinionComments2OKOpinionsItemMyVoteType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilOpinionComments2OKOpinionsItemMyVoteType) Or(d OpinionComments2OKOpinionsItemMyVoteType) OpinionComments2OKOpinionsItemMyVoteType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilOpinionVoteType returns new OptNilOpinionVoteType with value set to v.
func NewOptNilOpinionVoteType(v OpinionVoteType) OptNilOpinionVoteType {
	return OptNilOpinionVoteType{
		Value: v,
		Set:   true,
	}
}

// OptNilOpinionVoteType is optional nullable OpinionVoteType.
type OptNilOpinionVoteType struct {
	Value OpinionVoteType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilOpinionVoteType was set.
func (o OptNilOpinionVoteType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilOpinionVoteType) Reset() {
	var v OpinionVoteType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilOpinionVoteType) SetTo(v OpinionVoteType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilOpinionVoteType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilOpinionVoteType) SetToNull() {
	o.Set = true
	o.Null = true
	var v OpinionVoteType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilOpinionVoteType) Get() (v OpinionVoteType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilOpinionVoteType) Or(d OpinionVoteType) OpinionVoteType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilOpinionsHistorySort returns new OptNilOpinionsHistorySort with value set to v.
func NewOptNilOpinionsHistorySort(v OpinionsHistorySort) OptNilOpinionsHistorySort {
	return OptNilOpinionsHistorySort{
		Value: v,
		Set:   true,
	}
}

// OptNilOpinionsHistorySort is optional nullable OpinionsHistorySort.
type OptNilOpinionsHistorySort struct {
	Value OpinionsHistorySort
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilOpinionsHistorySort was set.
func (o OptNilOpinionsHistorySort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilOpinionsHistorySort) Reset() {
	var v OpinionsHistorySort
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilOpinionsHistorySort) SetTo(v OpinionsHistorySort) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilOpinionsHistorySort) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilOpinionsHistorySort) SetToNull() {
	o.Set = true
	o.Null = true
	var v OpinionsHistorySort
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilOpinionsHistorySort) Get() (v OpinionsHistorySort, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilOpinionsHistorySort) Or(d OpinionsHistorySort) OpinionsHistorySort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilSessionsHistoryStatus returns new OptNilSessionsHistoryStatus with value set to v.
func NewOptNilSessionsHistoryStatus(v SessionsHistoryStatus) OptNilSessionsHistoryStatus {
	return OptNilSessionsHistoryStatus{
		Value: v,
		Set:   true,
	}
}

// OptNilSessionsHistoryStatus is optional nullable SessionsHistoryStatus.
type OptNilSessionsHistoryStatus struct {
	Value SessionsHistoryStatus
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilSessionsHistoryStatus was set.
func (o OptNilSessionsHistoryStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilSessionsHistoryStatus) Reset() {
	var v SessionsHistoryStatus
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilSessionsHistoryStatus) SetTo(v SessionsHistoryStatus) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilSessionsHistoryStatus) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilSessionsHistoryStatus) SetToNull() {
	o.Set = true
	o.Null = true
	var v SessionsHistoryStatus
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilSessionsHistoryStatus) Get() (v SessionsHistoryStatus, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilSessionsHistoryStatus) Or(d SessionsHistoryStatus) SessionsHistoryStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUpdateUserProfileReqGender returns new OptNilUpdateUserProfileReqGender with value set to v.
func NewOptNilUpdateUserProfileReqGender(v UpdateUserProfileReqGender) OptNilUpdateUserProfileReqGender {
	return OptNilUpdateUserProfileReqGender{
		Value: v,
		Set:   true,
	}
}

// OptNilUpdateUserProfileReqGender is optional nullable UpdateUserProfileReqGender.
type OptNilUpdateUserProfileReqGender struct {
	Value UpdateUserProfileReqGender
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUpdateUserProfileReqGender was set.
func (o OptNilUpdateUserProfileReqGender) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUpdateUserProfileReqGender) Reset() {
	var v UpdateUserProfileReqGender
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUpdateUserProfileReqGender) SetTo(v UpdateUserProfileReqGender) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUpdateUserProfileReqGender) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilUpdateUserProfileReqGender) SetToNull() {
	o.Set = true
	o.Null = true
	var v UpdateUserProfileReqGender
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUpdateUserProfileReqGender) Get() (v UpdateUserProfileReqGender, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUpdateUserProfileReqGender) Or(d UpdateUserProfileReqGender) UpdateUserProfileReqGender {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOrganization returns new OptOrganization with value set to v.
func NewOptOrganization(v Organization) OptOrganization {
	return OptOrganization{
		Value: v,
		Set:   true,
	}
}

// OptOrganization is optional Organization.
type OptOrganization struct {
	Value Organization
	Set   bool
}

// IsSet returns true if OptOrganization was set.
func (o OptOrganization) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrganization) Reset() {
	var v Organization
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrganization) SetTo(v Organization) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrganization) Get() (v Organization, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOrganization) Or(d Organization) Organization {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTalkSessionLocation returns new OptTalkSessionLocation with value set to v.
func NewOptTalkSessionLocation(v TalkSessionLocation) OptTalkSessionLocation {
	return OptTalkSessionLocation{
		Value: v,
		Set:   true,
	}
}

// OptTalkSessionLocation is optional TalkSessionLocation.
type OptTalkSessionLocation struct {
	Value TalkSessionLocation
	Set   bool
}

// IsSet returns true if OptTalkSessionLocation was set.
func (o OptTalkSessionLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTalkSessionLocation) Reset() {
	var v TalkSessionLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTalkSessionLocation) SetTo(v TalkSessionLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTalkSessionLocation) Get() (v TalkSessionLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTalkSessionLocation) Or(d TalkSessionLocation) TalkSessionLocation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserGroupPosition returns new OptUserGroupPosition with value set to v.
func NewOptUserGroupPosition(v UserGroupPosition) OptUserGroupPosition {
	return OptUserGroupPosition{
		Value: v,
		Set:   true,
	}
}

// OptUserGroupPosition is optional UserGroupPosition.
type OptUserGroupPosition struct {
	Value UserGroupPosition
	Set   bool
}

// IsSet returns true if OptUserGroupPosition was set.
func (o OptUserGroupPosition) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserGroupPosition) Reset() {
	var v UserGroupPosition
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserGroupPosition) SetTo(v UserGroupPosition) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserGroupPosition) Get() (v UserGroupPosition, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserGroupPosition) Or(d UserGroupPosition) UserGroupPosition {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Organization
type Organization struct {
	// 組織ID.
	ID string `json:"ID"`
	// 組織名.
	Name string `json:"name"`
	// 組織コード.
	Code string `json:"code"`
	// 組織のタイプ.
	Type     int    `json:"type"`
	RoleName string `json:"roleName"`
	// ロール.
	Role int `json:"role"`
}

// GetID returns the value of ID.
func (s *Organization) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *Organization) GetName() string {
	return s.Name
}

// GetCode returns the value of Code.
func (s *Organization) GetCode() string {
	return s.Code
}

// GetType returns the value of Type.
func (s *Organization) GetType() int {
	return s.Type
}

// GetRoleName returns the value of RoleName.
func (s *Organization) GetRoleName() string {
	return s.RoleName
}

// GetRole returns the value of Role.
func (s *Organization) GetRole() int {
	return s.Role
}

// SetID sets the value of ID.
func (s *Organization) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Organization) SetName(val string) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *Organization) SetCode(val string) {
	s.Code = val
}

// SetType sets the value of Type.
func (s *Organization) SetType(val int) {
	s.Type = val
}

// SetRoleName sets the value of RoleName.
func (s *Organization) SetRoleName(val string) {
	s.RoleName = val
}

// SetRole sets the value of Role.
func (s *Organization) SetRole(val int) {
	s.Role = val
}

type PasswordLoginBadRequest struct{}

func (*PasswordLoginBadRequest) passwordLoginRes() {}

type PasswordLoginInternalServerError struct{}

func (*PasswordLoginInternalServerError) passwordLoginRes() {}

type PasswordLoginOK struct{}

func (*PasswordLoginOK) passwordLoginRes() {}

type PasswordLoginReq struct {
	IdOrEmail string `json:"idOrEmail"`
	Password  string `json:"password"`
}

// GetIdOrEmail returns the value of IdOrEmail.
func (s *PasswordLoginReq) GetIdOrEmail() string {
	return s.IdOrEmail
}

// GetPassword returns the value of Password.
func (s *PasswordLoginReq) GetPassword() string {
	return s.Password
}

// SetIdOrEmail sets the value of IdOrEmail.
func (s *PasswordLoginReq) SetIdOrEmail(val string) {
	s.IdOrEmail = val
}

// SetPassword sets the value of Password.
func (s *PasswordLoginReq) SetPassword(val string) {
	s.Password = val
}

type PasswordRegisterBadRequest struct{}

func (*PasswordRegisterBadRequest) passwordRegisterRes() {}

type PasswordRegisterInternalServerError struct{}

func (*PasswordRegisterInternalServerError) passwordRegisterRes() {}

type PasswordRegisterOK struct{}

func (*PasswordRegisterOK) passwordRegisterRes() {}

type PasswordRegisterReq struct {
	ID       string `json:"id"`
	Password string `json:"password"`
	Email    string `json:"email"`
}

// GetID returns the value of ID.
func (s *PasswordRegisterReq) GetID() string {
	return s.ID
}

// GetPassword returns the value of Password.
func (s *PasswordRegisterReq) GetPassword() string {
	return s.Password
}

// GetEmail returns the value of Email.
func (s *PasswordRegisterReq) GetEmail() string {
	return s.Email
}

// SetID sets the value of ID.
func (s *PasswordRegisterReq) SetID(val string) {
	s.ID = val
}

// SetPassword sets the value of Password.
func (s *PasswordRegisterReq) SetPassword(val string) {
	s.Password = val
}

// SetEmail sets the value of Email.
func (s *PasswordRegisterReq) SetEmail(val string) {
	s.Email = val
}

type PolicyConsentBadRequest struct{}

func (*PolicyConsentBadRequest) policyConsentRes() {}

type PolicyConsentInternalServerError struct{}

func (*PolicyConsentInternalServerError) policyConsentRes() {}

type PolicyConsentReq struct {
	PolicyVersion string `json:"policyVersion"`
}

// GetPolicyVersion returns the value of PolicyVersion.
func (s *PolicyConsentReq) GetPolicyVersion() string {
	return s.PolicyVersion
}

// SetPolicyVersion sets the value of PolicyVersion.
func (s *PolicyConsentReq) SetPolicyVersion(val string) {
	s.PolicyVersion = val
}

// Ref: #/components/schemas/PolicyConsentStatus
type PolicyConsentStatus struct {
	// 最新ポリシーのバージョン.
	PolicyVersion string `json:"policyVersion"`
	// 同意した日時.
	ConsentedAt OptNilString `json:"consentedAt"`
	// 同意したか.
	ConsentGiven bool `json:"consentGiven"`
}

// GetPolicyVersion returns the value of PolicyVersion.
func (s *PolicyConsentStatus) GetPolicyVersion() string {
	return s.PolicyVersion
}

// GetConsentedAt returns the value of ConsentedAt.
func (s *PolicyConsentStatus) GetConsentedAt() OptNilString {
	return s.ConsentedAt
}

// GetConsentGiven returns the value of ConsentGiven.
func (s *PolicyConsentStatus) GetConsentGiven() bool {
	return s.ConsentGiven
}

// SetPolicyVersion sets the value of PolicyVersion.
func (s *PolicyConsentStatus) SetPolicyVersion(val string) {
	s.PolicyVersion = val
}

// SetConsentedAt sets the value of ConsentedAt.
func (s *PolicyConsentStatus) SetConsentedAt(val OptNilString) {
	s.ConsentedAt = val
}

// SetConsentGiven sets the value of ConsentGiven.
func (s *PolicyConsentStatus) SetConsentGiven(val bool) {
	s.ConsentGiven = val
}

func (*PolicyConsentStatus) getPolicyConsentStatusRes() {}
func (*PolicyConsentStatus) policyConsentRes()          {}

type PostConclusionBadRequest struct{}

func (*PostConclusionBadRequest) postConclusionRes() {}

type PostConclusionInternalServerError struct{}

func (*PostConclusionInternalServerError) postConclusionRes() {}

type PostConclusionReq struct {
	Content string `json:"content"`
}

// GetContent returns the value of Content.
func (s *PostConclusionReq) GetContent() string {
	return s.Content
}

// SetContent sets the value of Content.
func (s *PostConclusionReq) SetContent(val string) {
	s.Content = val
}

type PostImageBadRequest struct{}

func (*PostImageBadRequest) postImageRes() {}

type PostImageInternalServerError struct{}

func (*PostImageInternalServerError) postImageRes() {}

type PostImageOK struct {
	URL string `json:"url"`
}

// GetURL returns the value of URL.
func (s *PostImageOK) GetURL() string {
	return s.URL
}

// SetURL sets the value of URL.
func (s *PostImageOK) SetURL(val string) {
	s.URL = val
}

func (*PostImageOK) postImageRes() {}

type PostImageReq struct {
	Image ht.MultipartFile `json:"image"`
}

// GetImage returns the value of Image.
func (s *PostImageReq) GetImage() ht.MultipartFile {
	return s.Image
}

// SetImage sets the value of Image.
func (s *PostImageReq) SetImage(val ht.MultipartFile) {
	s.Image = val
}

type PostOpinionPost2BadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *PostOpinionPost2BadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *PostOpinionPost2BadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *PostOpinionPost2BadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *PostOpinionPost2BadRequest) SetMessage(val string) {
	s.Message = val
}

func (*PostOpinionPost2BadRequest) postOpinionPost2Res() {}

type PostOpinionPost2InternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *PostOpinionPost2InternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *PostOpinionPost2InternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *PostOpinionPost2InternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *PostOpinionPost2InternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*PostOpinionPost2InternalServerError) postOpinionPost2Res() {}

type PostOpinionPost2OK struct{}

func (*PostOpinionPost2OK) postOpinionPost2Res() {}

type PostOpinionPost2Req struct {
	TalkSessionID   OptNilString     `json:"talkSessionID"`
	ParentOpinionID OptNilString     `json:"parentOpinionID"`
	Title           OptNilString     `json:"title"`
	OpinionContent  string           `json:"opinionContent"`
	ReferenceURL    OptNilString     `json:"referenceURL"`
	Picture         OptMultipartFile `json:"picture"`
	IsSeed          OptNilBool       `json:"isSeed"`
}

// GetTalkSessionID returns the value of TalkSessionID.
func (s *PostOpinionPost2Req) GetTalkSessionID() OptNilString {
	return s.TalkSessionID
}

// GetParentOpinionID returns the value of ParentOpinionID.
func (s *PostOpinionPost2Req) GetParentOpinionID() OptNilString {
	return s.ParentOpinionID
}

// GetTitle returns the value of Title.
func (s *PostOpinionPost2Req) GetTitle() OptNilString {
	return s.Title
}

// GetOpinionContent returns the value of OpinionContent.
func (s *PostOpinionPost2Req) GetOpinionContent() string {
	return s.OpinionContent
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *PostOpinionPost2Req) GetReferenceURL() OptNilString {
	return s.ReferenceURL
}

// GetPicture returns the value of Picture.
func (s *PostOpinionPost2Req) GetPicture() OptMultipartFile {
	return s.Picture
}

// GetIsSeed returns the value of IsSeed.
func (s *PostOpinionPost2Req) GetIsSeed() OptNilBool {
	return s.IsSeed
}

// SetTalkSessionID sets the value of TalkSessionID.
func (s *PostOpinionPost2Req) SetTalkSessionID(val OptNilString) {
	s.TalkSessionID = val
}

// SetParentOpinionID sets the value of ParentOpinionID.
func (s *PostOpinionPost2Req) SetParentOpinionID(val OptNilString) {
	s.ParentOpinionID = val
}

// SetTitle sets the value of Title.
func (s *PostOpinionPost2Req) SetTitle(val OptNilString) {
	s.Title = val
}

// SetOpinionContent sets the value of OpinionContent.
func (s *PostOpinionPost2Req) SetOpinionContent(val string) {
	s.OpinionContent = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *PostOpinionPost2Req) SetReferenceURL(val OptNilString) {
	s.ReferenceURL = val
}

// SetPicture sets the value of Picture.
func (s *PostOpinionPost2Req) SetPicture(val OptMultipartFile) {
	s.Picture = val
}

// SetIsSeed sets the value of IsSeed.
func (s *PostOpinionPost2Req) SetIsSeed(val OptNilBool) {
	s.IsSeed = val
}

type PostTimeLineItemBadRequest struct{}

func (*PostTimeLineItemBadRequest) postTimeLineItemRes() {}

type PostTimeLineItemInternalServerError struct{}

func (*PostTimeLineItemInternalServerError) postTimeLineItemRes() {}

type PostTimeLineItemOK struct {
	ActionItemID string `json:"actionItemID"`
	Sequence     int    `json:"sequence"`
	Content      string `json:"content"`
	Status       string `json:"status"`
	CreatedAt    string `json:"createdAt"`
	UpdatedAt    string `json:"updatedAt"`
}

// GetActionItemID returns the value of ActionItemID.
func (s *PostTimeLineItemOK) GetActionItemID() string {
	return s.ActionItemID
}

// GetSequence returns the value of Sequence.
func (s *PostTimeLineItemOK) GetSequence() int {
	return s.Sequence
}

// GetContent returns the value of Content.
func (s *PostTimeLineItemOK) GetContent() string {
	return s.Content
}

// GetStatus returns the value of Status.
func (s *PostTimeLineItemOK) GetStatus() string {
	return s.Status
}

// GetCreatedAt returns the value of CreatedAt.
func (s *PostTimeLineItemOK) GetCreatedAt() string {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *PostTimeLineItemOK) GetUpdatedAt() string {
	return s.UpdatedAt
}

// SetActionItemID sets the value of ActionItemID.
func (s *PostTimeLineItemOK) SetActionItemID(val string) {
	s.ActionItemID = val
}

// SetSequence sets the value of Sequence.
func (s *PostTimeLineItemOK) SetSequence(val int) {
	s.Sequence = val
}

// SetContent sets the value of Content.
func (s *PostTimeLineItemOK) SetContent(val string) {
	s.Content = val
}

// SetStatus sets the value of Status.
func (s *PostTimeLineItemOK) SetStatus(val string) {
	s.Status = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *PostTimeLineItemOK) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *PostTimeLineItemOK) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

func (*PostTimeLineItemOK) postTimeLineItemRes() {}

type PostTimeLineItemReq struct {
	Content            string       `json:"content"`
	Status             string       `json:"status"`
	ParentActionItemID OptNilString `json:"parentActionItemID"`
}

// GetContent returns the value of Content.
func (s *PostTimeLineItemReq) GetContent() string {
	return s.Content
}

// GetStatus returns the value of Status.
func (s *PostTimeLineItemReq) GetStatus() string {
	return s.Status
}

// GetParentActionItemID returns the value of ParentActionItemID.
func (s *PostTimeLineItemReq) GetParentActionItemID() OptNilString {
	return s.ParentActionItemID
}

// SetContent sets the value of Content.
func (s *PostTimeLineItemReq) SetContent(val string) {
	s.Content = val
}

// SetStatus sets the value of Status.
func (s *PostTimeLineItemReq) SetStatus(val string) {
	s.Status = val
}

// SetParentActionItemID sets the value of ParentActionItemID.
func (s *PostTimeLineItemReq) SetParentActionItemID(val OptNilString) {
	s.ParentActionItemID = val
}

// Ref: #/components/schemas/RegenerateRequest
type RegenerateRequest struct {
	// 再生成するタイプ.
	Type RegenerateRequestType `json:"type"`
}

// GetType returns the value of Type.
func (s *RegenerateRequest) GetType() RegenerateRequestType {
	return s.Type
}

// SetType sets the value of Type.
func (s *RegenerateRequest) SetType(val RegenerateRequestType) {
	s.Type = val
}

// 再生成するタイプ.
type RegenerateRequestType string

const (
	RegenerateRequestTypeReport RegenerateRequestType = "report"
	RegenerateRequestTypeGroup  RegenerateRequestType = "group"
	RegenerateRequestTypeImage  RegenerateRequestType = "image"
)

// AllValues returns all RegenerateRequestType values.
func (RegenerateRequestType) AllValues() []RegenerateRequestType {
	return []RegenerateRequestType{
		RegenerateRequestTypeReport,
		RegenerateRequestTypeGroup,
		RegenerateRequestTypeImage,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RegenerateRequestType) MarshalText() ([]byte, error) {
	switch s {
	case RegenerateRequestTypeReport:
		return []byte(s), nil
	case RegenerateRequestTypeGroup:
		return []byte(s), nil
	case RegenerateRequestTypeImage:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RegenerateRequestType) UnmarshalText(data []byte) error {
	switch RegenerateRequestType(data) {
	case RegenerateRequestTypeReport:
		*s = RegenerateRequestTypeReport
		return nil
	case RegenerateRequestTypeGroup:
		*s = RegenerateRequestTypeGroup
		return nil
	case RegenerateRequestTypeImage:
		*s = RegenerateRequestTypeImage
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/RegenerateResponse
type RegenerateResponse struct {
	// ステータス.
	Status string `json:"status"`
	// メッセージ.
	Message string `json:"message"`
}

// GetStatus returns the value of Status.
func (s *RegenerateResponse) GetStatus() string {
	return s.Status
}

// GetMessage returns the value of Message.
func (s *RegenerateResponse) GetMessage() string {
	return s.Message
}

// SetStatus sets the value of Status.
func (s *RegenerateResponse) SetStatus(val string) {
	s.Status = val
}

// SetMessage sets the value of Message.
func (s *RegenerateResponse) SetMessage(val string) {
	s.Message = val
}

// 通報解決アクション.
// Ref: #/components/schemas/ReportAction
type ReportAction string

const (
	ReportActionDeleted ReportAction = "deleted"
	ReportActionHold    ReportAction = "hold"
)

// AllValues returns all ReportAction values.
func (ReportAction) AllValues() []ReportAction {
	return []ReportAction{
		ReportActionDeleted,
		ReportActionHold,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ReportAction) MarshalText() ([]byte, error) {
	switch s {
	case ReportActionDeleted:
		return []byte(s), nil
	case ReportActionHold:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ReportAction) UnmarshalText(data []byte) error {
	switch ReportAction(data) {
	case ReportActionDeleted:
		*s = ReportActionDeleted
		return nil
	case ReportActionHold:
		*s = ReportActionHold
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/ReportDetail
type ReportDetail struct {
	Opinion Opinion `json:"opinion"`
	// 作成ユーザー.
	User    ReportDetailUser          `json:"user"`
	Status  ReportStatus              `json:"status"`
	Reasons []ReportDetailReasonsItem `json:"reasons"`
	// この意見が通報を受けた回数.
	ReportCount int `json:"reportCount"`
}

// GetOpinion returns the value of Opinion.
func (s *ReportDetail) GetOpinion() Opinion {
	return s.Opinion
}

// GetUser returns the value of User.
func (s *ReportDetail) GetUser() ReportDetailUser {
	return s.User
}

// GetStatus returns the value of Status.
func (s *ReportDetail) GetStatus() ReportStatus {
	return s.Status
}

// GetReasons returns the value of Reasons.
func (s *ReportDetail) GetReasons() []ReportDetailReasonsItem {
	return s.Reasons
}

// GetReportCount returns the value of ReportCount.
func (s *ReportDetail) GetReportCount() int {
	return s.ReportCount
}

// SetOpinion sets the value of Opinion.
func (s *ReportDetail) SetOpinion(val Opinion) {
	s.Opinion = val
}

// SetUser sets the value of User.
func (s *ReportDetail) SetUser(val ReportDetailUser) {
	s.User = val
}

// SetStatus sets the value of Status.
func (s *ReportDetail) SetStatus(val ReportStatus) {
	s.Status = val
}

// SetReasons sets the value of Reasons.
func (s *ReportDetail) SetReasons(val []ReportDetailReasonsItem) {
	s.Reasons = val
}

// SetReportCount sets the value of ReportCount.
func (s *ReportDetail) SetReportCount(val int) {
	s.ReportCount = val
}

func (*ReportDetail) getOpinionReportsRes() {}

type ReportDetailReasonsItem struct {
	Reason  string       `json:"reason"`
	Content OptNilString `json:"content"`
}

// GetReason returns the value of Reason.
func (s *ReportDetailReasonsItem) GetReason() string {
	return s.Reason
}

// GetContent returns the value of Content.
func (s *ReportDetailReasonsItem) GetContent() OptNilString {
	return s.Content
}

// SetReason sets the value of Reason.
func (s *ReportDetailReasonsItem) SetReason(val string) {
	s.Reason = val
}

// SetContent sets the value of Content.
func (s *ReportDetailReasonsItem) SetContent(val OptNilString) {
	s.Content = val
}

type ReportDetailUser struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *ReportDetailUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *ReportDetailUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *ReportDetailUser) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *ReportDetailUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ReportDetailUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *ReportDetailUser) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type ReportOpinionBadRequest struct{}

func (*ReportOpinionBadRequest) reportOpinionRes() {}

type ReportOpinionInternalServerError struct{}

func (*ReportOpinionInternalServerError) reportOpinionRes() {}

type ReportOpinionOK struct{}

func (*ReportOpinionOK) reportOpinionRes() {}

type ReportOpinionReq struct {
	Reason  OptNilInt    `json:"reason"`
	Content OptNilString `json:"content"`
}

// GetReason returns the value of Reason.
func (s *ReportOpinionReq) GetReason() OptNilInt {
	return s.Reason
}

// GetContent returns the value of Content.
func (s *ReportOpinionReq) GetContent() OptNilString {
	return s.Content
}

// SetReason sets the value of Reason.
func (s *ReportOpinionReq) SetReason(val OptNilInt) {
	s.Reason = val
}

// SetContent sets the value of Content.
func (s *ReportOpinionReq) SetContent(val OptNilString) {
	s.Content = val
}

// Ref: #/components/schemas/ReportReason
type ReportReason struct {
	// 1.
	ReasonID int `json:"reasonID"`
	// 不適切な内容.
	Reason string `json:"reason"`
}

// GetReasonID returns the value of ReasonID.
func (s *ReportReason) GetReasonID() int {
	return s.ReasonID
}

// GetReason returns the value of Reason.
func (s *ReportReason) GetReason() string {
	return s.Reason
}

// SetReasonID sets the value of ReasonID.
func (s *ReportReason) SetReasonID(val int) {
	s.ReasonID = val
}

// SetReason sets the value of Reason.
func (s *ReportReason) SetReason(val string) {
	s.Reason = val
}

// 通報ステータス.
// Ref: #/components/schemas/ReportStatus
type ReportStatus string

const (
	ReportStatusUnsolved ReportStatus = "unsolved"
	ReportStatusDeleted  ReportStatus = "deleted"
	ReportStatusHold     ReportStatus = "hold"
)

// AllValues returns all ReportStatus values.
func (ReportStatus) AllValues() []ReportStatus {
	return []ReportStatus{
		ReportStatusUnsolved,
		ReportStatusDeleted,
		ReportStatusHold,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ReportStatus) MarshalText() ([]byte, error) {
	switch s {
	case ReportStatusUnsolved:
		return []byte(s), nil
	case ReportStatusDeleted:
		return []byte(s), nil
	case ReportStatusHold:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ReportStatus) UnmarshalText(data []byte) error {
	switch ReportStatus(data) {
	case ReportStatusUnsolved:
		*s = ReportStatusUnsolved
		return nil
	case ReportStatusDeleted:
		*s = ReportStatusDeleted
		return nil
	case ReportStatusHold:
		*s = ReportStatusHold
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Restriction
type Restriction struct {
	Key         string `json:"key"`
	Description string `json:"description"`
	// 依存しているrestriction.
	DependsOn []string `json:"dependsOn"`
}

// GetKey returns the value of Key.
func (s *Restriction) GetKey() string {
	return s.Key
}

// GetDescription returns the value of Description.
func (s *Restriction) GetDescription() string {
	return s.Description
}

// GetDependsOn returns the value of DependsOn.
func (s *Restriction) GetDependsOn() []string {
	return s.DependsOn
}

// SetKey sets the value of Key.
func (s *Restriction) SetKey(val string) {
	s.Key = val
}

// SetDescription sets the value of Description.
func (s *Restriction) SetDescription(val string) {
	s.Description = val
}

// SetDependsOn sets the value of DependsOn.
func (s *Restriction) SetDependsOn(val []string) {
	s.DependsOn = val
}

type RevokeTokenBadRequest struct{}

func (*RevokeTokenBadRequest) revokeTokenRes() {}

type RevokeTokenInternalServerError struct{}

func (*RevokeTokenInternalServerError) revokeTokenRes() {}

type RevokeTokenNoContent struct{}

// RevokeTokenNoContentHeaders wraps RevokeTokenNoContent with response headers.
type RevokeTokenNoContentHeaders struct {
	SetCookie []string
	Response  RevokeTokenNoContent
}

// GetSetCookie returns the value of SetCookie.
func (s *RevokeTokenNoContentHeaders) GetSetCookie() []string {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *RevokeTokenNoContentHeaders) GetResponse() RevokeTokenNoContent {
	return s.Response
}

// SetSetCookie sets the value of SetCookie.
func (s *RevokeTokenNoContentHeaders) SetSetCookie(val []string) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *RevokeTokenNoContentHeaders) SetResponse(val RevokeTokenNoContent) {
	s.Response = val
}

func (*RevokeTokenNoContentHeaders) revokeTokenRes() {}

type SessionsHistoryBadRequest struct{}

func (*SessionsHistoryBadRequest) sessionsHistoryRes() {}

type SessionsHistoryInternalServerError struct{}

func (*SessionsHistoryInternalServerError) sessionsHistoryRes() {}

type SessionsHistoryOK struct {
	Pagination   OffsetPagination                    `json:"pagination"`
	TalkSessions []SessionsHistoryOKTalkSessionsItem `json:"talkSessions"`
}

// GetPagination returns the value of Pagination.
func (s *SessionsHistoryOK) GetPagination() OffsetPagination {
	return s.Pagination
}

// GetTalkSessions returns the value of TalkSessions.
func (s *SessionsHistoryOK) GetTalkSessions() []SessionsHistoryOKTalkSessionsItem {
	return s.TalkSessions
}

// SetPagination sets the value of Pagination.
func (s *SessionsHistoryOK) SetPagination(val OffsetPagination) {
	s.Pagination = val
}

// SetTalkSessions sets the value of TalkSessions.
func (s *SessionsHistoryOK) SetTalkSessions(val []SessionsHistoryOKTalkSessionsItem) {
	s.TalkSessions = val
}

func (*SessionsHistoryOK) sessionsHistoryRes() {}

type SessionsHistoryOKTalkSessionsItem struct {
	TalkSession  TalkSession `json:"talkSession"`
	OpinionCount int         `json:"opinionCount"`
}

// GetTalkSession returns the value of TalkSession.
func (s *SessionsHistoryOKTalkSessionsItem) GetTalkSession() TalkSession {
	return s.TalkSession
}

// GetOpinionCount returns the value of OpinionCount.
func (s *SessionsHistoryOKTalkSessionsItem) GetOpinionCount() int {
	return s.OpinionCount
}

// SetTalkSession sets the value of TalkSession.
func (s *SessionsHistoryOKTalkSessionsItem) SetTalkSession(val TalkSession) {
	s.TalkSession = val
}

// SetOpinionCount sets the value of OpinionCount.
func (s *SessionsHistoryOKTalkSessionsItem) SetOpinionCount(val int) {
	s.OpinionCount = val
}

type SessionsHistoryStatus string

const (
	SessionsHistoryStatusOpen     SessionsHistoryStatus = "open"
	SessionsHistoryStatusFinished SessionsHistoryStatus = "finished"
)

// AllValues returns all SessionsHistoryStatus values.
func (SessionsHistoryStatus) AllValues() []SessionsHistoryStatus {
	return []SessionsHistoryStatus{
		SessionsHistoryStatusOpen,
		SessionsHistoryStatusFinished,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SessionsHistoryStatus) MarshalText() ([]byte, error) {
	switch s {
	case SessionsHistoryStatusOpen:
		return []byte(s), nil
	case SessionsHistoryStatusFinished:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SessionsHistoryStatus) UnmarshalText(data []byte) error {
	switch SessionsHistoryStatus(data) {
	case SessionsHistoryStatusOpen:
		*s = SessionsHistoryStatusOpen
		return nil
	case SessionsHistoryStatusFinished:
		*s = SessionsHistoryStatusFinished
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SolveOpinionReportBadRequest struct{}

func (*SolveOpinionReportBadRequest) solveOpinionReportRes() {}

type SolveOpinionReportInternalServerError struct{}

func (*SolveOpinionReportInternalServerError) solveOpinionReportRes() {}

type SolveOpinionReportOK struct{}

func (*SolveOpinionReportOK) solveOpinionReportRes() {}

type SolveOpinionReportReq struct {
	Action ReportAction `json:"action"`
}

// GetAction returns the value of Action.
func (s *SolveOpinionReportReq) GetAction() ReportAction {
	return s.Action
}

// SetAction sets the value of Action.
func (s *SolveOpinionReportReq) SetAction(val ReportAction) {
	s.Action = val
}

type SwipeOpinionsBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *SwipeOpinionsBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *SwipeOpinionsBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *SwipeOpinionsBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *SwipeOpinionsBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*SwipeOpinionsBadRequest) swipeOpinionsRes() {}

type SwipeOpinionsInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *SwipeOpinionsInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *SwipeOpinionsInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *SwipeOpinionsInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *SwipeOpinionsInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*SwipeOpinionsInternalServerError) swipeOpinionsRes() {}

type SwipeOpinionsOK struct {
	Opinions       []SwipeOpinionsOKOpinionsItem `json:"opinions"`
	RemainingCount int                           `json:"remainingCount"`
}

// GetOpinions returns the value of Opinions.
func (s *SwipeOpinionsOK) GetOpinions() []SwipeOpinionsOKOpinionsItem {
	return s.Opinions
}

// GetRemainingCount returns the value of RemainingCount.
func (s *SwipeOpinionsOK) GetRemainingCount() int {
	return s.RemainingCount
}

// SetOpinions sets the value of Opinions.
func (s *SwipeOpinionsOK) SetOpinions(val []SwipeOpinionsOKOpinionsItem) {
	s.Opinions = val
}

// SetRemainingCount sets the value of RemainingCount.
func (s *SwipeOpinionsOK) SetRemainingCount(val int) {
	s.RemainingCount = val
}

func (*SwipeOpinionsOK) swipeOpinionsRes() {}

type SwipeOpinionsOKOpinionsItem struct {
	ReplyCount int     `json:"replyCount"`
	Opinion    Opinion `json:"opinion"`
	User       User    `json:"user"`
}

// GetReplyCount returns the value of ReplyCount.
func (s *SwipeOpinionsOKOpinionsItem) GetReplyCount() int {
	return s.ReplyCount
}

// GetOpinion returns the value of Opinion.
func (s *SwipeOpinionsOKOpinionsItem) GetOpinion() Opinion {
	return s.Opinion
}

// GetUser returns the value of User.
func (s *SwipeOpinionsOKOpinionsItem) GetUser() User {
	return s.User
}

// SetReplyCount sets the value of ReplyCount.
func (s *SwipeOpinionsOKOpinionsItem) SetReplyCount(val int) {
	s.ReplyCount = val
}

// SetOpinion sets the value of Opinion.
func (s *SwipeOpinionsOKOpinionsItem) SetOpinion(val Opinion) {
	s.Opinion = val
}

// SetUser sets the value of User.
func (s *SwipeOpinionsOKOpinionsItem) SetUser(val User) {
	s.User = val
}

// Ref: #/components/schemas/TalkSession
type TalkSession struct {
	// トークセッションID.
	ID string `json:"id"`
	// テーマ.
	Theme string `json:"theme"`
	// 説明.
	Description OptNilString `json:"description"`
	// 作成ユーザー.
	Owner TalkSessionOwner `json:"owner"`
	// 作成日時.
	CreatedAt string `json:"createdAt"`
	// 終了予定日時.
	ScheduledEndTime string `json:"scheduledEndTime"`
	// 位置情報.
	Location OptTalkSessionLocation `json:"location"`
	// 市区町村.
	City OptNilString `json:"city"`
	// 都道府県.
	Prefecture OptNilString `json:"prefecture"`
	// サムネ画像.
	ThumbnailURL OptNilString `json:"thumbnailURL"`
	// セッションの参加制限.
	Restrictions []Restriction `json:"restrictions"`
	HideReport   bool          `json:"hideReport"`
}

// GetID returns the value of ID.
func (s *TalkSession) GetID() string {
	return s.ID
}

// GetTheme returns the value of Theme.
func (s *TalkSession) GetTheme() string {
	return s.Theme
}

// GetDescription returns the value of Description.
func (s *TalkSession) GetDescription() OptNilString {
	return s.Description
}

// GetOwner returns the value of Owner.
func (s *TalkSession) GetOwner() TalkSessionOwner {
	return s.Owner
}

// GetCreatedAt returns the value of CreatedAt.
func (s *TalkSession) GetCreatedAt() string {
	return s.CreatedAt
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *TalkSession) GetScheduledEndTime() string {
	return s.ScheduledEndTime
}

// GetLocation returns the value of Location.
func (s *TalkSession) GetLocation() OptTalkSessionLocation {
	return s.Location
}

// GetCity returns the value of City.
func (s *TalkSession) GetCity() OptNilString {
	return s.City
}

// GetPrefecture returns the value of Prefecture.
func (s *TalkSession) GetPrefecture() OptNilString {
	return s.Prefecture
}

// GetThumbnailURL returns the value of ThumbnailURL.
func (s *TalkSession) GetThumbnailURL() OptNilString {
	return s.ThumbnailURL
}

// GetRestrictions returns the value of Restrictions.
func (s *TalkSession) GetRestrictions() []Restriction {
	return s.Restrictions
}

// GetHideReport returns the value of HideReport.
func (s *TalkSession) GetHideReport() bool {
	return s.HideReport
}

// SetID sets the value of ID.
func (s *TalkSession) SetID(val string) {
	s.ID = val
}

// SetTheme sets the value of Theme.
func (s *TalkSession) SetTheme(val string) {
	s.Theme = val
}

// SetDescription sets the value of Description.
func (s *TalkSession) SetDescription(val OptNilString) {
	s.Description = val
}

// SetOwner sets the value of Owner.
func (s *TalkSession) SetOwner(val TalkSessionOwner) {
	s.Owner = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *TalkSession) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *TalkSession) SetScheduledEndTime(val string) {
	s.ScheduledEndTime = val
}

// SetLocation sets the value of Location.
func (s *TalkSession) SetLocation(val OptTalkSessionLocation) {
	s.Location = val
}

// SetCity sets the value of City.
func (s *TalkSession) SetCity(val OptNilString) {
	s.City = val
}

// SetPrefecture sets the value of Prefecture.
func (s *TalkSession) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

// SetThumbnailURL sets the value of ThumbnailURL.
func (s *TalkSession) SetThumbnailURL(val OptNilString) {
	s.ThumbnailURL = val
}

// SetRestrictions sets the value of Restrictions.
func (s *TalkSession) SetRestrictions(val []Restriction) {
	s.Restrictions = val
}

// SetHideReport sets the value of HideReport.
func (s *TalkSession) SetHideReport(val bool) {
	s.HideReport = val
}

func (*TalkSession) editTalkSessionRes()      {}
func (*TalkSession) getTalkSessionDetailRes() {}
func (*TalkSession) initiateTalkSessionRes()  {}

type TalkSessionAnalysisBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *TalkSessionAnalysisBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *TalkSessionAnalysisBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *TalkSessionAnalysisBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *TalkSessionAnalysisBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*TalkSessionAnalysisBadRequest) talkSessionAnalysisRes() {}

type TalkSessionAnalysisInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *TalkSessionAnalysisInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *TalkSessionAnalysisInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *TalkSessionAnalysisInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *TalkSessionAnalysisInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*TalkSessionAnalysisInternalServerError) talkSessionAnalysisRes() {}

type TalkSessionAnalysisOK struct {
	MyPosition    OptUserGroupPosition                     `json:"myPosition"`
	Positions     []UserGroupPosition                      `json:"positions"`
	GroupOpinions []TalkSessionAnalysisOKGroupOpinionsItem `json:"groupOpinions"`
}

// GetMyPosition returns the value of MyPosition.
func (s *TalkSessionAnalysisOK) GetMyPosition() OptUserGroupPosition {
	return s.MyPosition
}

// GetPositions returns the value of Positions.
func (s *TalkSessionAnalysisOK) GetPositions() []UserGroupPosition {
	return s.Positions
}

// GetGroupOpinions returns the value of GroupOpinions.
func (s *TalkSessionAnalysisOK) GetGroupOpinions() []TalkSessionAnalysisOKGroupOpinionsItem {
	return s.GroupOpinions
}

// SetMyPosition sets the value of MyPosition.
func (s *TalkSessionAnalysisOK) SetMyPosition(val OptUserGroupPosition) {
	s.MyPosition = val
}

// SetPositions sets the value of Positions.
func (s *TalkSessionAnalysisOK) SetPositions(val []UserGroupPosition) {
	s.Positions = val
}

// SetGroupOpinions sets the value of GroupOpinions.
func (s *TalkSessionAnalysisOK) SetGroupOpinions(val []TalkSessionAnalysisOKGroupOpinionsItem) {
	s.GroupOpinions = val
}

func (*TalkSessionAnalysisOK) talkSessionAnalysisRes() {}

type TalkSessionAnalysisOKGroupOpinionsItem struct {
	GroupName string                                               `json:"groupName"`
	GroupID   int                                                  `json:"groupID"`
	Opinions  []TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem `json:"opinions"`
}

// GetGroupName returns the value of GroupName.
func (s *TalkSessionAnalysisOKGroupOpinionsItem) GetGroupName() string {
	return s.GroupName
}

// GetGroupID returns the value of GroupID.
func (s *TalkSessionAnalysisOKGroupOpinionsItem) GetGroupID() int {
	return s.GroupID
}

// GetOpinions returns the value of Opinions.
func (s *TalkSessionAnalysisOKGroupOpinionsItem) GetOpinions() []TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem {
	return s.Opinions
}

// SetGroupName sets the value of GroupName.
func (s *TalkSessionAnalysisOKGroupOpinionsItem) SetGroupName(val string) {
	s.GroupName = val
}

// SetGroupID sets the value of GroupID.
func (s *TalkSessionAnalysisOKGroupOpinionsItem) SetGroupID(val int) {
	s.GroupID = val
}

// SetOpinions sets the value of Opinions.
func (s *TalkSessionAnalysisOKGroupOpinionsItem) SetOpinions(val []TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) {
	s.Opinions = val
}

type TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem struct {
	Opinion       Opinion `json:"opinion"`
	User          User    `json:"user"`
	AgreeCount    int     `json:"agreeCount"`
	DisagreeCount int     `json:"disagreeCount"`
	PassCount     int     `json:"passCount"`
}

// GetOpinion returns the value of Opinion.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) GetOpinion() Opinion {
	return s.Opinion
}

// GetUser returns the value of User.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) GetUser() User {
	return s.User
}

// GetAgreeCount returns the value of AgreeCount.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) GetAgreeCount() int {
	return s.AgreeCount
}

// GetDisagreeCount returns the value of DisagreeCount.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) GetDisagreeCount() int {
	return s.DisagreeCount
}

// GetPassCount returns the value of PassCount.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) GetPassCount() int {
	return s.PassCount
}

// SetOpinion sets the value of Opinion.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) SetOpinion(val Opinion) {
	s.Opinion = val
}

// SetUser sets the value of User.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) SetUser(val User) {
	s.User = val
}

// SetAgreeCount sets the value of AgreeCount.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) SetAgreeCount(val int) {
	s.AgreeCount = val
}

// SetDisagreeCount sets the value of DisagreeCount.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) SetDisagreeCount(val int) {
	s.DisagreeCount = val
}

// SetPassCount sets the value of PassCount.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) SetPassCount(val int) {
	s.PassCount = val
}

// Ref: #/components/schemas/TalkSessionForManage
type TalkSessionForManage struct {
	TalkSessionID    string        `json:"talkSessionID"`
	Theme            string        `json:"theme"`
	Description      string        `json:"description"`
	Owner            UserForManage `json:"owner"`
	ScheduledEndTime time.Time     `json:"scheduledEndTime"`
	City             OptString     `json:"city"`
	Prefecture       OptString     `json:"prefecture"`
	ThumbnailURL     string        `json:"thumbnailURL"`
	Hidden           bool          `json:"hidden"`
	UpdatedAt        string        `json:"updatedAt"`
	CreatedAt        string        `json:"createdAt"`
}

// GetTalkSessionID returns the value of TalkSessionID.
func (s *TalkSessionForManage) GetTalkSessionID() string {
	return s.TalkSessionID
}

// GetTheme returns the value of Theme.
func (s *TalkSessionForManage) GetTheme() string {
	return s.Theme
}

// GetDescription returns the value of Description.
func (s *TalkSessionForManage) GetDescription() string {
	return s.Description
}

// GetOwner returns the value of Owner.
func (s *TalkSessionForManage) GetOwner() UserForManage {
	return s.Owner
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *TalkSessionForManage) GetScheduledEndTime() time.Time {
	return s.ScheduledEndTime
}

// GetCity returns the value of City.
func (s *TalkSessionForManage) GetCity() OptString {
	return s.City
}

// GetPrefecture returns the value of Prefecture.
func (s *TalkSessionForManage) GetPrefecture() OptString {
	return s.Prefecture
}

// GetThumbnailURL returns the value of ThumbnailURL.
func (s *TalkSessionForManage) GetThumbnailURL() string {
	return s.ThumbnailURL
}

// GetHidden returns the value of Hidden.
func (s *TalkSessionForManage) GetHidden() bool {
	return s.Hidden
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *TalkSessionForManage) GetUpdatedAt() string {
	return s.UpdatedAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *TalkSessionForManage) GetCreatedAt() string {
	return s.CreatedAt
}

// SetTalkSessionID sets the value of TalkSessionID.
func (s *TalkSessionForManage) SetTalkSessionID(val string) {
	s.TalkSessionID = val
}

// SetTheme sets the value of Theme.
func (s *TalkSessionForManage) SetTheme(val string) {
	s.Theme = val
}

// SetDescription sets the value of Description.
func (s *TalkSessionForManage) SetDescription(val string) {
	s.Description = val
}

// SetOwner sets the value of Owner.
func (s *TalkSessionForManage) SetOwner(val UserForManage) {
	s.Owner = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *TalkSessionForManage) SetScheduledEndTime(val time.Time) {
	s.ScheduledEndTime = val
}

// SetCity sets the value of City.
func (s *TalkSessionForManage) SetCity(val OptString) {
	s.City = val
}

// SetPrefecture sets the value of Prefecture.
func (s *TalkSessionForManage) SetPrefecture(val OptString) {
	s.Prefecture = val
}

// SetThumbnailURL sets the value of ThumbnailURL.
func (s *TalkSessionForManage) SetThumbnailURL(val string) {
	s.ThumbnailURL = val
}

// SetHidden sets the value of Hidden.
func (s *TalkSessionForManage) SetHidden(val bool) {
	s.Hidden = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *TalkSessionForManage) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *TalkSessionForManage) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/TalkSessionListResponse
type TalkSessionListResponse struct {
	TalkSessionStats []TalkSessionStats `json:"talkSessionStats"`
	TotalCount       int32              `json:"totalCount"`
}

// GetTalkSessionStats returns the value of TalkSessionStats.
func (s *TalkSessionListResponse) GetTalkSessionStats() []TalkSessionStats {
	return s.TalkSessionStats
}

// GetTotalCount returns the value of TotalCount.
func (s *TalkSessionListResponse) GetTotalCount() int32 {
	return s.TotalCount
}

// SetTalkSessionStats sets the value of TalkSessionStats.
func (s *TalkSessionListResponse) SetTalkSessionStats(val []TalkSessionStats) {
	s.TalkSessionStats = val
}

// SetTotalCount sets the value of TotalCount.
func (s *TalkSessionListResponse) SetTotalCount(val int32) {
	s.TotalCount = val
}

type TalkSessionLocation struct {
	// 緯度.
	Latitude OptFloat64 `json:"latitude"`
	// 経度.
	Longitude OptFloat64 `json:"longitude"`
}

// GetLatitude returns the value of Latitude.
func (s *TalkSessionLocation) GetLatitude() OptFloat64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *TalkSessionLocation) GetLongitude() OptFloat64 {
	return s.Longitude
}

// SetLatitude sets the value of Latitude.
func (s *TalkSessionLocation) SetLatitude(val OptFloat64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *TalkSessionLocation) SetLongitude(val OptFloat64) {
	s.Longitude = val
}

type TalkSessionOwner struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *TalkSessionOwner) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *TalkSessionOwner) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *TalkSessionOwner) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *TalkSessionOwner) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *TalkSessionOwner) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *TalkSessionOwner) SetIconURL(val OptNilString) {
	s.IconURL = val
}

// Ref: #/components/schemas/TalkSessionStats
type TalkSessionStats struct {
	TalkSessionID    string        `json:"talkSessionID"`
	Theme            string        `json:"theme"`
	Description      string        `json:"description"`
	Owner            UserForManage `json:"owner"`
	ScheduledEndTime time.Time     `json:"scheduledEndTime"`
	City             OptString     `json:"city"`
	Prefecture       OptString     `json:"prefecture"`
	ThumbnailURL     string        `json:"thumbnailURL"`
	Hidden           bool          `json:"hidden"`
	UpdatedAt        string        `json:"updatedAt"`
	CreatedAt        string        `json:"createdAt"`
	OpinionCount     int32         `json:"opinionCount"`
	OpinionUserCount int32         `json:"opinionUserCount"`
	VoteCount        int32         `json:"voteCount"`
	VoteUserCount    int32         `json:"voteUserCount"`
}

// GetTalkSessionID returns the value of TalkSessionID.
func (s *TalkSessionStats) GetTalkSessionID() string {
	return s.TalkSessionID
}

// GetTheme returns the value of Theme.
func (s *TalkSessionStats) GetTheme() string {
	return s.Theme
}

// GetDescription returns the value of Description.
func (s *TalkSessionStats) GetDescription() string {
	return s.Description
}

// GetOwner returns the value of Owner.
func (s *TalkSessionStats) GetOwner() UserForManage {
	return s.Owner
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *TalkSessionStats) GetScheduledEndTime() time.Time {
	return s.ScheduledEndTime
}

// GetCity returns the value of City.
func (s *TalkSessionStats) GetCity() OptString {
	return s.City
}

// GetPrefecture returns the value of Prefecture.
func (s *TalkSessionStats) GetPrefecture() OptString {
	return s.Prefecture
}

// GetThumbnailURL returns the value of ThumbnailURL.
func (s *TalkSessionStats) GetThumbnailURL() string {
	return s.ThumbnailURL
}

// GetHidden returns the value of Hidden.
func (s *TalkSessionStats) GetHidden() bool {
	return s.Hidden
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *TalkSessionStats) GetUpdatedAt() string {
	return s.UpdatedAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *TalkSessionStats) GetCreatedAt() string {
	return s.CreatedAt
}

// GetOpinionCount returns the value of OpinionCount.
func (s *TalkSessionStats) GetOpinionCount() int32 {
	return s.OpinionCount
}

// GetOpinionUserCount returns the value of OpinionUserCount.
func (s *TalkSessionStats) GetOpinionUserCount() int32 {
	return s.OpinionUserCount
}

// GetVoteCount returns the value of VoteCount.
func (s *TalkSessionStats) GetVoteCount() int32 {
	return s.VoteCount
}

// GetVoteUserCount returns the value of VoteUserCount.
func (s *TalkSessionStats) GetVoteUserCount() int32 {
	return s.VoteUserCount
}

// SetTalkSessionID sets the value of TalkSessionID.
func (s *TalkSessionStats) SetTalkSessionID(val string) {
	s.TalkSessionID = val
}

// SetTheme sets the value of Theme.
func (s *TalkSessionStats) SetTheme(val string) {
	s.Theme = val
}

// SetDescription sets the value of Description.
func (s *TalkSessionStats) SetDescription(val string) {
	s.Description = val
}

// SetOwner sets the value of Owner.
func (s *TalkSessionStats) SetOwner(val UserForManage) {
	s.Owner = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *TalkSessionStats) SetScheduledEndTime(val time.Time) {
	s.ScheduledEndTime = val
}

// SetCity sets the value of City.
func (s *TalkSessionStats) SetCity(val OptString) {
	s.City = val
}

// SetPrefecture sets the value of Prefecture.
func (s *TalkSessionStats) SetPrefecture(val OptString) {
	s.Prefecture = val
}

// SetThumbnailURL sets the value of ThumbnailURL.
func (s *TalkSessionStats) SetThumbnailURL(val string) {
	s.ThumbnailURL = val
}

// SetHidden sets the value of Hidden.
func (s *TalkSessionStats) SetHidden(val bool) {
	s.Hidden = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *TalkSessionStats) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *TalkSessionStats) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetOpinionCount sets the value of OpinionCount.
func (s *TalkSessionStats) SetOpinionCount(val int32) {
	s.OpinionCount = val
}

// SetOpinionUserCount sets the value of OpinionUserCount.
func (s *TalkSessionStats) SetOpinionUserCount(val int32) {
	s.OpinionUserCount = val
}

// SetVoteCount sets the value of VoteCount.
func (s *TalkSessionStats) SetVoteCount(val int32) {
	s.VoteCount = val
}

// SetVoteUserCount sets the value of VoteUserCount.
func (s *TalkSessionStats) SetVoteUserCount(val int32) {
	s.VoteUserCount = val
}

type TestBadRequest struct{}

func (*TestBadRequest) testRes() {}

type TestInternalServerError struct{}

func (*TestInternalServerError) testRes() {}

type TestOK struct {
	OptInt     OptNilInt    `json:"optInt"`
	OptNilInt  OptInt       `json:"optNilInt"`
	OptNilBool OptNilBool   `json:"optNilBool"`
	OptBool    OptBool      `json:"optBool"`
	OptUrl     OptURI       `json:"optUrl"`
	OptNilUrl  OptNilString `json:"optNilUrl"`
}

// GetOptInt returns the value of OptInt.
func (s *TestOK) GetOptInt() OptNilInt {
	return s.OptInt
}

// GetOptNilInt returns the value of OptNilInt.
func (s *TestOK) GetOptNilInt() OptInt {
	return s.OptNilInt
}

// GetOptNilBool returns the value of OptNilBool.
func (s *TestOK) GetOptNilBool() OptNilBool {
	return s.OptNilBool
}

// GetOptBool returns the value of OptBool.
func (s *TestOK) GetOptBool() OptBool {
	return s.OptBool
}

// GetOptUrl returns the value of OptUrl.
func (s *TestOK) GetOptUrl() OptURI {
	return s.OptUrl
}

// GetOptNilUrl returns the value of OptNilUrl.
func (s *TestOK) GetOptNilUrl() OptNilString {
	return s.OptNilUrl
}

// SetOptInt sets the value of OptInt.
func (s *TestOK) SetOptInt(val OptNilInt) {
	s.OptInt = val
}

// SetOptNilInt sets the value of OptNilInt.
func (s *TestOK) SetOptNilInt(val OptInt) {
	s.OptNilInt = val
}

// SetOptNilBool sets the value of OptNilBool.
func (s *TestOK) SetOptNilBool(val OptNilBool) {
	s.OptNilBool = val
}

// SetOptBool sets the value of OptBool.
func (s *TestOK) SetOptBool(val OptBool) {
	s.OptBool = val
}

// SetOptUrl sets the value of OptUrl.
func (s *TestOK) SetOptUrl(val OptURI) {
	s.OptUrl = val
}

// SetOptNilUrl sets the value of OptNilUrl.
func (s *TestOK) SetOptNilUrl(val OptNilString) {
	s.OptNilUrl = val
}

func (*TestOK) testRes() {}

// Ref: #/components/schemas/ToggleReportVisibilityRequest
type ToggleReportVisibilityRequest struct {
	// 非表示にするかどうか.
	Hidden bool `json:"hidden"`
}

// GetHidden returns the value of Hidden.
func (s *ToggleReportVisibilityRequest) GetHidden() bool {
	return s.Hidden
}

// SetHidden sets the value of Hidden.
func (s *ToggleReportVisibilityRequest) SetHidden(val bool) {
	s.Hidden = val
}

// Ref: #/components/schemas/ToggleReportVisibilityResponse
type ToggleReportVisibilityResponse struct {
	// ステータス.
	Status string `json:"status"`
	// メッセージ.
	Message string `json:"message"`
}

// GetStatus returns the value of Status.
func (s *ToggleReportVisibilityResponse) GetStatus() string {
	return s.Status
}

// GetMessage returns the value of Message.
func (s *ToggleReportVisibilityResponse) GetMessage() string {
	return s.Message
}

// SetStatus sets the value of Status.
func (s *ToggleReportVisibilityResponse) SetStatus(val string) {
	s.Status = val
}

// SetMessage sets the value of Message.
func (s *ToggleReportVisibilityResponse) SetMessage(val string) {
	s.Message = val
}

// Ref: #/components/schemas/TokenClaim
type TokenClaim struct {
	// Audience.
	Aud string `json:"aud"`
	// 有効期限.
	Exp string `json:"exp"`
	// 発行日時.
	Iat string `json:"iat"`
	// 発行者.
	Iss string `json:"iss"`
	// ユーザID.
	Sub string `json:"sub"`
	// JWT ID.
	Jti string `json:"jti"`
	// ユーザーID.
	DisplayID OptString `json:"displayID"`
	// ユーザー名.
	DisplayName OptString `json:"displayName"`
	// アイコンURL.
	IconURL OptString `json:"iconURL"`
	// ユーザ登録済みか.
	IsRegistered    bool `json:"isRegistered"`
	IsEmailVerified bool `json:"isEmailVerified"`
	// アカウントの種類。組織がなければ空.
	OrgType OptNilInt `json:"orgType"`
	// パスワードの更新が必要かどうか.
	RequiredPasswordChange bool `json:"requiredPasswordChange"`
	// 組織のRole.
	OrganizationRole OptNilString `json:"organizationRole"`
	// 組織コード
	// ログイン時に使用する.
	OrganizationCode OptNilString `json:"organizationCode"`
	// 組織ID.
	OrganizationID OptNilString `json:"organizationID"`
}

// GetAud returns the value of Aud.
func (s *TokenClaim) GetAud() string {
	return s.Aud
}

// GetExp returns the value of Exp.
func (s *TokenClaim) GetExp() string {
	return s.Exp
}

// GetIat returns the value of Iat.
func (s *TokenClaim) GetIat() string {
	return s.Iat
}

// GetIss returns the value of Iss.
func (s *TokenClaim) GetIss() string {
	return s.Iss
}

// GetSub returns the value of Sub.
func (s *TokenClaim) GetSub() string {
	return s.Sub
}

// GetJti returns the value of Jti.
func (s *TokenClaim) GetJti() string {
	return s.Jti
}

// GetDisplayID returns the value of DisplayID.
func (s *TokenClaim) GetDisplayID() OptString {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *TokenClaim) GetDisplayName() OptString {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *TokenClaim) GetIconURL() OptString {
	return s.IconURL
}

// GetIsRegistered returns the value of IsRegistered.
func (s *TokenClaim) GetIsRegistered() bool {
	return s.IsRegistered
}

// GetIsEmailVerified returns the value of IsEmailVerified.
func (s *TokenClaim) GetIsEmailVerified() bool {
	return s.IsEmailVerified
}

// GetOrgType returns the value of OrgType.
func (s *TokenClaim) GetOrgType() OptNilInt {
	return s.OrgType
}

// GetRequiredPasswordChange returns the value of RequiredPasswordChange.
func (s *TokenClaim) GetRequiredPasswordChange() bool {
	return s.RequiredPasswordChange
}

// GetOrganizationRole returns the value of OrganizationRole.
func (s *TokenClaim) GetOrganizationRole() OptNilString {
	return s.OrganizationRole
}

// GetOrganizationCode returns the value of OrganizationCode.
func (s *TokenClaim) GetOrganizationCode() OptNilString {
	return s.OrganizationCode
}

// GetOrganizationID returns the value of OrganizationID.
func (s *TokenClaim) GetOrganizationID() OptNilString {
	return s.OrganizationID
}

// SetAud sets the value of Aud.
func (s *TokenClaim) SetAud(val string) {
	s.Aud = val
}

// SetExp sets the value of Exp.
func (s *TokenClaim) SetExp(val string) {
	s.Exp = val
}

// SetIat sets the value of Iat.
func (s *TokenClaim) SetIat(val string) {
	s.Iat = val
}

// SetIss sets the value of Iss.
func (s *TokenClaim) SetIss(val string) {
	s.Iss = val
}

// SetSub sets the value of Sub.
func (s *TokenClaim) SetSub(val string) {
	s.Sub = val
}

// SetJti sets the value of Jti.
func (s *TokenClaim) SetJti(val string) {
	s.Jti = val
}

// SetDisplayID sets the value of DisplayID.
func (s *TokenClaim) SetDisplayID(val OptString) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *TokenClaim) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *TokenClaim) SetIconURL(val OptString) {
	s.IconURL = val
}

// SetIsRegistered sets the value of IsRegistered.
func (s *TokenClaim) SetIsRegistered(val bool) {
	s.IsRegistered = val
}

// SetIsEmailVerified sets the value of IsEmailVerified.
func (s *TokenClaim) SetIsEmailVerified(val bool) {
	s.IsEmailVerified = val
}

// SetOrgType sets the value of OrgType.
func (s *TokenClaim) SetOrgType(val OptNilInt) {
	s.OrgType = val
}

// SetRequiredPasswordChange sets the value of RequiredPasswordChange.
func (s *TokenClaim) SetRequiredPasswordChange(val bool) {
	s.RequiredPasswordChange = val
}

// SetOrganizationRole sets the value of OrganizationRole.
func (s *TokenClaim) SetOrganizationRole(val OptNilString) {
	s.OrganizationRole = val
}

// SetOrganizationCode sets the value of OrganizationCode.
func (s *TokenClaim) SetOrganizationCode(val OptNilString) {
	s.OrganizationCode = val
}

// SetOrganizationID sets the value of OrganizationID.
func (s *TokenClaim) SetOrganizationID(val OptNilString) {
	s.OrganizationID = val
}

func (*TokenClaim) getTokenInfoRes() {}

type UpdateUserProfileBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *UpdateUserProfileBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *UpdateUserProfileBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *UpdateUserProfileBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *UpdateUserProfileBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*UpdateUserProfileBadRequest) updateUserProfileRes() {}

type UpdateUserProfileInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *UpdateUserProfileInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *UpdateUserProfileInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *UpdateUserProfileInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *UpdateUserProfileInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*UpdateUserProfileInternalServerError) updateUserProfileRes() {}

type UpdateUserProfileReq struct {
	DisplayName OptNilString                     `json:"displayName"`
	Icon        OptMultipartFile                 `json:"icon"`
	DeleteIcon  OptNilBool                       `json:"deleteIcon"`
	DateOfBirth OptString                        `json:"dateOfBirth"`
	Gender      OptNilUpdateUserProfileReqGender `json:"gender"`
	City        OptNilString                     `json:"city"`
	Prefecture  OptNilString                     `json:"prefecture"`
	Email       OptNilString                     `json:"email"`
}

// GetDisplayName returns the value of DisplayName.
func (s *UpdateUserProfileReq) GetDisplayName() OptNilString {
	return s.DisplayName
}

// GetIcon returns the value of Icon.
func (s *UpdateUserProfileReq) GetIcon() OptMultipartFile {
	return s.Icon
}

// GetDeleteIcon returns the value of DeleteIcon.
func (s *UpdateUserProfileReq) GetDeleteIcon() OptNilBool {
	return s.DeleteIcon
}

// GetDateOfBirth returns the value of DateOfBirth.
func (s *UpdateUserProfileReq) GetDateOfBirth() OptString {
	return s.DateOfBirth
}

// GetGender returns the value of Gender.
func (s *UpdateUserProfileReq) GetGender() OptNilUpdateUserProfileReqGender {
	return s.Gender
}

// GetCity returns the value of City.
func (s *UpdateUserProfileReq) GetCity() OptNilString {
	return s.City
}

// GetPrefecture returns the value of Prefecture.
func (s *UpdateUserProfileReq) GetPrefecture() OptNilString {
	return s.Prefecture
}

// GetEmail returns the value of Email.
func (s *UpdateUserProfileReq) GetEmail() OptNilString {
	return s.Email
}

// SetDisplayName sets the value of DisplayName.
func (s *UpdateUserProfileReq) SetDisplayName(val OptNilString) {
	s.DisplayName = val
}

// SetIcon sets the value of Icon.
func (s *UpdateUserProfileReq) SetIcon(val OptMultipartFile) {
	s.Icon = val
}

// SetDeleteIcon sets the value of DeleteIcon.
func (s *UpdateUserProfileReq) SetDeleteIcon(val OptNilBool) {
	s.DeleteIcon = val
}

// SetDateOfBirth sets the value of DateOfBirth.
func (s *UpdateUserProfileReq) SetDateOfBirth(val OptString) {
	s.DateOfBirth = val
}

// SetGender sets the value of Gender.
func (s *UpdateUserProfileReq) SetGender(val OptNilUpdateUserProfileReqGender) {
	s.Gender = val
}

// SetCity sets the value of City.
func (s *UpdateUserProfileReq) SetCity(val OptNilString) {
	s.City = val
}

// SetPrefecture sets the value of Prefecture.
func (s *UpdateUserProfileReq) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

// SetEmail sets the value of Email.
func (s *UpdateUserProfileReq) SetEmail(val OptNilString) {
	s.Email = val
}

type UpdateUserProfileReqGender string

const (
	UpdateUserProfileReqGender_0 UpdateUserProfileReqGender = "男性"
	UpdateUserProfileReqGender_1 UpdateUserProfileReqGender = "女性"
	UpdateUserProfileReqGender_2 UpdateUserProfileReqGender = "その他"
	UpdateUserProfileReqGender_3 UpdateUserProfileReqGender = "回答しない"
)

// AllValues returns all UpdateUserProfileReqGender values.
func (UpdateUserProfileReqGender) AllValues() []UpdateUserProfileReqGender {
	return []UpdateUserProfileReqGender{
		UpdateUserProfileReqGender_0,
		UpdateUserProfileReqGender_1,
		UpdateUserProfileReqGender_2,
		UpdateUserProfileReqGender_3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateUserProfileReqGender) MarshalText() ([]byte, error) {
	switch s {
	case UpdateUserProfileReqGender_0:
		return []byte(s), nil
	case UpdateUserProfileReqGender_1:
		return []byte(s), nil
	case UpdateUserProfileReqGender_2:
		return []byte(s), nil
	case UpdateUserProfileReqGender_3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateUserProfileReqGender) UnmarshalText(data []byte) error {
	switch UpdateUserProfileReqGender(data) {
	case UpdateUserProfileReqGender_0:
		*s = UpdateUserProfileReqGender_0
		return nil
	case UpdateUserProfileReqGender_1:
		*s = UpdateUserProfileReqGender_1
		return nil
	case UpdateUserProfileReqGender_2:
		*s = UpdateUserProfileReqGender_2
		return nil
	case UpdateUserProfileReqGender_3:
		*s = UpdateUserProfileReqGender_3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/User
type User struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *User) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *User) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *User) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *User) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *User) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *User) SetIconURL(val OptNilString) {
	s.IconURL = val
}

func (*User) establishUserRes()     {}
func (*User) updateUserProfileRes() {}

// Ref: #/components/schemas/UserDemographics
type UserDemographics struct {
	// 生年月日.
	DateOfBirth OptNilInt `json:"dateOfBirth"`
	// 性別.
	Gender OptNilString `json:"gender"`
	// 市町村.
	City OptNilString `json:"city"`
	// 都道府県.
	Prefecture OptNilString `json:"prefecture"`
}

// GetDateOfBirth returns the value of DateOfBirth.
func (s *UserDemographics) GetDateOfBirth() OptNilInt {
	return s.DateOfBirth
}

// GetGender returns the value of Gender.
func (s *UserDemographics) GetGender() OptNilString {
	return s.Gender
}

// GetCity returns the value of City.
func (s *UserDemographics) GetCity() OptNilString {
	return s.City
}

// GetPrefecture returns the value of Prefecture.
func (s *UserDemographics) GetPrefecture() OptNilString {
	return s.Prefecture
}

// SetDateOfBirth sets the value of DateOfBirth.
func (s *UserDemographics) SetDateOfBirth(val OptNilInt) {
	s.DateOfBirth = val
}

// SetGender sets the value of Gender.
func (s *UserDemographics) SetGender(val OptNilString) {
	s.Gender = val
}

// SetCity sets the value of City.
func (s *UserDemographics) SetCity(val OptNilString) {
	s.City = val
}

// SetPrefecture sets the value of Prefecture.
func (s *UserDemographics) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

// Ref: #/components/schemas/UserForManage
type UserForManage struct {
	// ユーザーID.
	UserID string `json:"userID"`
	// 表示ID.
	DisplayID string `json:"displayID"`
	// 表示名.
	DisplayName string `json:"displayName"`
	// アイコンURL.
	IconURL string `json:"iconURL"`
	// 最終ログイン日時.
	LastLoginAt time.Time `json:"lastLoginAt"`
	// 作成日時.
	CreatedAt time.Time `json:"createdAt"`
	// 更新日時.
	UpdatedAt time.Time `json:"updatedAt"`
}

// GetUserID returns the value of UserID.
func (s *UserForManage) GetUserID() string {
	return s.UserID
}

// GetDisplayID returns the value of DisplayID.
func (s *UserForManage) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *UserForManage) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *UserForManage) GetIconURL() string {
	return s.IconURL
}

// GetLastLoginAt returns the value of LastLoginAt.
func (s *UserForManage) GetLastLoginAt() time.Time {
	return s.LastLoginAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserForManage) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserForManage) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUserID sets the value of UserID.
func (s *UserForManage) SetUserID(val string) {
	s.UserID = val
}

// SetDisplayID sets the value of DisplayID.
func (s *UserForManage) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *UserForManage) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *UserForManage) SetIconURL(val string) {
	s.IconURL = val
}

// SetLastLoginAt sets the value of LastLoginAt.
func (s *UserForManage) SetLastLoginAt(val time.Time) {
	s.LastLoginAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserForManage) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserForManage) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/UserGroupPosition
type UserGroupPosition struct {
	PosX        float64      `json:"posX"`
	PosY        float64      `json:"posY"`
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
	GroupName   string       `json:"groupName"`
	GroupID     int          `json:"groupID"`
	// 境界ポイントのインデックス.
	PerimeterIndex OptInt `json:"perimeterIndex"`
}

// GetPosX returns the value of PosX.
func (s *UserGroupPosition) GetPosX() float64 {
	return s.PosX
}

// GetPosY returns the value of PosY.
func (s *UserGroupPosition) GetPosY() float64 {
	return s.PosY
}

// GetDisplayID returns the value of DisplayID.
func (s *UserGroupPosition) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *UserGroupPosition) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *UserGroupPosition) GetIconURL() OptNilString {
	return s.IconURL
}

// GetGroupName returns the value of GroupName.
func (s *UserGroupPosition) GetGroupName() string {
	return s.GroupName
}

// GetGroupID returns the value of GroupID.
func (s *UserGroupPosition) GetGroupID() int {
	return s.GroupID
}

// GetPerimeterIndex returns the value of PerimeterIndex.
func (s *UserGroupPosition) GetPerimeterIndex() OptInt {
	return s.PerimeterIndex
}

// SetPosX sets the value of PosX.
func (s *UserGroupPosition) SetPosX(val float64) {
	s.PosX = val
}

// SetPosY sets the value of PosY.
func (s *UserGroupPosition) SetPosY(val float64) {
	s.PosY = val
}

// SetDisplayID sets the value of DisplayID.
func (s *UserGroupPosition) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *UserGroupPosition) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *UserGroupPosition) SetIconURL(val OptNilString) {
	s.IconURL = val
}

// SetGroupName sets the value of GroupName.
func (s *UserGroupPosition) SetGroupName(val string) {
	s.GroupName = val
}

// SetGroupID sets the value of GroupID.
func (s *UserGroupPosition) SetGroupID(val int) {
	s.GroupID = val
}

// SetPerimeterIndex sets the value of PerimeterIndex.
func (s *UserGroupPosition) SetPerimeterIndex(val OptInt) {
	s.PerimeterIndex = val
}

// Ref: #/components/schemas/UserStatsResponse
type UserStatsResponse struct {
	// ユニークアクション数.
	UniqueActionUserCount int32 `json:"uniqueActionUserCount"`
	// 登録ユーザー数.
	UserCount int32 `json:"userCount"`
	// セッション数.
	TalkSessionCount int32 `json:"talkSessionCount"`
	// 日付.
	Date time.Time `json:"date"`
}

// GetUniqueActionUserCount returns the value of UniqueActionUserCount.
func (s *UserStatsResponse) GetUniqueActionUserCount() int32 {
	return s.UniqueActionUserCount
}

// GetUserCount returns the value of UserCount.
func (s *UserStatsResponse) GetUserCount() int32 {
	return s.UserCount
}

// GetTalkSessionCount returns the value of TalkSessionCount.
func (s *UserStatsResponse) GetTalkSessionCount() int32 {
	return s.TalkSessionCount
}

// GetDate returns the value of Date.
func (s *UserStatsResponse) GetDate() time.Time {
	return s.Date
}

// SetUniqueActionUserCount sets the value of UniqueActionUserCount.
func (s *UserStatsResponse) SetUniqueActionUserCount(val int32) {
	s.UniqueActionUserCount = val
}

// SetUserCount sets the value of UserCount.
func (s *UserStatsResponse) SetUserCount(val int32) {
	s.UserCount = val
}

// SetTalkSessionCount sets the value of TalkSessionCount.
func (s *UserStatsResponse) SetTalkSessionCount(val int32) {
	s.TalkSessionCount = val
}

// SetDate sets the value of Date.
func (s *UserStatsResponse) SetDate(val time.Time) {
	s.Date = val
}

type ValidateOrganizationCodeBadRequest struct{}

func (*ValidateOrganizationCodeBadRequest) validateOrganizationCodeRes() {}

type ValidateOrganizationCodeInternalServerError struct{}

func (*ValidateOrganizationCodeInternalServerError) validateOrganizationCodeRes() {}

type ValidateOrganizationCodeOK struct {
	Valid        bool            `json:"valid"`
	Organization OptOrganization `json:"organization"`
}

// GetValid returns the value of Valid.
func (s *ValidateOrganizationCodeOK) GetValid() bool {
	return s.Valid
}

// GetOrganization returns the value of Organization.
func (s *ValidateOrganizationCodeOK) GetOrganization() OptOrganization {
	return s.Organization
}

// SetValid sets the value of Valid.
func (s *ValidateOrganizationCodeOK) SetValid(val bool) {
	s.Valid = val
}

// SetOrganization sets the value of Organization.
func (s *ValidateOrganizationCodeOK) SetOrganization(val OptOrganization) {
	s.Organization = val
}

func (*ValidateOrganizationCodeOK) validateOrganizationCodeRes() {}

type Vote2BadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Vote2BadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Vote2BadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Vote2BadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Vote2BadRequest) SetMessage(val string) {
	s.Message = val
}

func (*Vote2BadRequest) vote2Res() {}

type Vote2InternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Vote2InternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Vote2InternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Vote2InternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Vote2InternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*Vote2InternalServerError) vote2Res() {}

type Vote2OKApplicationJSON []Opinion

func (*Vote2OKApplicationJSON) vote2Res() {}

type Vote2Req struct {
	VoteStatus NilVote2ReqVoteStatus `json:"voteStatus"`
}

// GetVoteStatus returns the value of VoteStatus.
func (s *Vote2Req) GetVoteStatus() NilVote2ReqVoteStatus {
	return s.VoteStatus
}

// SetVoteStatus sets the value of VoteStatus.
func (s *Vote2Req) SetVoteStatus(val NilVote2ReqVoteStatus) {
	s.VoteStatus = val
}

// 投票タイプ.
type Vote2ReqVoteStatus string

const (
	Vote2ReqVoteStatusAgree    Vote2ReqVoteStatus = "agree"
	Vote2ReqVoteStatusDisagree Vote2ReqVoteStatus = "disagree"
	Vote2ReqVoteStatusPass     Vote2ReqVoteStatus = "pass"
)

// AllValues returns all Vote2ReqVoteStatus values.
func (Vote2ReqVoteStatus) AllValues() []Vote2ReqVoteStatus {
	return []Vote2ReqVoteStatus{
		Vote2ReqVoteStatusAgree,
		Vote2ReqVoteStatusDisagree,
		Vote2ReqVoteStatusPass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Vote2ReqVoteStatus) MarshalText() ([]byte, error) {
	switch s {
	case Vote2ReqVoteStatusAgree:
		return []byte(s), nil
	case Vote2ReqVoteStatusDisagree:
		return []byte(s), nil
	case Vote2ReqVoteStatusPass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Vote2ReqVoteStatus) UnmarshalText(data []byte) error {
	switch Vote2ReqVoteStatus(data) {
	case Vote2ReqVoteStatusAgree:
		*s = Vote2ReqVoteStatusAgree
		return nil
	case Vote2ReqVoteStatusDisagree:
		*s = Vote2ReqVoteStatusDisagree
		return nil
	case Vote2ReqVoteStatusPass:
		*s = Vote2ReqVoteStatusPass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}
