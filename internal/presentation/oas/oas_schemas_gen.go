// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"net/url"

	"github.com/go-faster/errors"
)

// AuthLoginFound is response for AuthLogin operation.
type AuthLoginFound struct {
	Location  OptURI
	SetCookie OptString
}

// GetLocation returns the value of Location.
func (s *AuthLoginFound) GetLocation() OptURI {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *AuthLoginFound) GetSetCookie() OptString {
	return s.SetCookie
}

// SetLocation sets the value of Location.
func (s *AuthLoginFound) SetLocation(val OptURI) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *AuthLoginFound) SetSetCookie(val OptString) {
	s.SetCookie = val
}

type CreateTalkSessionOK struct {
	TalkSessionID     string `json:"talkSessionID"`
	TalkSessionTheme  string `json:"talkSessionTheme"`
	TalkSessionStatus string `json:"talkSessionStatus"`
}

// GetTalkSessionID returns the value of TalkSessionID.
func (s *CreateTalkSessionOK) GetTalkSessionID() string {
	return s.TalkSessionID
}

// GetTalkSessionTheme returns the value of TalkSessionTheme.
func (s *CreateTalkSessionOK) GetTalkSessionTheme() string {
	return s.TalkSessionTheme
}

// GetTalkSessionStatus returns the value of TalkSessionStatus.
func (s *CreateTalkSessionOK) GetTalkSessionStatus() string {
	return s.TalkSessionStatus
}

// SetTalkSessionID sets the value of TalkSessionID.
func (s *CreateTalkSessionOK) SetTalkSessionID(val string) {
	s.TalkSessionID = val
}

// SetTalkSessionTheme sets the value of TalkSessionTheme.
func (s *CreateTalkSessionOK) SetTalkSessionTheme(val string) {
	s.TalkSessionTheme = val
}

// SetTalkSessionStatus sets the value of TalkSessionStatus.
func (s *CreateTalkSessionOK) SetTalkSessionStatus(val string) {
	s.TalkSessionStatus = val
}

type CreateTalkSessionReq struct {
	Theme OptString `json:"theme"`
}

// GetTheme returns the value of Theme.
func (s *CreateTalkSessionReq) GetTheme() OptString {
	return s.Theme
}

// SetTheme sets the value of Theme.
func (s *CreateTalkSessionReq) SetTheme(val OptString) {
	s.Theme = val
}

type EditUserProfileOK struct {
	DisplayID   string `json:"displayID"`
	DisplayName string `json:"displayName"`
}

// GetDisplayID returns the value of DisplayID.
func (s *EditUserProfileOK) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *EditUserProfileOK) GetDisplayName() string {
	return s.DisplayName
}

// SetDisplayID sets the value of DisplayID.
func (s *EditUserProfileOK) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *EditUserProfileOK) SetDisplayName(val string) {
	s.DisplayName = val
}

type GetTalkSessionDetailOK struct {
	TalkSessionID     string `json:"talkSessionID"`
	TalkSessionTheme  string `json:"talkSessionTheme"`
	TalkSessionStatus string `json:"talkSessionStatus"`
}

// GetTalkSessionID returns the value of TalkSessionID.
func (s *GetTalkSessionDetailOK) GetTalkSessionID() string {
	return s.TalkSessionID
}

// GetTalkSessionTheme returns the value of TalkSessionTheme.
func (s *GetTalkSessionDetailOK) GetTalkSessionTheme() string {
	return s.TalkSessionTheme
}

// GetTalkSessionStatus returns the value of TalkSessionStatus.
func (s *GetTalkSessionDetailOK) GetTalkSessionStatus() string {
	return s.TalkSessionStatus
}

// SetTalkSessionID sets the value of TalkSessionID.
func (s *GetTalkSessionDetailOK) SetTalkSessionID(val string) {
	s.TalkSessionID = val
}

// SetTalkSessionTheme sets the value of TalkSessionTheme.
func (s *GetTalkSessionDetailOK) SetTalkSessionTheme(val string) {
	s.TalkSessionTheme = val
}

// SetTalkSessionStatus sets the value of TalkSessionStatus.
func (s *GetTalkSessionDetailOK) SetTalkSessionStatus(val string) {
	s.TalkSessionStatus = val
}

type GetTalkSessionsOK struct{}

type GetUserProfileOK struct {
	DisplayID   string `json:"displayID"`
	DisplayName string `json:"displayName"`
}

// GetDisplayID returns the value of DisplayID.
func (s *GetUserProfileOK) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetUserProfileOK) GetDisplayName() string {
	return s.DisplayName
}

// SetDisplayID sets the value of DisplayID.
func (s *GetUserProfileOK) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetUserProfileOK) SetDisplayName(val string) {
	s.DisplayName = val
}

type IntentionInternalServerError struct{}

func (*IntentionInternalServerError) intentionRes() {}

type IntentionOKApplicationJSON []IntentionOKItem

func (*IntentionOKApplicationJSON) intentionRes() {}

type IntentionOKItem struct {
	// 意見ID.
	OpinionID string `json:"opinionID"`
	// 意見のテキスト.
	OpinionContent string `json:"opinionContent"`
	// 親の意見ID。ルートならば無し.
	ParentOpinionID OptString `json:"parentOpinionID"`
}

// GetOpinionID returns the value of OpinionID.
func (s *IntentionOKItem) GetOpinionID() string {
	return s.OpinionID
}

// GetOpinionContent returns the value of OpinionContent.
func (s *IntentionOKItem) GetOpinionContent() string {
	return s.OpinionContent
}

// GetParentOpinionID returns the value of ParentOpinionID.
func (s *IntentionOKItem) GetParentOpinionID() OptString {
	return s.ParentOpinionID
}

// SetOpinionID sets the value of OpinionID.
func (s *IntentionOKItem) SetOpinionID(val string) {
	s.OpinionID = val
}

// SetOpinionContent sets the value of OpinionContent.
func (s *IntentionOKItem) SetOpinionContent(val string) {
	s.OpinionContent = val
}

// SetParentOpinionID sets the value of ParentOpinionID.
func (s *IntentionOKItem) SetParentOpinionID(val OptString) {
	s.ParentOpinionID = val
}

type ListOpinionsInternalServerError struct{}

func (*ListOpinionsInternalServerError) listOpinionsRes() {}

type ListOpinionsOKApplicationJSON []ListOpinionsOKItem

func (*ListOpinionsOKApplicationJSON) listOpinionsRes() {}

type ListOpinionsOKItem struct {
	// 意見ID.
	OpinionID string `json:"opinionID"`
	// 意見のテキスト.
	OpinionContent string `json:"opinionContent"`
	// 親の意見ID。ルートならば無し.
	ParentOpinionID OptString `json:"parentOpinionID"`
}

// GetOpinionID returns the value of OpinionID.
func (s *ListOpinionsOKItem) GetOpinionID() string {
	return s.OpinionID
}

// GetOpinionContent returns the value of OpinionContent.
func (s *ListOpinionsOKItem) GetOpinionContent() string {
	return s.OpinionContent
}

// GetParentOpinionID returns the value of ParentOpinionID.
func (s *ListOpinionsOKItem) GetParentOpinionID() OptString {
	return s.ParentOpinionID
}

// SetOpinionID sets the value of OpinionID.
func (s *ListOpinionsOKItem) SetOpinionID(val string) {
	s.OpinionID = val
}

// SetOpinionContent sets the value of OpinionContent.
func (s *ListOpinionsOKItem) SetOpinionContent(val string) {
	s.OpinionContent = val
}

// SetParentOpinionID sets the value of ParentOpinionID.
func (s *ListOpinionsOKItem) SetParentOpinionID(val OptString) {
	s.ParentOpinionID = val
}

// OAuthCallbackFound is response for OAuthCallback operation.
type OAuthCallbackFound struct {
	Location  OptURI
	SetCookie OptString
}

// GetLocation returns the value of Location.
func (s *OAuthCallbackFound) GetLocation() OptURI {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *OAuthCallbackFound) GetSetCookie() OptString {
	return s.SetCookie
}

// SetLocation sets the value of Location.
func (s *OAuthCallbackFound) SetLocation(val OptURI) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *OAuthCallbackFound) SetSetCookie(val OptString) {
	s.SetCookie = val
}

// NewOptCreateTalkSessionReq returns new OptCreateTalkSessionReq with value set to v.
func NewOptCreateTalkSessionReq(v CreateTalkSessionReq) OptCreateTalkSessionReq {
	return OptCreateTalkSessionReq{
		Value: v,
		Set:   true,
	}
}

// OptCreateTalkSessionReq is optional CreateTalkSessionReq.
type OptCreateTalkSessionReq struct {
	Value CreateTalkSessionReq
	Set   bool
}

// IsSet returns true if OptCreateTalkSessionReq was set.
func (o OptCreateTalkSessionReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateTalkSessionReq) Reset() {
	var v CreateTalkSessionReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateTalkSessionReq) SetTo(v CreateTalkSessionReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateTalkSessionReq) Get() (v CreateTalkSessionReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateTalkSessionReq) Or(d CreateTalkSessionReq) CreateTalkSessionReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type PostOpinionPostInternalServerError struct{}

func (*PostOpinionPostInternalServerError) postOpinionPostRes() {}

type PostOpinionPostOK struct{}

func (*PostOpinionPostOK) postOpinionPostRes() {}

type RegisterUserAge string

const (
	RegisterUserAge10  RegisterUserAge = "10"
	RegisterUserAge20  RegisterUserAge = "20"
	RegisterUserAge30  RegisterUserAge = "30"
	RegisterUserAge40  RegisterUserAge = "40"
	RegisterUserAge50  RegisterUserAge = "50"
	RegisterUserAge60  RegisterUserAge = "60"
	RegisterUserAge70  RegisterUserAge = "70"
	RegisterUserAge80  RegisterUserAge = "80"
	RegisterUserAge90  RegisterUserAge = "90"
	RegisterUserAge100 RegisterUserAge = "100"
)

// AllValues returns all RegisterUserAge values.
func (RegisterUserAge) AllValues() []RegisterUserAge {
	return []RegisterUserAge{
		RegisterUserAge10,
		RegisterUserAge20,
		RegisterUserAge30,
		RegisterUserAge40,
		RegisterUserAge50,
		RegisterUserAge60,
		RegisterUserAge70,
		RegisterUserAge80,
		RegisterUserAge90,
		RegisterUserAge100,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RegisterUserAge) MarshalText() ([]byte, error) {
	switch s {
	case RegisterUserAge10:
		return []byte(s), nil
	case RegisterUserAge20:
		return []byte(s), nil
	case RegisterUserAge30:
		return []byte(s), nil
	case RegisterUserAge40:
		return []byte(s), nil
	case RegisterUserAge50:
		return []byte(s), nil
	case RegisterUserAge60:
		return []byte(s), nil
	case RegisterUserAge70:
		return []byte(s), nil
	case RegisterUserAge80:
		return []byte(s), nil
	case RegisterUserAge90:
		return []byte(s), nil
	case RegisterUserAge100:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RegisterUserAge) UnmarshalText(data []byte) error {
	switch RegisterUserAge(data) {
	case RegisterUserAge10:
		*s = RegisterUserAge10
		return nil
	case RegisterUserAge20:
		*s = RegisterUserAge20
		return nil
	case RegisterUserAge30:
		*s = RegisterUserAge30
		return nil
	case RegisterUserAge40:
		*s = RegisterUserAge40
		return nil
	case RegisterUserAge50:
		*s = RegisterUserAge50
		return nil
	case RegisterUserAge60:
		*s = RegisterUserAge60
		return nil
	case RegisterUserAge70:
		*s = RegisterUserAge70
		return nil
	case RegisterUserAge80:
		*s = RegisterUserAge80
		return nil
	case RegisterUserAge90:
		*s = RegisterUserAge90
		return nil
	case RegisterUserAge100:
		*s = RegisterUserAge100
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type RegisterUserBadRequest struct{}

func (*RegisterUserBadRequest) registerUserRes() {}

type RegisterUserInternalServerError struct{}

func (*RegisterUserInternalServerError) registerUserRes() {}

type RegisterUserOK struct {
	DisplayID   string `json:"displayID"`
	DisplayName string `json:"displayName"`
}

// GetDisplayID returns the value of DisplayID.
func (s *RegisterUserOK) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *RegisterUserOK) GetDisplayName() string {
	return s.DisplayName
}

// SetDisplayID sets the value of DisplayID.
func (s *RegisterUserOK) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *RegisterUserOK) SetDisplayName(val string) {
	s.DisplayName = val
}

func (*RegisterUserOK) registerUserRes() {}

type SessionId struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *SessionId) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *SessionId) SetAPIKey(val string) {
	s.APIKey = val
}
