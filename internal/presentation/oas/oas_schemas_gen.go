// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"io"
	"net/url"
	"time"

	"github.com/go-faster/errors"

	ht "github.com/ogen-go/ogen/http"
)

type AuthorizeBadRequest struct{}

func (*AuthorizeBadRequest) authorizeRes() {}

type AuthorizeFound struct{}

// AuthorizeFoundHeaders wraps AuthorizeFound with response headers.
type AuthorizeFoundHeaders struct {
	Location  string
	SetCookie []string
	Response  AuthorizeFound
}

// GetLocation returns the value of Location.
func (s *AuthorizeFoundHeaders) GetLocation() string {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *AuthorizeFoundHeaders) GetSetCookie() []string {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *AuthorizeFoundHeaders) GetResponse() AuthorizeFound {
	return s.Response
}

// SetLocation sets the value of Location.
func (s *AuthorizeFoundHeaders) SetLocation(val string) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *AuthorizeFoundHeaders) SetSetCookie(val []string) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *AuthorizeFoundHeaders) SetResponse(val AuthorizeFound) {
	s.Response = val
}

func (*AuthorizeFoundHeaders) authorizeRes() {}

type AuthorizeInternalServerError struct{}

func (*AuthorizeInternalServerError) authorizeRes() {}

type CreateTalkSessionBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *CreateTalkSessionBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *CreateTalkSessionBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *CreateTalkSessionBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *CreateTalkSessionBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*CreateTalkSessionBadRequest) createTalkSessionRes() {}

type CreateTalkSessionOK struct {
	// トークセッションID.
	ID string `json:"id"`
	// テーマ.
	Theme string `json:"theme"`
	// 説明.
	Description OptNilString `json:"description"`
	// 作成ユーザー.
	Owner CreateTalkSessionOKOwner `json:"owner"`
	// 作成日時.
	CreatedAt string `json:"createdAt"`
	// 終了予定日時.
	ScheduledEndTime string `json:"scheduledEndTime"`
	// 位置情報.
	Location OptCreateTalkSessionOKLocation `json:"location"`
	// 市区町村.
	City OptNilString `json:"city"`
	// 都道府県.
	Prefecture OptNilString `json:"prefecture"`
}

// GetID returns the value of ID.
func (s *CreateTalkSessionOK) GetID() string {
	return s.ID
}

// GetTheme returns the value of Theme.
func (s *CreateTalkSessionOK) GetTheme() string {
	return s.Theme
}

// GetDescription returns the value of Description.
func (s *CreateTalkSessionOK) GetDescription() OptNilString {
	return s.Description
}

// GetOwner returns the value of Owner.
func (s *CreateTalkSessionOK) GetOwner() CreateTalkSessionOKOwner {
	return s.Owner
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateTalkSessionOK) GetCreatedAt() string {
	return s.CreatedAt
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *CreateTalkSessionOK) GetScheduledEndTime() string {
	return s.ScheduledEndTime
}

// GetLocation returns the value of Location.
func (s *CreateTalkSessionOK) GetLocation() OptCreateTalkSessionOKLocation {
	return s.Location
}

// GetCity returns the value of City.
func (s *CreateTalkSessionOK) GetCity() OptNilString {
	return s.City
}

// GetPrefecture returns the value of Prefecture.
func (s *CreateTalkSessionOK) GetPrefecture() OptNilString {
	return s.Prefecture
}

// SetID sets the value of ID.
func (s *CreateTalkSessionOK) SetID(val string) {
	s.ID = val
}

// SetTheme sets the value of Theme.
func (s *CreateTalkSessionOK) SetTheme(val string) {
	s.Theme = val
}

// SetDescription sets the value of Description.
func (s *CreateTalkSessionOK) SetDescription(val OptNilString) {
	s.Description = val
}

// SetOwner sets the value of Owner.
func (s *CreateTalkSessionOK) SetOwner(val CreateTalkSessionOKOwner) {
	s.Owner = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateTalkSessionOK) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *CreateTalkSessionOK) SetScheduledEndTime(val string) {
	s.ScheduledEndTime = val
}

// SetLocation sets the value of Location.
func (s *CreateTalkSessionOK) SetLocation(val OptCreateTalkSessionOKLocation) {
	s.Location = val
}

// SetCity sets the value of City.
func (s *CreateTalkSessionOK) SetCity(val OptNilString) {
	s.City = val
}

// SetPrefecture sets the value of Prefecture.
func (s *CreateTalkSessionOK) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

func (*CreateTalkSessionOK) createTalkSessionRes() {}

// 位置情報.
type CreateTalkSessionOKLocation struct {
	// 緯度.
	Latitude OptFloat64 `json:"latitude"`
	// 経度.
	Longitude OptFloat64 `json:"longitude"`
}

// GetLatitude returns the value of Latitude.
func (s *CreateTalkSessionOKLocation) GetLatitude() OptFloat64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *CreateTalkSessionOKLocation) GetLongitude() OptFloat64 {
	return s.Longitude
}

// SetLatitude sets the value of Latitude.
func (s *CreateTalkSessionOKLocation) SetLatitude(val OptFloat64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *CreateTalkSessionOKLocation) SetLongitude(val OptFloat64) {
	s.Longitude = val
}

// 作成ユーザー.
type CreateTalkSessionOKOwner struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *CreateTalkSessionOKOwner) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *CreateTalkSessionOKOwner) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *CreateTalkSessionOKOwner) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *CreateTalkSessionOKOwner) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *CreateTalkSessionOKOwner) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *CreateTalkSessionOKOwner) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type CreateTalkSessionReq struct {
	Theme            string    `json:"theme"`
	ScheduledEndTime time.Time `json:"scheduledEndTime"`
	// 緯度.
	Latitude OptNilFloat64 `json:"latitude"`
	// 経度.
	Longitude OptNilFloat64 `json:"longitude"`
	// 市区町村.
	City OptNilString `json:"city"`
	// 都道府県.
	Prefecture OptNilString `json:"prefecture"`
	// 説明文.
	Description OptNilString `json:"description"`
}

// GetTheme returns the value of Theme.
func (s *CreateTalkSessionReq) GetTheme() string {
	return s.Theme
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *CreateTalkSessionReq) GetScheduledEndTime() time.Time {
	return s.ScheduledEndTime
}

// GetLatitude returns the value of Latitude.
func (s *CreateTalkSessionReq) GetLatitude() OptNilFloat64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *CreateTalkSessionReq) GetLongitude() OptNilFloat64 {
	return s.Longitude
}

// GetCity returns the value of City.
func (s *CreateTalkSessionReq) GetCity() OptNilString {
	return s.City
}

// GetPrefecture returns the value of Prefecture.
func (s *CreateTalkSessionReq) GetPrefecture() OptNilString {
	return s.Prefecture
}

// GetDescription returns the value of Description.
func (s *CreateTalkSessionReq) GetDescription() OptNilString {
	return s.Description
}

// SetTheme sets the value of Theme.
func (s *CreateTalkSessionReq) SetTheme(val string) {
	s.Theme = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *CreateTalkSessionReq) SetScheduledEndTime(val time.Time) {
	s.ScheduledEndTime = val
}

// SetLatitude sets the value of Latitude.
func (s *CreateTalkSessionReq) SetLatitude(val OptNilFloat64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *CreateTalkSessionReq) SetLongitude(val OptNilFloat64) {
	s.Longitude = val
}

// SetCity sets the value of City.
func (s *CreateTalkSessionReq) SetCity(val OptNilString) {
	s.City = val
}

// SetPrefecture sets the value of Prefecture.
func (s *CreateTalkSessionReq) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

// SetDescription sets the value of Description.
func (s *CreateTalkSessionReq) SetDescription(val OptNilString) {
	s.Description = val
}

type DummiInitBadRequest struct{}

func (*DummiInitBadRequest) dummiInitRes() {}

type DummiInitInternalServerError struct{}

func (*DummiInitInternalServerError) dummiInitRes() {}

type DummiInitOK struct{}

func (*DummiInitOK) dummiInitRes() {}

type EditTalkSessionBadRequest struct{}

func (*EditTalkSessionBadRequest) editTalkSessionRes() {}

type EditTalkSessionInternalServerError struct{}

func (*EditTalkSessionInternalServerError) editTalkSessionRes() {}

type EditTalkSessionOK struct {
	// トークセッションID.
	ID string `json:"id"`
	// テーマ.
	Theme string `json:"theme"`
	// 説明.
	Description OptNilString `json:"description"`
	// 作成ユーザー.
	Owner EditTalkSessionOKOwner `json:"owner"`
	// 作成日時.
	CreatedAt string `json:"createdAt"`
	// 終了予定日時.
	ScheduledEndTime string `json:"scheduledEndTime"`
	// 位置情報.
	Location OptEditTalkSessionOKLocation `json:"location"`
	// 市区町村.
	City OptNilString `json:"city"`
	// 都道府県.
	Prefecture OptNilString `json:"prefecture"`
}

// GetID returns the value of ID.
func (s *EditTalkSessionOK) GetID() string {
	return s.ID
}

// GetTheme returns the value of Theme.
func (s *EditTalkSessionOK) GetTheme() string {
	return s.Theme
}

// GetDescription returns the value of Description.
func (s *EditTalkSessionOK) GetDescription() OptNilString {
	return s.Description
}

// GetOwner returns the value of Owner.
func (s *EditTalkSessionOK) GetOwner() EditTalkSessionOKOwner {
	return s.Owner
}

// GetCreatedAt returns the value of CreatedAt.
func (s *EditTalkSessionOK) GetCreatedAt() string {
	return s.CreatedAt
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *EditTalkSessionOK) GetScheduledEndTime() string {
	return s.ScheduledEndTime
}

// GetLocation returns the value of Location.
func (s *EditTalkSessionOK) GetLocation() OptEditTalkSessionOKLocation {
	return s.Location
}

// GetCity returns the value of City.
func (s *EditTalkSessionOK) GetCity() OptNilString {
	return s.City
}

// GetPrefecture returns the value of Prefecture.
func (s *EditTalkSessionOK) GetPrefecture() OptNilString {
	return s.Prefecture
}

// SetID sets the value of ID.
func (s *EditTalkSessionOK) SetID(val string) {
	s.ID = val
}

// SetTheme sets the value of Theme.
func (s *EditTalkSessionOK) SetTheme(val string) {
	s.Theme = val
}

// SetDescription sets the value of Description.
func (s *EditTalkSessionOK) SetDescription(val OptNilString) {
	s.Description = val
}

// SetOwner sets the value of Owner.
func (s *EditTalkSessionOK) SetOwner(val EditTalkSessionOKOwner) {
	s.Owner = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *EditTalkSessionOK) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *EditTalkSessionOK) SetScheduledEndTime(val string) {
	s.ScheduledEndTime = val
}

// SetLocation sets the value of Location.
func (s *EditTalkSessionOK) SetLocation(val OptEditTalkSessionOKLocation) {
	s.Location = val
}

// SetCity sets the value of City.
func (s *EditTalkSessionOK) SetCity(val OptNilString) {
	s.City = val
}

// SetPrefecture sets the value of Prefecture.
func (s *EditTalkSessionOK) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

func (*EditTalkSessionOK) editTalkSessionRes() {}

// 位置情報.
type EditTalkSessionOKLocation struct {
	// 緯度.
	Latitude OptFloat64 `json:"latitude"`
	// 経度.
	Longitude OptFloat64 `json:"longitude"`
}

// GetLatitude returns the value of Latitude.
func (s *EditTalkSessionOKLocation) GetLatitude() OptFloat64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *EditTalkSessionOKLocation) GetLongitude() OptFloat64 {
	return s.Longitude
}

// SetLatitude sets the value of Latitude.
func (s *EditTalkSessionOKLocation) SetLatitude(val OptFloat64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *EditTalkSessionOKLocation) SetLongitude(val OptFloat64) {
	s.Longitude = val
}

// 作成ユーザー.
type EditTalkSessionOKOwner struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *EditTalkSessionOKOwner) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *EditTalkSessionOKOwner) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *EditTalkSessionOKOwner) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *EditTalkSessionOKOwner) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *EditTalkSessionOKOwner) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *EditTalkSessionOKOwner) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type EditTalkSessionReq struct {
	Theme            string `json:"theme"`
	ScheduledEndTime string `json:"scheduledEndTime"`
	// 緯度.
	Latitude OptNilFloat64 `json:"latitude"`
	// 経度.
	Longitude OptFloat64 `json:"longitude"`
	// 都道府県.
	Prefecture OptNilString `json:"prefecture"`
	// 市区町村.
	City OptNilString `json:"city"`
	// 説明文.
	Description OptNilString `json:"description"`
}

// GetTheme returns the value of Theme.
func (s *EditTalkSessionReq) GetTheme() string {
	return s.Theme
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *EditTalkSessionReq) GetScheduledEndTime() string {
	return s.ScheduledEndTime
}

// GetLatitude returns the value of Latitude.
func (s *EditTalkSessionReq) GetLatitude() OptNilFloat64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *EditTalkSessionReq) GetLongitude() OptFloat64 {
	return s.Longitude
}

// GetPrefecture returns the value of Prefecture.
func (s *EditTalkSessionReq) GetPrefecture() OptNilString {
	return s.Prefecture
}

// GetCity returns the value of City.
func (s *EditTalkSessionReq) GetCity() OptNilString {
	return s.City
}

// GetDescription returns the value of Description.
func (s *EditTalkSessionReq) GetDescription() OptNilString {
	return s.Description
}

// SetTheme sets the value of Theme.
func (s *EditTalkSessionReq) SetTheme(val string) {
	s.Theme = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *EditTalkSessionReq) SetScheduledEndTime(val string) {
	s.ScheduledEndTime = val
}

// SetLatitude sets the value of Latitude.
func (s *EditTalkSessionReq) SetLatitude(val OptNilFloat64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *EditTalkSessionReq) SetLongitude(val OptFloat64) {
	s.Longitude = val
}

// SetPrefecture sets the value of Prefecture.
func (s *EditTalkSessionReq) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

// SetCity sets the value of City.
func (s *EditTalkSessionReq) SetCity(val OptNilString) {
	s.City = val
}

// SetDescription sets the value of Description.
func (s *EditTalkSessionReq) SetDescription(val OptNilString) {
	s.Description = val
}

type EditTimeLineBadRequest struct{}

func (*EditTimeLineBadRequest) editTimeLineRes() {}

type EditTimeLineInternalServerError struct{}

func (*EditTimeLineInternalServerError) editTimeLineRes() {}

type EditTimeLineOK struct {
	ActionItemID string `json:"ActionItemID"`
	Sequence     int    `json:"Sequence"`
	Content      string `json:"Content"`
	Status       string `json:"Status"`
	CreatedAt    string `json:"CreatedAt"`
	UpdatedAt    string `json:"UpdatedAt"`
}

// GetActionItemID returns the value of ActionItemID.
func (s *EditTimeLineOK) GetActionItemID() string {
	return s.ActionItemID
}

// GetSequence returns the value of Sequence.
func (s *EditTimeLineOK) GetSequence() int {
	return s.Sequence
}

// GetContent returns the value of Content.
func (s *EditTimeLineOK) GetContent() string {
	return s.Content
}

// GetStatus returns the value of Status.
func (s *EditTimeLineOK) GetStatus() string {
	return s.Status
}

// GetCreatedAt returns the value of CreatedAt.
func (s *EditTimeLineOK) GetCreatedAt() string {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *EditTimeLineOK) GetUpdatedAt() string {
	return s.UpdatedAt
}

// SetActionItemID sets the value of ActionItemID.
func (s *EditTimeLineOK) SetActionItemID(val string) {
	s.ActionItemID = val
}

// SetSequence sets the value of Sequence.
func (s *EditTimeLineOK) SetSequence(val int) {
	s.Sequence = val
}

// SetContent sets the value of Content.
func (s *EditTimeLineOK) SetContent(val string) {
	s.Content = val
}

// SetStatus sets the value of Status.
func (s *EditTimeLineOK) SetStatus(val string) {
	s.Status = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *EditTimeLineOK) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *EditTimeLineOK) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

func (*EditTimeLineOK) editTimeLineRes() {}

type EditTimeLineReq struct {
	Content OptNilString `json:"content"`
	Status  OptNilString `json:"status"`
}

// GetContent returns the value of Content.
func (s *EditTimeLineReq) GetContent() OptNilString {
	return s.Content
}

// GetStatus returns the value of Status.
func (s *EditTimeLineReq) GetStatus() OptNilString {
	return s.Status
}

// SetContent sets the value of Content.
func (s *EditTimeLineReq) SetContent(val OptNilString) {
	s.Content = val
}

// SetStatus sets the value of Status.
func (s *EditTimeLineReq) SetStatus(val OptNilString) {
	s.Status = val
}

type EditUserProfileBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *EditUserProfileBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *EditUserProfileBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *EditUserProfileBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *EditUserProfileBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*EditUserProfileBadRequest) editUserProfileRes() {}

type EditUserProfileInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *EditUserProfileInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *EditUserProfileInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *EditUserProfileInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *EditUserProfileInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*EditUserProfileInternalServerError) editUserProfileRes() {}

type EditUserProfileOK struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *EditUserProfileOK) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *EditUserProfileOK) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *EditUserProfileOK) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *EditUserProfileOK) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *EditUserProfileOK) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *EditUserProfileOK) SetIconURL(val OptNilString) {
	s.IconURL = val
}

func (*EditUserProfileOK) editUserProfileRes() {}

type EditUserProfileReq struct {
	// ユーザー名.
	DisplayName OptNilString `json:"displayName"`
	// ユーザーアイコン.
	Icon       OptMultipartFile `json:"icon"`
	DeleteIcon OptNilBool       `json:"deleteIcon"`
	// 生まれ年.
	YearOfBirth OptNilInt `json:"yearOfBirth"`
	// 性別.
	Gender OptNilEditUserProfileReqGender `json:"gender"`
	// 市区町村.
	City OptNilString `json:"city"`
	// 職業.
	Occupation OptNilEditUserProfileReqOccupation `json:"occupation"`
	// 世帯人数.
	HouseholdSize OptNilInt `json:"householdSize"`
	// 都道府県.
	Prefecture OptNilString `json:"prefecture"`
}

// GetDisplayName returns the value of DisplayName.
func (s *EditUserProfileReq) GetDisplayName() OptNilString {
	return s.DisplayName
}

// GetIcon returns the value of Icon.
func (s *EditUserProfileReq) GetIcon() OptMultipartFile {
	return s.Icon
}

// GetDeleteIcon returns the value of DeleteIcon.
func (s *EditUserProfileReq) GetDeleteIcon() OptNilBool {
	return s.DeleteIcon
}

// GetYearOfBirth returns the value of YearOfBirth.
func (s *EditUserProfileReq) GetYearOfBirth() OptNilInt {
	return s.YearOfBirth
}

// GetGender returns the value of Gender.
func (s *EditUserProfileReq) GetGender() OptNilEditUserProfileReqGender {
	return s.Gender
}

// GetCity returns the value of City.
func (s *EditUserProfileReq) GetCity() OptNilString {
	return s.City
}

// GetOccupation returns the value of Occupation.
func (s *EditUserProfileReq) GetOccupation() OptNilEditUserProfileReqOccupation {
	return s.Occupation
}

// GetHouseholdSize returns the value of HouseholdSize.
func (s *EditUserProfileReq) GetHouseholdSize() OptNilInt {
	return s.HouseholdSize
}

// GetPrefecture returns the value of Prefecture.
func (s *EditUserProfileReq) GetPrefecture() OptNilString {
	return s.Prefecture
}

// SetDisplayName sets the value of DisplayName.
func (s *EditUserProfileReq) SetDisplayName(val OptNilString) {
	s.DisplayName = val
}

// SetIcon sets the value of Icon.
func (s *EditUserProfileReq) SetIcon(val OptMultipartFile) {
	s.Icon = val
}

// SetDeleteIcon sets the value of DeleteIcon.
func (s *EditUserProfileReq) SetDeleteIcon(val OptNilBool) {
	s.DeleteIcon = val
}

// SetYearOfBirth sets the value of YearOfBirth.
func (s *EditUserProfileReq) SetYearOfBirth(val OptNilInt) {
	s.YearOfBirth = val
}

// SetGender sets the value of Gender.
func (s *EditUserProfileReq) SetGender(val OptNilEditUserProfileReqGender) {
	s.Gender = val
}

// SetCity sets the value of City.
func (s *EditUserProfileReq) SetCity(val OptNilString) {
	s.City = val
}

// SetOccupation sets the value of Occupation.
func (s *EditUserProfileReq) SetOccupation(val OptNilEditUserProfileReqOccupation) {
	s.Occupation = val
}

// SetHouseholdSize sets the value of HouseholdSize.
func (s *EditUserProfileReq) SetHouseholdSize(val OptNilInt) {
	s.HouseholdSize = val
}

// SetPrefecture sets the value of Prefecture.
func (s *EditUserProfileReq) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

// 性別.
type EditUserProfileReqGender string

const (
	EditUserProfileReqGender_0 EditUserProfileReqGender = "男性"
	EditUserProfileReqGender_1 EditUserProfileReqGender = "女性"
	EditUserProfileReqGender_2 EditUserProfileReqGender = "その他"
	EditUserProfileReqGender_3 EditUserProfileReqGender = "回答しない"
)

// AllValues returns all EditUserProfileReqGender values.
func (EditUserProfileReqGender) AllValues() []EditUserProfileReqGender {
	return []EditUserProfileReqGender{
		EditUserProfileReqGender_0,
		EditUserProfileReqGender_1,
		EditUserProfileReqGender_2,
		EditUserProfileReqGender_3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s EditUserProfileReqGender) MarshalText() ([]byte, error) {
	switch s {
	case EditUserProfileReqGender_0:
		return []byte(s), nil
	case EditUserProfileReqGender_1:
		return []byte(s), nil
	case EditUserProfileReqGender_2:
		return []byte(s), nil
	case EditUserProfileReqGender_3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EditUserProfileReqGender) UnmarshalText(data []byte) error {
	switch EditUserProfileReqGender(data) {
	case EditUserProfileReqGender_0:
		*s = EditUserProfileReqGender_0
		return nil
	case EditUserProfileReqGender_1:
		*s = EditUserProfileReqGender_1
		return nil
	case EditUserProfileReqGender_2:
		*s = EditUserProfileReqGender_2
		return nil
	case EditUserProfileReqGender_3:
		*s = EditUserProfileReqGender_3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 職業.
type EditUserProfileReqOccupation string

const (
	EditUserProfileReqOccupation_0  EditUserProfileReqOccupation = "正社員"
	EditUserProfileReqOccupation_1  EditUserProfileReqOccupation = "契約社員"
	EditUserProfileReqOccupation_2  EditUserProfileReqOccupation = "公務員"
	EditUserProfileReqOccupation_3  EditUserProfileReqOccupation = "自営業"
	EditUserProfileReqOccupation_4  EditUserProfileReqOccupation = "会社役員"
	EditUserProfileReqOccupation_5  EditUserProfileReqOccupation = "パート・アルバイト"
	EditUserProfileReqOccupation_6  EditUserProfileReqOccupation = "家事従事者"
	EditUserProfileReqOccupation_7  EditUserProfileReqOccupation = "学生"
	EditUserProfileReqOccupation_8  EditUserProfileReqOccupation = "無職"
	EditUserProfileReqOccupation_9  EditUserProfileReqOccupation = "その他"
	EditUserProfileReqOccupation_10 EditUserProfileReqOccupation = "回答しない"
)

// AllValues returns all EditUserProfileReqOccupation values.
func (EditUserProfileReqOccupation) AllValues() []EditUserProfileReqOccupation {
	return []EditUserProfileReqOccupation{
		EditUserProfileReqOccupation_0,
		EditUserProfileReqOccupation_1,
		EditUserProfileReqOccupation_2,
		EditUserProfileReqOccupation_3,
		EditUserProfileReqOccupation_4,
		EditUserProfileReqOccupation_5,
		EditUserProfileReqOccupation_6,
		EditUserProfileReqOccupation_7,
		EditUserProfileReqOccupation_8,
		EditUserProfileReqOccupation_9,
		EditUserProfileReqOccupation_10,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s EditUserProfileReqOccupation) MarshalText() ([]byte, error) {
	switch s {
	case EditUserProfileReqOccupation_0:
		return []byte(s), nil
	case EditUserProfileReqOccupation_1:
		return []byte(s), nil
	case EditUserProfileReqOccupation_2:
		return []byte(s), nil
	case EditUserProfileReqOccupation_3:
		return []byte(s), nil
	case EditUserProfileReqOccupation_4:
		return []byte(s), nil
	case EditUserProfileReqOccupation_5:
		return []byte(s), nil
	case EditUserProfileReqOccupation_6:
		return []byte(s), nil
	case EditUserProfileReqOccupation_7:
		return []byte(s), nil
	case EditUserProfileReqOccupation_8:
		return []byte(s), nil
	case EditUserProfileReqOccupation_9:
		return []byte(s), nil
	case EditUserProfileReqOccupation_10:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EditUserProfileReqOccupation) UnmarshalText(data []byte) error {
	switch EditUserProfileReqOccupation(data) {
	case EditUserProfileReqOccupation_0:
		*s = EditUserProfileReqOccupation_0
		return nil
	case EditUserProfileReqOccupation_1:
		*s = EditUserProfileReqOccupation_1
		return nil
	case EditUserProfileReqOccupation_2:
		*s = EditUserProfileReqOccupation_2
		return nil
	case EditUserProfileReqOccupation_3:
		*s = EditUserProfileReqOccupation_3
		return nil
	case EditUserProfileReqOccupation_4:
		*s = EditUserProfileReqOccupation_4
		return nil
	case EditUserProfileReqOccupation_5:
		*s = EditUserProfileReqOccupation_5
		return nil
	case EditUserProfileReqOccupation_6:
		*s = EditUserProfileReqOccupation_6
		return nil
	case EditUserProfileReqOccupation_7:
		*s = EditUserProfileReqOccupation_7
		return nil
	case EditUserProfileReqOccupation_8:
		*s = EditUserProfileReqOccupation_8
		return nil
	case EditUserProfileReqOccupation_9:
		*s = EditUserProfileReqOccupation_9
		return nil
	case EditUserProfileReqOccupation_10:
		*s = EditUserProfileReqOccupation_10
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetConclusionBadRequest struct{}

func (*GetConclusionBadRequest) getConclusionRes() {}

type GetConclusionInternalServerError struct{}

func (*GetConclusionInternalServerError) getConclusionRes() {}

type GetConclusionOK struct {
	// 作成ユーザー.
	User GetConclusionOKUser `json:"user"`
	// 結論本文.
	Content string `json:"content"`
}

// GetUser returns the value of User.
func (s *GetConclusionOK) GetUser() GetConclusionOKUser {
	return s.User
}

// GetContent returns the value of Content.
func (s *GetConclusionOK) GetContent() string {
	return s.Content
}

// SetUser sets the value of User.
func (s *GetConclusionOK) SetUser(val GetConclusionOKUser) {
	s.User = val
}

// SetContent sets the value of Content.
func (s *GetConclusionOK) SetContent(val string) {
	s.Content = val
}

func (*GetConclusionOK) getConclusionRes() {}

// 作成ユーザー.
type GetConclusionOKUser struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *GetConclusionOKUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetConclusionOKUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *GetConclusionOKUser) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *GetConclusionOKUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetConclusionOKUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *GetConclusionOKUser) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type GetOpenedTalkSessionBadRequest struct{}

func (*GetOpenedTalkSessionBadRequest) getOpenedTalkSessionRes() {}

type GetOpenedTalkSessionInternalServerError struct{}

func (*GetOpenedTalkSessionInternalServerError) getOpenedTalkSessionRes() {}

type GetOpenedTalkSessionOK struct {
	TalkSessions []GetOpenedTalkSessionOKTalkSessionsItem `json:"talkSessions"`
}

// GetTalkSessions returns the value of TalkSessions.
func (s *GetOpenedTalkSessionOK) GetTalkSessions() []GetOpenedTalkSessionOKTalkSessionsItem {
	return s.TalkSessions
}

// SetTalkSessions sets the value of TalkSessions.
func (s *GetOpenedTalkSessionOK) SetTalkSessions(val []GetOpenedTalkSessionOKTalkSessionsItem) {
	s.TalkSessions = val
}

func (*GetOpenedTalkSessionOK) getOpenedTalkSessionRes() {}

type GetOpenedTalkSessionOKTalkSessionsItem struct {
	TalkSession  GetOpenedTalkSessionOKTalkSessionsItemTalkSession `json:"talkSession"`
	OpinionCount int                                               `json:"opinionCount"`
}

// GetTalkSession returns the value of TalkSession.
func (s *GetOpenedTalkSessionOKTalkSessionsItem) GetTalkSession() GetOpenedTalkSessionOKTalkSessionsItemTalkSession {
	return s.TalkSession
}

// GetOpinionCount returns the value of OpinionCount.
func (s *GetOpenedTalkSessionOKTalkSessionsItem) GetOpinionCount() int {
	return s.OpinionCount
}

// SetTalkSession sets the value of TalkSession.
func (s *GetOpenedTalkSessionOKTalkSessionsItem) SetTalkSession(val GetOpenedTalkSessionOKTalkSessionsItemTalkSession) {
	s.TalkSession = val
}

// SetOpinionCount sets the value of OpinionCount.
func (s *GetOpenedTalkSessionOKTalkSessionsItem) SetOpinionCount(val int) {
	s.OpinionCount = val
}

type GetOpenedTalkSessionOKTalkSessionsItemTalkSession struct {
	// トークセッションID.
	ID string `json:"id"`
	// テーマ.
	Theme string `json:"theme"`
	// 説明.
	Description OptNilString `json:"description"`
	// 作成ユーザー.
	Owner GetOpenedTalkSessionOKTalkSessionsItemTalkSessionOwner `json:"owner"`
	// 作成日時.
	CreatedAt string `json:"createdAt"`
	// 終了予定日時.
	ScheduledEndTime string `json:"scheduledEndTime"`
	// 位置情報.
	Location OptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation `json:"location"`
	// 市区町村.
	City OptNilString `json:"city"`
	// 都道府県.
	Prefecture OptNilString `json:"prefecture"`
}

// GetID returns the value of ID.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) GetID() string {
	return s.ID
}

// GetTheme returns the value of Theme.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) GetTheme() string {
	return s.Theme
}

// GetDescription returns the value of Description.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) GetDescription() OptNilString {
	return s.Description
}

// GetOwner returns the value of Owner.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) GetOwner() GetOpenedTalkSessionOKTalkSessionsItemTalkSessionOwner {
	return s.Owner
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) GetCreatedAt() string {
	return s.CreatedAt
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) GetScheduledEndTime() string {
	return s.ScheduledEndTime
}

// GetLocation returns the value of Location.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) GetLocation() OptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation {
	return s.Location
}

// GetCity returns the value of City.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) GetCity() OptNilString {
	return s.City
}

// GetPrefecture returns the value of Prefecture.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) GetPrefecture() OptNilString {
	return s.Prefecture
}

// SetID sets the value of ID.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) SetID(val string) {
	s.ID = val
}

// SetTheme sets the value of Theme.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) SetTheme(val string) {
	s.Theme = val
}

// SetDescription sets the value of Description.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) SetDescription(val OptNilString) {
	s.Description = val
}

// SetOwner sets the value of Owner.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) SetOwner(val GetOpenedTalkSessionOKTalkSessionsItemTalkSessionOwner) {
	s.Owner = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) SetScheduledEndTime(val string) {
	s.ScheduledEndTime = val
}

// SetLocation sets the value of Location.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) SetLocation(val OptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation) {
	s.Location = val
}

// SetCity sets the value of City.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) SetCity(val OptNilString) {
	s.City = val
}

// SetPrefecture sets the value of Prefecture.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSession) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

// 位置情報.
type GetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation struct {
	// 緯度.
	Latitude OptFloat64 `json:"latitude"`
	// 経度.
	Longitude OptFloat64 `json:"longitude"`
}

// GetLatitude returns the value of Latitude.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation) GetLatitude() OptFloat64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation) GetLongitude() OptFloat64 {
	return s.Longitude
}

// SetLatitude sets the value of Latitude.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation) SetLatitude(val OptFloat64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation) SetLongitude(val OptFloat64) {
	s.Longitude = val
}

// 作成ユーザー.
type GetOpenedTalkSessionOKTalkSessionsItemTalkSessionOwner struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSessionOwner) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSessionOwner) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSessionOwner) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSessionOwner) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSessionOwner) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *GetOpenedTalkSessionOKTalkSessionsItemTalkSessionOwner) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type GetOpenedTalkSessionStatus string

const (
	GetOpenedTalkSessionStatusFinished GetOpenedTalkSessionStatus = "finished"
	GetOpenedTalkSessionStatusOpen     GetOpenedTalkSessionStatus = "open"
)

// AllValues returns all GetOpenedTalkSessionStatus values.
func (GetOpenedTalkSessionStatus) AllValues() []GetOpenedTalkSessionStatus {
	return []GetOpenedTalkSessionStatus{
		GetOpenedTalkSessionStatusFinished,
		GetOpenedTalkSessionStatusOpen,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetOpenedTalkSessionStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetOpenedTalkSessionStatusFinished:
		return []byte(s), nil
	case GetOpenedTalkSessionStatusOpen:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetOpenedTalkSessionStatus) UnmarshalText(data []byte) error {
	switch GetOpenedTalkSessionStatus(data) {
	case GetOpenedTalkSessionStatusFinished:
		*s = GetOpenedTalkSessionStatusFinished
		return nil
	case GetOpenedTalkSessionStatusOpen:
		*s = GetOpenedTalkSessionStatusOpen
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetOpinionDetailInternalServerError struct{}

func (*GetOpinionDetailInternalServerError) getOpinionDetailRes() {}

type GetOpinionDetailOK struct {
	Opinion GetOpinionDetailOKOpinion `json:"opinion"`
	// 作成ユーザー.
	User GetOpinionDetailOKUser `json:"user"`
}

// GetOpinion returns the value of Opinion.
func (s *GetOpinionDetailOK) GetOpinion() GetOpinionDetailOKOpinion {
	return s.Opinion
}

// GetUser returns the value of User.
func (s *GetOpinionDetailOK) GetUser() GetOpinionDetailOKUser {
	return s.User
}

// SetOpinion sets the value of Opinion.
func (s *GetOpinionDetailOK) SetOpinion(val GetOpinionDetailOKOpinion) {
	s.Opinion = val
}

// SetUser sets the value of User.
func (s *GetOpinionDetailOK) SetUser(val GetOpinionDetailOKUser) {
	s.User = val
}

func (*GetOpinionDetailOK) getOpinionDetailRes() {}

type GetOpinionDetailOKOpinion struct {
	// 意見ID.
	ID    string    `json:"id"`
	Title OptString `json:"title"`
	// 意見のテキスト.
	Content string `json:"content"`
	// 親の意見ID。ルートならば無し.
	ParentID OptString `json:"parentID"`
	// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
	VoteType OptGetOpinionDetailOKOpinionVoteType `json:"voteType"`
	// 画像が返る場合もある.
	PictureURL OptString `json:"pictureURL"`
	// 参考文献URL.
	ReferenceURL OptString `json:"referenceURL"`
	PostedAt     string    `json:"postedAt"`
}

// GetID returns the value of ID.
func (s *GetOpinionDetailOKOpinion) GetID() string {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *GetOpinionDetailOKOpinion) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *GetOpinionDetailOKOpinion) GetContent() string {
	return s.Content
}

// GetParentID returns the value of ParentID.
func (s *GetOpinionDetailOKOpinion) GetParentID() OptString {
	return s.ParentID
}

// GetVoteType returns the value of VoteType.
func (s *GetOpinionDetailOKOpinion) GetVoteType() OptGetOpinionDetailOKOpinionVoteType {
	return s.VoteType
}

// GetPictureURL returns the value of PictureURL.
func (s *GetOpinionDetailOKOpinion) GetPictureURL() OptString {
	return s.PictureURL
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *GetOpinionDetailOKOpinion) GetReferenceURL() OptString {
	return s.ReferenceURL
}

// GetPostedAt returns the value of PostedAt.
func (s *GetOpinionDetailOKOpinion) GetPostedAt() string {
	return s.PostedAt
}

// SetID sets the value of ID.
func (s *GetOpinionDetailOKOpinion) SetID(val string) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *GetOpinionDetailOKOpinion) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *GetOpinionDetailOKOpinion) SetContent(val string) {
	s.Content = val
}

// SetParentID sets the value of ParentID.
func (s *GetOpinionDetailOKOpinion) SetParentID(val OptString) {
	s.ParentID = val
}

// SetVoteType sets the value of VoteType.
func (s *GetOpinionDetailOKOpinion) SetVoteType(val OptGetOpinionDetailOKOpinionVoteType) {
	s.VoteType = val
}

// SetPictureURL sets the value of PictureURL.
func (s *GetOpinionDetailOKOpinion) SetPictureURL(val OptString) {
	s.PictureURL = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *GetOpinionDetailOKOpinion) SetReferenceURL(val OptString) {
	s.ReferenceURL = val
}

// SetPostedAt sets the value of PostedAt.
func (s *GetOpinionDetailOKOpinion) SetPostedAt(val string) {
	s.PostedAt = val
}

// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
type GetOpinionDetailOKOpinionVoteType string

const (
	GetOpinionDetailOKOpinionVoteTypeAgree    GetOpinionDetailOKOpinionVoteType = "agree"
	GetOpinionDetailOKOpinionVoteTypeDisagree GetOpinionDetailOKOpinionVoteType = "disagree"
	GetOpinionDetailOKOpinionVoteTypePass     GetOpinionDetailOKOpinionVoteType = "pass"
)

// AllValues returns all GetOpinionDetailOKOpinionVoteType values.
func (GetOpinionDetailOKOpinionVoteType) AllValues() []GetOpinionDetailOKOpinionVoteType {
	return []GetOpinionDetailOKOpinionVoteType{
		GetOpinionDetailOKOpinionVoteTypeAgree,
		GetOpinionDetailOKOpinionVoteTypeDisagree,
		GetOpinionDetailOKOpinionVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetOpinionDetailOKOpinionVoteType) MarshalText() ([]byte, error) {
	switch s {
	case GetOpinionDetailOKOpinionVoteTypeAgree:
		return []byte(s), nil
	case GetOpinionDetailOKOpinionVoteTypeDisagree:
		return []byte(s), nil
	case GetOpinionDetailOKOpinionVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetOpinionDetailOKOpinionVoteType) UnmarshalText(data []byte) error {
	switch GetOpinionDetailOKOpinionVoteType(data) {
	case GetOpinionDetailOKOpinionVoteTypeAgree:
		*s = GetOpinionDetailOKOpinionVoteTypeAgree
		return nil
	case GetOpinionDetailOKOpinionVoteTypeDisagree:
		*s = GetOpinionDetailOKOpinionVoteTypeDisagree
		return nil
	case GetOpinionDetailOKOpinionVoteTypePass:
		*s = GetOpinionDetailOKOpinionVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 作成ユーザー.
type GetOpinionDetailOKUser struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *GetOpinionDetailOKUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetOpinionDetailOKUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *GetOpinionDetailOKUser) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *GetOpinionDetailOKUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetOpinionDetailOKUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *GetOpinionDetailOKUser) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type GetOpinionsForTalkSessionBadRequest struct{}

func (*GetOpinionsForTalkSessionBadRequest) getOpinionsForTalkSessionRes() {}

type GetOpinionsForTalkSessionInternalServerError struct{}

func (*GetOpinionsForTalkSessionInternalServerError) getOpinionsForTalkSessionRes() {}

type GetOpinionsForTalkSessionOK struct {
	Opinions   []GetOpinionsForTalkSessionOKOpinionsItem `json:"opinions"`
	Pagination GetOpinionsForTalkSessionOKPagination     `json:"pagination"`
}

// GetOpinions returns the value of Opinions.
func (s *GetOpinionsForTalkSessionOK) GetOpinions() []GetOpinionsForTalkSessionOKOpinionsItem {
	return s.Opinions
}

// GetPagination returns the value of Pagination.
func (s *GetOpinionsForTalkSessionOK) GetPagination() GetOpinionsForTalkSessionOKPagination {
	return s.Pagination
}

// SetOpinions sets the value of Opinions.
func (s *GetOpinionsForTalkSessionOK) SetOpinions(val []GetOpinionsForTalkSessionOKOpinionsItem) {
	s.Opinions = val
}

// SetPagination sets the value of Pagination.
func (s *GetOpinionsForTalkSessionOK) SetPagination(val GetOpinionsForTalkSessionOKPagination) {
	s.Pagination = val
}

func (*GetOpinionsForTalkSessionOK) getOpinionsForTalkSessionRes() {}

type GetOpinionsForTalkSessionOKOpinionsItem struct {
	Opinion GetOpinionsForTalkSessionOKOpinionsItemOpinion `json:"opinion"`
	// 作成ユーザー.
	User       GetOpinionsForTalkSessionOKOpinionsItemUser `json:"user"`
	ReplyCount int                                         `json:"replyCount"`
	// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
	MyVoteType GetOpinionsForTalkSessionOKOpinionsItemMyVoteType `json:"myVoteType"`
}

// GetOpinion returns the value of Opinion.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) GetOpinion() GetOpinionsForTalkSessionOKOpinionsItemOpinion {
	return s.Opinion
}

// GetUser returns the value of User.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) GetUser() GetOpinionsForTalkSessionOKOpinionsItemUser {
	return s.User
}

// GetReplyCount returns the value of ReplyCount.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) GetReplyCount() int {
	return s.ReplyCount
}

// GetMyVoteType returns the value of MyVoteType.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) GetMyVoteType() GetOpinionsForTalkSessionOKOpinionsItemMyVoteType {
	return s.MyVoteType
}

// SetOpinion sets the value of Opinion.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) SetOpinion(val GetOpinionsForTalkSessionOKOpinionsItemOpinion) {
	s.Opinion = val
}

// SetUser sets the value of User.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) SetUser(val GetOpinionsForTalkSessionOKOpinionsItemUser) {
	s.User = val
}

// SetReplyCount sets the value of ReplyCount.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) SetReplyCount(val int) {
	s.ReplyCount = val
}

// SetMyVoteType sets the value of MyVoteType.
func (s *GetOpinionsForTalkSessionOKOpinionsItem) SetMyVoteType(val GetOpinionsForTalkSessionOKOpinionsItemMyVoteType) {
	s.MyVoteType = val
}

// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
type GetOpinionsForTalkSessionOKOpinionsItemMyVoteType string

const (
	GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeAgree    GetOpinionsForTalkSessionOKOpinionsItemMyVoteType = "agree"
	GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeDisagree GetOpinionsForTalkSessionOKOpinionsItemMyVoteType = "disagree"
	GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypePass     GetOpinionsForTalkSessionOKOpinionsItemMyVoteType = "pass"
)

// AllValues returns all GetOpinionsForTalkSessionOKOpinionsItemMyVoteType values.
func (GetOpinionsForTalkSessionOKOpinionsItemMyVoteType) AllValues() []GetOpinionsForTalkSessionOKOpinionsItemMyVoteType {
	return []GetOpinionsForTalkSessionOKOpinionsItemMyVoteType{
		GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeAgree,
		GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeDisagree,
		GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetOpinionsForTalkSessionOKOpinionsItemMyVoteType) MarshalText() ([]byte, error) {
	switch s {
	case GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeAgree:
		return []byte(s), nil
	case GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeDisagree:
		return []byte(s), nil
	case GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetOpinionsForTalkSessionOKOpinionsItemMyVoteType) UnmarshalText(data []byte) error {
	switch GetOpinionsForTalkSessionOKOpinionsItemMyVoteType(data) {
	case GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeAgree:
		*s = GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeAgree
		return nil
	case GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeDisagree:
		*s = GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypeDisagree
		return nil
	case GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypePass:
		*s = GetOpinionsForTalkSessionOKOpinionsItemMyVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetOpinionsForTalkSessionOKOpinionsItemOpinion struct {
	// 意見ID.
	ID    string    `json:"id"`
	Title OptString `json:"title"`
	// 意見のテキスト.
	Content string `json:"content"`
	// 親の意見ID。ルートならば無し.
	ParentID OptString `json:"parentID"`
	// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
	VoteType OptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType `json:"voteType"`
	// 画像が返る場合もある.
	PictureURL OptString `json:"pictureURL"`
	// 参考文献URL.
	ReferenceURL OptString `json:"referenceURL"`
	PostedAt     string    `json:"postedAt"`
}

// GetID returns the value of ID.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) GetID() string {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) GetContent() string {
	return s.Content
}

// GetParentID returns the value of ParentID.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) GetParentID() OptString {
	return s.ParentID
}

// GetVoteType returns the value of VoteType.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) GetVoteType() OptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType {
	return s.VoteType
}

// GetPictureURL returns the value of PictureURL.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) GetPictureURL() OptString {
	return s.PictureURL
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) GetReferenceURL() OptString {
	return s.ReferenceURL
}

// GetPostedAt returns the value of PostedAt.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) GetPostedAt() string {
	return s.PostedAt
}

// SetID sets the value of ID.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) SetID(val string) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) SetContent(val string) {
	s.Content = val
}

// SetParentID sets the value of ParentID.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) SetParentID(val OptString) {
	s.ParentID = val
}

// SetVoteType sets the value of VoteType.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) SetVoteType(val OptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType) {
	s.VoteType = val
}

// SetPictureURL sets the value of PictureURL.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) SetPictureURL(val OptString) {
	s.PictureURL = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) SetReferenceURL(val OptString) {
	s.ReferenceURL = val
}

// SetPostedAt sets the value of PostedAt.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinion) SetPostedAt(val string) {
	s.PostedAt = val
}

// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
type GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType string

const (
	GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypeAgree    GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType = "agree"
	GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypeDisagree GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType = "disagree"
	GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypePass     GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType = "pass"
)

// AllValues returns all GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType values.
func (GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType) AllValues() []GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType {
	return []GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType{
		GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypeAgree,
		GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypeDisagree,
		GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType) MarshalText() ([]byte, error) {
	switch s {
	case GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypeAgree:
		return []byte(s), nil
	case GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypeDisagree:
		return []byte(s), nil
	case GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType) UnmarshalText(data []byte) error {
	switch GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType(data) {
	case GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypeAgree:
		*s = GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypeAgree
		return nil
	case GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypeDisagree:
		*s = GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypeDisagree
		return nil
	case GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypePass:
		*s = GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 作成ユーザー.
type GetOpinionsForTalkSessionOKOpinionsItemUser struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *GetOpinionsForTalkSessionOKOpinionsItemUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetOpinionsForTalkSessionOKOpinionsItemUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *GetOpinionsForTalkSessionOKOpinionsItemUser) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *GetOpinionsForTalkSessionOKOpinionsItemUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetOpinionsForTalkSessionOKOpinionsItemUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *GetOpinionsForTalkSessionOKOpinionsItemUser) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type GetOpinionsForTalkSessionOKPagination struct {
	TotalCount int `json:"totalCount"`
}

// GetTotalCount returns the value of TotalCount.
func (s *GetOpinionsForTalkSessionOKPagination) GetTotalCount() int {
	return s.TotalCount
}

// SetTotalCount sets the value of TotalCount.
func (s *GetOpinionsForTalkSessionOKPagination) SetTotalCount(val int) {
	s.TotalCount = val
}

type GetOpinionsForTalkSessionSort string

const (
	GetOpinionsForTalkSessionSortLatest      GetOpinionsForTalkSessionSort = "latest"
	GetOpinionsForTalkSessionSortMostReplies GetOpinionsForTalkSessionSort = "mostReplies"
	GetOpinionsForTalkSessionSortOldest      GetOpinionsForTalkSessionSort = "oldest"
)

// AllValues returns all GetOpinionsForTalkSessionSort values.
func (GetOpinionsForTalkSessionSort) AllValues() []GetOpinionsForTalkSessionSort {
	return []GetOpinionsForTalkSessionSort{
		GetOpinionsForTalkSessionSortLatest,
		GetOpinionsForTalkSessionSortMostReplies,
		GetOpinionsForTalkSessionSortOldest,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetOpinionsForTalkSessionSort) MarshalText() ([]byte, error) {
	switch s {
	case GetOpinionsForTalkSessionSortLatest:
		return []byte(s), nil
	case GetOpinionsForTalkSessionSortMostReplies:
		return []byte(s), nil
	case GetOpinionsForTalkSessionSortOldest:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetOpinionsForTalkSessionSort) UnmarshalText(data []byte) error {
	switch GetOpinionsForTalkSessionSort(data) {
	case GetOpinionsForTalkSessionSortLatest:
		*s = GetOpinionsForTalkSessionSortLatest
		return nil
	case GetOpinionsForTalkSessionSortMostReplies:
		*s = GetOpinionsForTalkSessionSortMostReplies
		return nil
	case GetOpinionsForTalkSessionSortOldest:
		*s = GetOpinionsForTalkSessionSortOldest
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetTalkSessionDetailBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetTalkSessionDetailBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetTalkSessionDetailBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetTalkSessionDetailBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetTalkSessionDetailBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*GetTalkSessionDetailBadRequest) getTalkSessionDetailRes() {}

type GetTalkSessionDetailOK struct {
	// トークセッションID.
	ID string `json:"id"`
	// テーマ.
	Theme string `json:"theme"`
	// 説明.
	Description OptNilString `json:"description"`
	// 作成ユーザー.
	Owner GetTalkSessionDetailOKOwner `json:"owner"`
	// 作成日時.
	CreatedAt string `json:"createdAt"`
	// 終了予定日時.
	ScheduledEndTime string `json:"scheduledEndTime"`
	// 位置情報.
	Location OptGetTalkSessionDetailOKLocation `json:"location"`
	// 市区町村.
	City OptNilString `json:"city"`
	// 都道府県.
	Prefecture OptNilString `json:"prefecture"`
}

// GetID returns the value of ID.
func (s *GetTalkSessionDetailOK) GetID() string {
	return s.ID
}

// GetTheme returns the value of Theme.
func (s *GetTalkSessionDetailOK) GetTheme() string {
	return s.Theme
}

// GetDescription returns the value of Description.
func (s *GetTalkSessionDetailOK) GetDescription() OptNilString {
	return s.Description
}

// GetOwner returns the value of Owner.
func (s *GetTalkSessionDetailOK) GetOwner() GetTalkSessionDetailOKOwner {
	return s.Owner
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetTalkSessionDetailOK) GetCreatedAt() string {
	return s.CreatedAt
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *GetTalkSessionDetailOK) GetScheduledEndTime() string {
	return s.ScheduledEndTime
}

// GetLocation returns the value of Location.
func (s *GetTalkSessionDetailOK) GetLocation() OptGetTalkSessionDetailOKLocation {
	return s.Location
}

// GetCity returns the value of City.
func (s *GetTalkSessionDetailOK) GetCity() OptNilString {
	return s.City
}

// GetPrefecture returns the value of Prefecture.
func (s *GetTalkSessionDetailOK) GetPrefecture() OptNilString {
	return s.Prefecture
}

// SetID sets the value of ID.
func (s *GetTalkSessionDetailOK) SetID(val string) {
	s.ID = val
}

// SetTheme sets the value of Theme.
func (s *GetTalkSessionDetailOK) SetTheme(val string) {
	s.Theme = val
}

// SetDescription sets the value of Description.
func (s *GetTalkSessionDetailOK) SetDescription(val OptNilString) {
	s.Description = val
}

// SetOwner sets the value of Owner.
func (s *GetTalkSessionDetailOK) SetOwner(val GetTalkSessionDetailOKOwner) {
	s.Owner = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetTalkSessionDetailOK) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *GetTalkSessionDetailOK) SetScheduledEndTime(val string) {
	s.ScheduledEndTime = val
}

// SetLocation sets the value of Location.
func (s *GetTalkSessionDetailOK) SetLocation(val OptGetTalkSessionDetailOKLocation) {
	s.Location = val
}

// SetCity sets the value of City.
func (s *GetTalkSessionDetailOK) SetCity(val OptNilString) {
	s.City = val
}

// SetPrefecture sets the value of Prefecture.
func (s *GetTalkSessionDetailOK) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

func (*GetTalkSessionDetailOK) getTalkSessionDetailRes() {}

// 位置情報.
type GetTalkSessionDetailOKLocation struct {
	// 緯度.
	Latitude OptFloat64 `json:"latitude"`
	// 経度.
	Longitude OptFloat64 `json:"longitude"`
}

// GetLatitude returns the value of Latitude.
func (s *GetTalkSessionDetailOKLocation) GetLatitude() OptFloat64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *GetTalkSessionDetailOKLocation) GetLongitude() OptFloat64 {
	return s.Longitude
}

// SetLatitude sets the value of Latitude.
func (s *GetTalkSessionDetailOKLocation) SetLatitude(val OptFloat64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *GetTalkSessionDetailOKLocation) SetLongitude(val OptFloat64) {
	s.Longitude = val
}

// 作成ユーザー.
type GetTalkSessionDetailOKOwner struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *GetTalkSessionDetailOKOwner) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetTalkSessionDetailOKOwner) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *GetTalkSessionDetailOKOwner) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *GetTalkSessionDetailOKOwner) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetTalkSessionDetailOKOwner) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *GetTalkSessionDetailOKOwner) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type GetTalkSessionListBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetTalkSessionListBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetTalkSessionListBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetTalkSessionListBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetTalkSessionListBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*GetTalkSessionListBadRequest) getTalkSessionListRes() {}

type GetTalkSessionListInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *GetTalkSessionListInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GetTalkSessionListInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GetTalkSessionListInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GetTalkSessionListInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetTalkSessionListInternalServerError) getTalkSessionListRes() {}

type GetTalkSessionListOK struct {
	TalkSessions []GetTalkSessionListOKTalkSessionsItem `json:"talkSessions"`
	Pagination   GetTalkSessionListOKPagination         `json:"pagination"`
}

// GetTalkSessions returns the value of TalkSessions.
func (s *GetTalkSessionListOK) GetTalkSessions() []GetTalkSessionListOKTalkSessionsItem {
	return s.TalkSessions
}

// GetPagination returns the value of Pagination.
func (s *GetTalkSessionListOK) GetPagination() GetTalkSessionListOKPagination {
	return s.Pagination
}

// SetTalkSessions sets the value of TalkSessions.
func (s *GetTalkSessionListOK) SetTalkSessions(val []GetTalkSessionListOKTalkSessionsItem) {
	s.TalkSessions = val
}

// SetPagination sets the value of Pagination.
func (s *GetTalkSessionListOK) SetPagination(val GetTalkSessionListOKPagination) {
	s.Pagination = val
}

func (*GetTalkSessionListOK) getTalkSessionListRes() {}

type GetTalkSessionListOKPagination struct {
	TotalCount int `json:"totalCount"`
	Offset     int `json:"offset"`
	Limit      int `json:"limit"`
}

// GetTotalCount returns the value of TotalCount.
func (s *GetTalkSessionListOKPagination) GetTotalCount() int {
	return s.TotalCount
}

// GetOffset returns the value of Offset.
func (s *GetTalkSessionListOKPagination) GetOffset() int {
	return s.Offset
}

// GetLimit returns the value of Limit.
func (s *GetTalkSessionListOKPagination) GetLimit() int {
	return s.Limit
}

// SetTotalCount sets the value of TotalCount.
func (s *GetTalkSessionListOKPagination) SetTotalCount(val int) {
	s.TotalCount = val
}

// SetOffset sets the value of Offset.
func (s *GetTalkSessionListOKPagination) SetOffset(val int) {
	s.Offset = val
}

// SetLimit sets the value of Limit.
func (s *GetTalkSessionListOKPagination) SetLimit(val int) {
	s.Limit = val
}

type GetTalkSessionListOKTalkSessionsItem struct {
	TalkSession  GetTalkSessionListOKTalkSessionsItemTalkSession `json:"talkSession"`
	OpinionCount int                                             `json:"opinionCount"`
}

// GetTalkSession returns the value of TalkSession.
func (s *GetTalkSessionListOKTalkSessionsItem) GetTalkSession() GetTalkSessionListOKTalkSessionsItemTalkSession {
	return s.TalkSession
}

// GetOpinionCount returns the value of OpinionCount.
func (s *GetTalkSessionListOKTalkSessionsItem) GetOpinionCount() int {
	return s.OpinionCount
}

// SetTalkSession sets the value of TalkSession.
func (s *GetTalkSessionListOKTalkSessionsItem) SetTalkSession(val GetTalkSessionListOKTalkSessionsItemTalkSession) {
	s.TalkSession = val
}

// SetOpinionCount sets the value of OpinionCount.
func (s *GetTalkSessionListOKTalkSessionsItem) SetOpinionCount(val int) {
	s.OpinionCount = val
}

type GetTalkSessionListOKTalkSessionsItemTalkSession struct {
	// トークセッションID.
	ID string `json:"id"`
	// テーマ.
	Theme string `json:"theme"`
	// 説明.
	Description OptNilString `json:"description"`
	// 作成ユーザー.
	Owner GetTalkSessionListOKTalkSessionsItemTalkSessionOwner `json:"owner"`
	// 作成日時.
	CreatedAt string `json:"createdAt"`
	// 終了予定日時.
	ScheduledEndTime string `json:"scheduledEndTime"`
	// 位置情報.
	Location OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation `json:"location"`
	// 市区町村.
	City OptNilString `json:"city"`
	// 都道府県.
	Prefecture OptNilString `json:"prefecture"`
}

// GetID returns the value of ID.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetID() string {
	return s.ID
}

// GetTheme returns the value of Theme.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetTheme() string {
	return s.Theme
}

// GetDescription returns the value of Description.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetDescription() OptNilString {
	return s.Description
}

// GetOwner returns the value of Owner.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetOwner() GetTalkSessionListOKTalkSessionsItemTalkSessionOwner {
	return s.Owner
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetCreatedAt() string {
	return s.CreatedAt
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetScheduledEndTime() string {
	return s.ScheduledEndTime
}

// GetLocation returns the value of Location.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetLocation() OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation {
	return s.Location
}

// GetCity returns the value of City.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetCity() OptNilString {
	return s.City
}

// GetPrefecture returns the value of Prefecture.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetPrefecture() OptNilString {
	return s.Prefecture
}

// SetID sets the value of ID.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetID(val string) {
	s.ID = val
}

// SetTheme sets the value of Theme.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetTheme(val string) {
	s.Theme = val
}

// SetDescription sets the value of Description.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetDescription(val OptNilString) {
	s.Description = val
}

// SetOwner sets the value of Owner.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetOwner(val GetTalkSessionListOKTalkSessionsItemTalkSessionOwner) {
	s.Owner = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetScheduledEndTime(val string) {
	s.ScheduledEndTime = val
}

// SetLocation sets the value of Location.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetLocation(val OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation) {
	s.Location = val
}

// SetCity sets the value of City.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetCity(val OptNilString) {
	s.City = val
}

// SetPrefecture sets the value of Prefecture.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

// 位置情報.
type GetTalkSessionListOKTalkSessionsItemTalkSessionLocation struct {
	// 緯度.
	Latitude OptFloat64 `json:"latitude"`
	// 経度.
	Longitude OptFloat64 `json:"longitude"`
}

// GetLatitude returns the value of Latitude.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) GetLatitude() OptFloat64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) GetLongitude() OptFloat64 {
	return s.Longitude
}

// SetLatitude sets the value of Latitude.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) SetLatitude(val OptFloat64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) SetLongitude(val OptFloat64) {
	s.Longitude = val
}

// 作成ユーザー.
type GetTalkSessionListOKTalkSessionsItemTalkSessionOwner struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionOwner) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionOwner) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionOwner) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionOwner) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionOwner) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionOwner) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type GetTalkSessionListSortKey string

const (
	GetTalkSessionListSortKeyLatest      GetTalkSessionListSortKey = "latest"
	GetTalkSessionListSortKeyOldest      GetTalkSessionListSortKey = "oldest"
	GetTalkSessionListSortKeyMostReplies GetTalkSessionListSortKey = "mostReplies"
	GetTalkSessionListSortKeyNearest     GetTalkSessionListSortKey = "nearest"
)

// AllValues returns all GetTalkSessionListSortKey values.
func (GetTalkSessionListSortKey) AllValues() []GetTalkSessionListSortKey {
	return []GetTalkSessionListSortKey{
		GetTalkSessionListSortKeyLatest,
		GetTalkSessionListSortKeyOldest,
		GetTalkSessionListSortKeyMostReplies,
		GetTalkSessionListSortKeyNearest,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetTalkSessionListSortKey) MarshalText() ([]byte, error) {
	switch s {
	case GetTalkSessionListSortKeyLatest:
		return []byte(s), nil
	case GetTalkSessionListSortKeyOldest:
		return []byte(s), nil
	case GetTalkSessionListSortKeyMostReplies:
		return []byte(s), nil
	case GetTalkSessionListSortKeyNearest:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetTalkSessionListSortKey) UnmarshalText(data []byte) error {
	switch GetTalkSessionListSortKey(data) {
	case GetTalkSessionListSortKeyLatest:
		*s = GetTalkSessionListSortKeyLatest
		return nil
	case GetTalkSessionListSortKeyOldest:
		*s = GetTalkSessionListSortKeyOldest
		return nil
	case GetTalkSessionListSortKeyMostReplies:
		*s = GetTalkSessionListSortKeyMostReplies
		return nil
	case GetTalkSessionListSortKeyNearest:
		*s = GetTalkSessionListSortKeyNearest
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetTalkSessionListStatus string

const (
	GetTalkSessionListStatusOpen     GetTalkSessionListStatus = "open"
	GetTalkSessionListStatusFinished GetTalkSessionListStatus = "finished"
)

// AllValues returns all GetTalkSessionListStatus values.
func (GetTalkSessionListStatus) AllValues() []GetTalkSessionListStatus {
	return []GetTalkSessionListStatus{
		GetTalkSessionListStatusOpen,
		GetTalkSessionListStatusFinished,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetTalkSessionListStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetTalkSessionListStatusOpen:
		return []byte(s), nil
	case GetTalkSessionListStatusFinished:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetTalkSessionListStatus) UnmarshalText(data []byte) error {
	switch GetTalkSessionListStatus(data) {
	case GetTalkSessionListStatusOpen:
		*s = GetTalkSessionListStatusOpen
		return nil
	case GetTalkSessionListStatusFinished:
		*s = GetTalkSessionListStatusFinished
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetTalkSessionReportInternalServerError struct{}

func (*GetTalkSessionReportInternalServerError) getTalkSessionReportRes() {}

type GetTalkSessionReportOK struct {
	Report string `json:"report"`
}

// GetReport returns the value of Report.
func (s *GetTalkSessionReportOK) GetReport() string {
	return s.Report
}

// SetReport sets the value of Report.
func (s *GetTalkSessionReportOK) SetReport(val string) {
	s.Report = val
}

func (*GetTalkSessionReportOK) getTalkSessionReportRes() {}

type GetTimeLineBadRequest struct{}

func (*GetTimeLineBadRequest) getTimeLineRes() {}

type GetTimeLineInternalServerError struct{}

func (*GetTimeLineInternalServerError) getTimeLineRes() {}

type GetTimeLineOK struct {
	Items []GetTimeLineOKItemsItem `json:"items"`
}

// GetItems returns the value of Items.
func (s *GetTimeLineOK) GetItems() []GetTimeLineOKItemsItem {
	return s.Items
}

// SetItems sets the value of Items.
func (s *GetTimeLineOK) SetItems(val []GetTimeLineOKItemsItem) {
	s.Items = val
}

func (*GetTimeLineOK) getTimeLineRes() {}

type GetTimeLineOKItemsItem struct {
	ActionItemID string `json:"ActionItemID"`
	Sequence     int    `json:"Sequence"`
	Content      string `json:"Content"`
	Status       string `json:"Status"`
	CreatedAt    string `json:"CreatedAt"`
	UpdatedAt    string `json:"UpdatedAt"`
}

// GetActionItemID returns the value of ActionItemID.
func (s *GetTimeLineOKItemsItem) GetActionItemID() string {
	return s.ActionItemID
}

// GetSequence returns the value of Sequence.
func (s *GetTimeLineOKItemsItem) GetSequence() int {
	return s.Sequence
}

// GetContent returns the value of Content.
func (s *GetTimeLineOKItemsItem) GetContent() string {
	return s.Content
}

// GetStatus returns the value of Status.
func (s *GetTimeLineOKItemsItem) GetStatus() string {
	return s.Status
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetTimeLineOKItemsItem) GetCreatedAt() string {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GetTimeLineOKItemsItem) GetUpdatedAt() string {
	return s.UpdatedAt
}

// SetActionItemID sets the value of ActionItemID.
func (s *GetTimeLineOKItemsItem) SetActionItemID(val string) {
	s.ActionItemID = val
}

// SetSequence sets the value of Sequence.
func (s *GetTimeLineOKItemsItem) SetSequence(val int) {
	s.Sequence = val
}

// SetContent sets the value of Content.
func (s *GetTimeLineOKItemsItem) SetContent(val string) {
	s.Content = val
}

// SetStatus sets the value of Status.
func (s *GetTimeLineOKItemsItem) SetStatus(val string) {
	s.Status = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetTimeLineOKItemsItem) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GetTimeLineOKItemsItem) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

type GetUserInfoInternalServerError struct{}

func (*GetUserInfoInternalServerError) getUserInfoRes() {}

type GetUserInfoOK struct {
	// 作成ユーザー.
	User         GetUserInfoOKUser         `json:"user"`
	Demographics GetUserInfoOKDemographics `json:"demographics"`
}

// GetUser returns the value of User.
func (s *GetUserInfoOK) GetUser() GetUserInfoOKUser {
	return s.User
}

// GetDemographics returns the value of Demographics.
func (s *GetUserInfoOK) GetDemographics() GetUserInfoOKDemographics {
	return s.Demographics
}

// SetUser sets the value of User.
func (s *GetUserInfoOK) SetUser(val GetUserInfoOKUser) {
	s.User = val
}

// SetDemographics sets the value of Demographics.
func (s *GetUserInfoOK) SetDemographics(val GetUserInfoOKDemographics) {
	s.Demographics = val
}

func (*GetUserInfoOK) getUserInfoRes() {}

type GetUserInfoOKDemographics struct {
	// 誕生年.
	YearOfBirth OptNilInt `json:"yearOfBirth"`
	// 職業.
	Occupation OptNilString `json:"occupation"`
	// 性別.
	Gender OptNilString `json:"gender"`
	// 市区町村.
	City OptNilString `json:"city"`
	// 世帯人数.
	HouseholdSize OptNilInt `json:"householdSize"`
	// 都道府県.
	Prefecture OptNilString `json:"prefecture"`
}

// GetYearOfBirth returns the value of YearOfBirth.
func (s *GetUserInfoOKDemographics) GetYearOfBirth() OptNilInt {
	return s.YearOfBirth
}

// GetOccupation returns the value of Occupation.
func (s *GetUserInfoOKDemographics) GetOccupation() OptNilString {
	return s.Occupation
}

// GetGender returns the value of Gender.
func (s *GetUserInfoOKDemographics) GetGender() OptNilString {
	return s.Gender
}

// GetCity returns the value of City.
func (s *GetUserInfoOKDemographics) GetCity() OptNilString {
	return s.City
}

// GetHouseholdSize returns the value of HouseholdSize.
func (s *GetUserInfoOKDemographics) GetHouseholdSize() OptNilInt {
	return s.HouseholdSize
}

// GetPrefecture returns the value of Prefecture.
func (s *GetUserInfoOKDemographics) GetPrefecture() OptNilString {
	return s.Prefecture
}

// SetYearOfBirth sets the value of YearOfBirth.
func (s *GetUserInfoOKDemographics) SetYearOfBirth(val OptNilInt) {
	s.YearOfBirth = val
}

// SetOccupation sets the value of Occupation.
func (s *GetUserInfoOKDemographics) SetOccupation(val OptNilString) {
	s.Occupation = val
}

// SetGender sets the value of Gender.
func (s *GetUserInfoOKDemographics) SetGender(val OptNilString) {
	s.Gender = val
}

// SetCity sets the value of City.
func (s *GetUserInfoOKDemographics) SetCity(val OptNilString) {
	s.City = val
}

// SetHouseholdSize sets the value of HouseholdSize.
func (s *GetUserInfoOKDemographics) SetHouseholdSize(val OptNilInt) {
	s.HouseholdSize = val
}

// SetPrefecture sets the value of Prefecture.
func (s *GetUserInfoOKDemographics) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

// 作成ユーザー.
type GetUserInfoOKUser struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *GetUserInfoOKUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetUserInfoOKUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *GetUserInfoOKUser) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *GetUserInfoOKUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetUserInfoOKUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *GetUserInfoOKUser) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type ManageIndexOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s ManageIndexOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

type ManageRegenerateOK struct {
	// ステータス.
	Status OptString `json:"status"`
	// メッセージ.
	Message OptString `json:"message"`
}

// GetStatus returns the value of Status.
func (s *ManageRegenerateOK) GetStatus() OptString {
	return s.Status
}

// GetMessage returns the value of Message.
func (s *ManageRegenerateOK) GetMessage() OptString {
	return s.Message
}

// SetStatus sets the value of Status.
func (s *ManageRegenerateOK) SetStatus(val OptString) {
	s.Status = val
}

// SetMessage sets the value of Message.
func (s *ManageRegenerateOK) SetMessage(val OptString) {
	s.Message = val
}

type ManageRegenerateReq struct {
	// Analysisの種類.
	Type ManageRegenerateReqType `json:"type"`
	// 再生成するTalkSessionID.
	TalkSessionID string `json:"talkSessionID"`
}

// GetType returns the value of Type.
func (s *ManageRegenerateReq) GetType() ManageRegenerateReqType {
	return s.Type
}

// GetTalkSessionID returns the value of TalkSessionID.
func (s *ManageRegenerateReq) GetTalkSessionID() string {
	return s.TalkSessionID
}

// SetType sets the value of Type.
func (s *ManageRegenerateReq) SetType(val ManageRegenerateReqType) {
	s.Type = val
}

// SetTalkSessionID sets the value of TalkSessionID.
func (s *ManageRegenerateReq) SetTalkSessionID(val string) {
	s.TalkSessionID = val
}

// Analysisの種類.
type ManageRegenerateReqType string

const (
	ManageRegenerateReqTypeReport ManageRegenerateReqType = "report"
	ManageRegenerateReqTypeGroup  ManageRegenerateReqType = "group"
	ManageRegenerateReqTypeImage  ManageRegenerateReqType = "image"
)

// AllValues returns all ManageRegenerateReqType values.
func (ManageRegenerateReqType) AllValues() []ManageRegenerateReqType {
	return []ManageRegenerateReqType{
		ManageRegenerateReqTypeReport,
		ManageRegenerateReqTypeGroup,
		ManageRegenerateReqTypeImage,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ManageRegenerateReqType) MarshalText() ([]byte, error) {
	switch s {
	case ManageRegenerateReqTypeReport:
		return []byte(s), nil
	case ManageRegenerateReqTypeGroup:
		return []byte(s), nil
	case ManageRegenerateReqTypeImage:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ManageRegenerateReqType) UnmarshalText(data []byte) error {
	switch ManageRegenerateReqType(data) {
	case ManageRegenerateReqTypeReport:
		*s = ManageRegenerateReqTypeReport
		return nil
	case ManageRegenerateReqTypeGroup:
		*s = ManageRegenerateReqTypeGroup
		return nil
	case ManageRegenerateReqTypeImage:
		*s = ManageRegenerateReqTypeImage
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// NewNilVoteReqVoteStatus returns new NilVoteReqVoteStatus with value set to v.
func NewNilVoteReqVoteStatus(v VoteReqVoteStatus) NilVoteReqVoteStatus {
	return NilVoteReqVoteStatus{
		Value: v,
	}
}

// NilVoteReqVoteStatus is nullable VoteReqVoteStatus.
type NilVoteReqVoteStatus struct {
	Value VoteReqVoteStatus
	Null  bool
}

// SetTo sets value to v.
func (o *NilVoteReqVoteStatus) SetTo(v VoteReqVoteStatus) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilVoteReqVoteStatus) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilVoteReqVoteStatus) SetToNull() {
	o.Null = true
	var v VoteReqVoteStatus
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilVoteReqVoteStatus) Get() (v VoteReqVoteStatus, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilVoteReqVoteStatus) Or(d VoteReqVoteStatus) VoteReqVoteStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type OAuthCallbackBadRequest struct{}

func (*OAuthCallbackBadRequest) oAuthCallbackRes() {}

type OAuthCallbackFound struct{}

// OAuthCallbackFoundHeaders wraps OAuthCallbackFound with response headers.
type OAuthCallbackFoundHeaders struct {
	Location  string
	SetCookie string
	Response  OAuthCallbackFound
}

// GetLocation returns the value of Location.
func (s *OAuthCallbackFoundHeaders) GetLocation() string {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *OAuthCallbackFoundHeaders) GetSetCookie() string {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *OAuthCallbackFoundHeaders) GetResponse() OAuthCallbackFound {
	return s.Response
}

// SetLocation sets the value of Location.
func (s *OAuthCallbackFoundHeaders) SetLocation(val string) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *OAuthCallbackFoundHeaders) SetSetCookie(val string) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *OAuthCallbackFoundHeaders) SetResponse(val OAuthCallbackFound) {
	s.Response = val
}

func (*OAuthCallbackFoundHeaders) oAuthCallbackRes() {}

type OAuthCallbackInternalServerError struct{}

func (*OAuthCallbackInternalServerError) oAuthCallbackRes() {}

type OAuthTokenInfoBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *OAuthTokenInfoBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *OAuthTokenInfoBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *OAuthTokenInfoBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *OAuthTokenInfoBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*OAuthTokenInfoBadRequest) oAuthTokenInfoRes() {}

type OAuthTokenInfoInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *OAuthTokenInfoInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *OAuthTokenInfoInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *OAuthTokenInfoInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *OAuthTokenInfoInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*OAuthTokenInfoInternalServerError) oAuthTokenInfoRes() {}

type OAuthTokenInfoOK struct {
	// Audience.
	Aud string `json:"aud"`
	// 有効期限.
	Exp string `json:"exp"`
	// 発行日時.
	Iat string `json:"iat"`
	// 発行者.
	Iss string `json:"iss"`
	// ユーザID.
	Sub string `json:"sub"`
	// JWT ID.
	Jti string `json:"jti"`
	// ユーザーID.
	DisplayId OptString `json:"displayId"`
	// ユーザー名.
	DisplayName OptString `json:"displayName"`
	// アイコンURL.
	IconURL OptString `json:"iconURL"`
	// ユーザ登録済みか.
	IsVerify bool `json:"isVerify"`
}

// GetAud returns the value of Aud.
func (s *OAuthTokenInfoOK) GetAud() string {
	return s.Aud
}

// GetExp returns the value of Exp.
func (s *OAuthTokenInfoOK) GetExp() string {
	return s.Exp
}

// GetIat returns the value of Iat.
func (s *OAuthTokenInfoOK) GetIat() string {
	return s.Iat
}

// GetIss returns the value of Iss.
func (s *OAuthTokenInfoOK) GetIss() string {
	return s.Iss
}

// GetSub returns the value of Sub.
func (s *OAuthTokenInfoOK) GetSub() string {
	return s.Sub
}

// GetJti returns the value of Jti.
func (s *OAuthTokenInfoOK) GetJti() string {
	return s.Jti
}

// GetDisplayId returns the value of DisplayId.
func (s *OAuthTokenInfoOK) GetDisplayId() OptString {
	return s.DisplayId
}

// GetDisplayName returns the value of DisplayName.
func (s *OAuthTokenInfoOK) GetDisplayName() OptString {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *OAuthTokenInfoOK) GetIconURL() OptString {
	return s.IconURL
}

// GetIsVerify returns the value of IsVerify.
func (s *OAuthTokenInfoOK) GetIsVerify() bool {
	return s.IsVerify
}

// SetAud sets the value of Aud.
func (s *OAuthTokenInfoOK) SetAud(val string) {
	s.Aud = val
}

// SetExp sets the value of Exp.
func (s *OAuthTokenInfoOK) SetExp(val string) {
	s.Exp = val
}

// SetIat sets the value of Iat.
func (s *OAuthTokenInfoOK) SetIat(val string) {
	s.Iat = val
}

// SetIss sets the value of Iss.
func (s *OAuthTokenInfoOK) SetIss(val string) {
	s.Iss = val
}

// SetSub sets the value of Sub.
func (s *OAuthTokenInfoOK) SetSub(val string) {
	s.Sub = val
}

// SetJti sets the value of Jti.
func (s *OAuthTokenInfoOK) SetJti(val string) {
	s.Jti = val
}

// SetDisplayId sets the value of DisplayId.
func (s *OAuthTokenInfoOK) SetDisplayId(val OptString) {
	s.DisplayId = val
}

// SetDisplayName sets the value of DisplayName.
func (s *OAuthTokenInfoOK) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *OAuthTokenInfoOK) SetIconURL(val OptString) {
	s.IconURL = val
}

// SetIsVerify sets the value of IsVerify.
func (s *OAuthTokenInfoOK) SetIsVerify(val bool) {
	s.IsVerify = val
}

func (*OAuthTokenInfoOK) oAuthTokenInfoRes() {}

type OAuthTokenRevokeBadRequest struct{}

func (*OAuthTokenRevokeBadRequest) oAuthTokenRevokeRes() {}

type OAuthTokenRevokeInternalServerError struct{}

func (*OAuthTokenRevokeInternalServerError) oAuthTokenRevokeRes() {}

type OAuthTokenRevokeNoContent struct{}

// OAuthTokenRevokeNoContentHeaders wraps OAuthTokenRevokeNoContent with response headers.
type OAuthTokenRevokeNoContentHeaders struct {
	SetCookie []string
	Response  OAuthTokenRevokeNoContent
}

// GetSetCookie returns the value of SetCookie.
func (s *OAuthTokenRevokeNoContentHeaders) GetSetCookie() []string {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *OAuthTokenRevokeNoContentHeaders) GetResponse() OAuthTokenRevokeNoContent {
	return s.Response
}

// SetSetCookie sets the value of SetCookie.
func (s *OAuthTokenRevokeNoContentHeaders) SetSetCookie(val []string) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *OAuthTokenRevokeNoContentHeaders) SetResponse(val OAuthTokenRevokeNoContent) {
	s.Response = val
}

func (*OAuthTokenRevokeNoContentHeaders) oAuthTokenRevokeRes() {}

type OpinionCommentsBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *OpinionCommentsBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *OpinionCommentsBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *OpinionCommentsBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *OpinionCommentsBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*OpinionCommentsBadRequest) opinionCommentsRes() {}

type OpinionCommentsInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *OpinionCommentsInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *OpinionCommentsInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *OpinionCommentsInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *OpinionCommentsInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*OpinionCommentsInternalServerError) opinionCommentsRes() {}

type OpinionCommentsOK struct {
	RootOpinion OpinionCommentsOKRootOpinion    `json:"rootOpinion"`
	Opinions    []OpinionCommentsOKOpinionsItem `json:"opinions"`
}

// GetRootOpinion returns the value of RootOpinion.
func (s *OpinionCommentsOK) GetRootOpinion() OpinionCommentsOKRootOpinion {
	return s.RootOpinion
}

// GetOpinions returns the value of Opinions.
func (s *OpinionCommentsOK) GetOpinions() []OpinionCommentsOKOpinionsItem {
	return s.Opinions
}

// SetRootOpinion sets the value of RootOpinion.
func (s *OpinionCommentsOK) SetRootOpinion(val OpinionCommentsOKRootOpinion) {
	s.RootOpinion = val
}

// SetOpinions sets the value of Opinions.
func (s *OpinionCommentsOK) SetOpinions(val []OpinionCommentsOKOpinionsItem) {
	s.Opinions = val
}

func (*OpinionCommentsOK) opinionCommentsRes() {}

type OpinionCommentsOKOpinionsItem struct {
	Opinion OpinionCommentsOKOpinionsItemOpinion `json:"opinion"`
	// 作成ユーザー.
	User OpinionCommentsOKOpinionsItemUser `json:"user"`
	// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
	MyVoteType OptOpinionCommentsOKOpinionsItemMyVoteType `json:"myVoteType"`
}

// GetOpinion returns the value of Opinion.
func (s *OpinionCommentsOKOpinionsItem) GetOpinion() OpinionCommentsOKOpinionsItemOpinion {
	return s.Opinion
}

// GetUser returns the value of User.
func (s *OpinionCommentsOKOpinionsItem) GetUser() OpinionCommentsOKOpinionsItemUser {
	return s.User
}

// GetMyVoteType returns the value of MyVoteType.
func (s *OpinionCommentsOKOpinionsItem) GetMyVoteType() OptOpinionCommentsOKOpinionsItemMyVoteType {
	return s.MyVoteType
}

// SetOpinion sets the value of Opinion.
func (s *OpinionCommentsOKOpinionsItem) SetOpinion(val OpinionCommentsOKOpinionsItemOpinion) {
	s.Opinion = val
}

// SetUser sets the value of User.
func (s *OpinionCommentsOKOpinionsItem) SetUser(val OpinionCommentsOKOpinionsItemUser) {
	s.User = val
}

// SetMyVoteType sets the value of MyVoteType.
func (s *OpinionCommentsOKOpinionsItem) SetMyVoteType(val OptOpinionCommentsOKOpinionsItemMyVoteType) {
	s.MyVoteType = val
}

// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
type OpinionCommentsOKOpinionsItemMyVoteType string

const (
	OpinionCommentsOKOpinionsItemMyVoteTypeAgree    OpinionCommentsOKOpinionsItemMyVoteType = "agree"
	OpinionCommentsOKOpinionsItemMyVoteTypeDisagree OpinionCommentsOKOpinionsItemMyVoteType = "disagree"
	OpinionCommentsOKOpinionsItemMyVoteTypePass     OpinionCommentsOKOpinionsItemMyVoteType = "pass"
)

// AllValues returns all OpinionCommentsOKOpinionsItemMyVoteType values.
func (OpinionCommentsOKOpinionsItemMyVoteType) AllValues() []OpinionCommentsOKOpinionsItemMyVoteType {
	return []OpinionCommentsOKOpinionsItemMyVoteType{
		OpinionCommentsOKOpinionsItemMyVoteTypeAgree,
		OpinionCommentsOKOpinionsItemMyVoteTypeDisagree,
		OpinionCommentsOKOpinionsItemMyVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OpinionCommentsOKOpinionsItemMyVoteType) MarshalText() ([]byte, error) {
	switch s {
	case OpinionCommentsOKOpinionsItemMyVoteTypeAgree:
		return []byte(s), nil
	case OpinionCommentsOKOpinionsItemMyVoteTypeDisagree:
		return []byte(s), nil
	case OpinionCommentsOKOpinionsItemMyVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OpinionCommentsOKOpinionsItemMyVoteType) UnmarshalText(data []byte) error {
	switch OpinionCommentsOKOpinionsItemMyVoteType(data) {
	case OpinionCommentsOKOpinionsItemMyVoteTypeAgree:
		*s = OpinionCommentsOKOpinionsItemMyVoteTypeAgree
		return nil
	case OpinionCommentsOKOpinionsItemMyVoteTypeDisagree:
		*s = OpinionCommentsOKOpinionsItemMyVoteTypeDisagree
		return nil
	case OpinionCommentsOKOpinionsItemMyVoteTypePass:
		*s = OpinionCommentsOKOpinionsItemMyVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type OpinionCommentsOKOpinionsItemOpinion struct {
	// 意見ID.
	ID    string    `json:"id"`
	Title OptString `json:"title"`
	// 意見のテキスト.
	Content string `json:"content"`
	// 親の意見ID。ルートならば無し.
	ParentID OptString `json:"parentID"`
	// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
	VoteType OptOpinionCommentsOKOpinionsItemOpinionVoteType `json:"voteType"`
	// 画像が返る場合もある.
	PictureURL OptString `json:"pictureURL"`
	// 参考文献URL.
	ReferenceURL OptString `json:"referenceURL"`
	PostedAt     string    `json:"postedAt"`
}

// GetID returns the value of ID.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetID() string {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetContent() string {
	return s.Content
}

// GetParentID returns the value of ParentID.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetParentID() OptString {
	return s.ParentID
}

// GetVoteType returns the value of VoteType.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetVoteType() OptOpinionCommentsOKOpinionsItemOpinionVoteType {
	return s.VoteType
}

// GetPictureURL returns the value of PictureURL.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetPictureURL() OptString {
	return s.PictureURL
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetReferenceURL() OptString {
	return s.ReferenceURL
}

// GetPostedAt returns the value of PostedAt.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetPostedAt() string {
	return s.PostedAt
}

// SetID sets the value of ID.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetID(val string) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetContent(val string) {
	s.Content = val
}

// SetParentID sets the value of ParentID.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetParentID(val OptString) {
	s.ParentID = val
}

// SetVoteType sets the value of VoteType.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetVoteType(val OptOpinionCommentsOKOpinionsItemOpinionVoteType) {
	s.VoteType = val
}

// SetPictureURL sets the value of PictureURL.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetPictureURL(val OptString) {
	s.PictureURL = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetReferenceURL(val OptString) {
	s.ReferenceURL = val
}

// SetPostedAt sets the value of PostedAt.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetPostedAt(val string) {
	s.PostedAt = val
}

// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
type OpinionCommentsOKOpinionsItemOpinionVoteType string

const (
	OpinionCommentsOKOpinionsItemOpinionVoteTypeAgree    OpinionCommentsOKOpinionsItemOpinionVoteType = "agree"
	OpinionCommentsOKOpinionsItemOpinionVoteTypeDisagree OpinionCommentsOKOpinionsItemOpinionVoteType = "disagree"
	OpinionCommentsOKOpinionsItemOpinionVoteTypePass     OpinionCommentsOKOpinionsItemOpinionVoteType = "pass"
)

// AllValues returns all OpinionCommentsOKOpinionsItemOpinionVoteType values.
func (OpinionCommentsOKOpinionsItemOpinionVoteType) AllValues() []OpinionCommentsOKOpinionsItemOpinionVoteType {
	return []OpinionCommentsOKOpinionsItemOpinionVoteType{
		OpinionCommentsOKOpinionsItemOpinionVoteTypeAgree,
		OpinionCommentsOKOpinionsItemOpinionVoteTypeDisagree,
		OpinionCommentsOKOpinionsItemOpinionVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OpinionCommentsOKOpinionsItemOpinionVoteType) MarshalText() ([]byte, error) {
	switch s {
	case OpinionCommentsOKOpinionsItemOpinionVoteTypeAgree:
		return []byte(s), nil
	case OpinionCommentsOKOpinionsItemOpinionVoteTypeDisagree:
		return []byte(s), nil
	case OpinionCommentsOKOpinionsItemOpinionVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OpinionCommentsOKOpinionsItemOpinionVoteType) UnmarshalText(data []byte) error {
	switch OpinionCommentsOKOpinionsItemOpinionVoteType(data) {
	case OpinionCommentsOKOpinionsItemOpinionVoteTypeAgree:
		*s = OpinionCommentsOKOpinionsItemOpinionVoteTypeAgree
		return nil
	case OpinionCommentsOKOpinionsItemOpinionVoteTypeDisagree:
		*s = OpinionCommentsOKOpinionsItemOpinionVoteTypeDisagree
		return nil
	case OpinionCommentsOKOpinionsItemOpinionVoteTypePass:
		*s = OpinionCommentsOKOpinionsItemOpinionVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 作成ユーザー.
type OpinionCommentsOKOpinionsItemUser struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *OpinionCommentsOKOpinionsItemUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *OpinionCommentsOKOpinionsItemUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *OpinionCommentsOKOpinionsItemUser) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *OpinionCommentsOKOpinionsItemUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *OpinionCommentsOKOpinionsItemUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *OpinionCommentsOKOpinionsItemUser) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type OpinionCommentsOKRootOpinion struct {
	// 作成ユーザー.
	User OpinionCommentsOKRootOpinionUser `json:"user"`
	// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
	MyVoteType OptOpinionCommentsOKRootOpinionMyVoteType `json:"myVoteType"`
	Opinion    OpinionCommentsOKRootOpinionOpinion       `json:"opinion"`
}

// GetUser returns the value of User.
func (s *OpinionCommentsOKRootOpinion) GetUser() OpinionCommentsOKRootOpinionUser {
	return s.User
}

// GetMyVoteType returns the value of MyVoteType.
func (s *OpinionCommentsOKRootOpinion) GetMyVoteType() OptOpinionCommentsOKRootOpinionMyVoteType {
	return s.MyVoteType
}

// GetOpinion returns the value of Opinion.
func (s *OpinionCommentsOKRootOpinion) GetOpinion() OpinionCommentsOKRootOpinionOpinion {
	return s.Opinion
}

// SetUser sets the value of User.
func (s *OpinionCommentsOKRootOpinion) SetUser(val OpinionCommentsOKRootOpinionUser) {
	s.User = val
}

// SetMyVoteType sets the value of MyVoteType.
func (s *OpinionCommentsOKRootOpinion) SetMyVoteType(val OptOpinionCommentsOKRootOpinionMyVoteType) {
	s.MyVoteType = val
}

// SetOpinion sets the value of Opinion.
func (s *OpinionCommentsOKRootOpinion) SetOpinion(val OpinionCommentsOKRootOpinionOpinion) {
	s.Opinion = val
}

// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
type OpinionCommentsOKRootOpinionMyVoteType string

const (
	OpinionCommentsOKRootOpinionMyVoteTypeAgree    OpinionCommentsOKRootOpinionMyVoteType = "agree"
	OpinionCommentsOKRootOpinionMyVoteTypeDisagree OpinionCommentsOKRootOpinionMyVoteType = "disagree"
	OpinionCommentsOKRootOpinionMyVoteTypePass     OpinionCommentsOKRootOpinionMyVoteType = "pass"
)

// AllValues returns all OpinionCommentsOKRootOpinionMyVoteType values.
func (OpinionCommentsOKRootOpinionMyVoteType) AllValues() []OpinionCommentsOKRootOpinionMyVoteType {
	return []OpinionCommentsOKRootOpinionMyVoteType{
		OpinionCommentsOKRootOpinionMyVoteTypeAgree,
		OpinionCommentsOKRootOpinionMyVoteTypeDisagree,
		OpinionCommentsOKRootOpinionMyVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OpinionCommentsOKRootOpinionMyVoteType) MarshalText() ([]byte, error) {
	switch s {
	case OpinionCommentsOKRootOpinionMyVoteTypeAgree:
		return []byte(s), nil
	case OpinionCommentsOKRootOpinionMyVoteTypeDisagree:
		return []byte(s), nil
	case OpinionCommentsOKRootOpinionMyVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OpinionCommentsOKRootOpinionMyVoteType) UnmarshalText(data []byte) error {
	switch OpinionCommentsOKRootOpinionMyVoteType(data) {
	case OpinionCommentsOKRootOpinionMyVoteTypeAgree:
		*s = OpinionCommentsOKRootOpinionMyVoteTypeAgree
		return nil
	case OpinionCommentsOKRootOpinionMyVoteTypeDisagree:
		*s = OpinionCommentsOKRootOpinionMyVoteTypeDisagree
		return nil
	case OpinionCommentsOKRootOpinionMyVoteTypePass:
		*s = OpinionCommentsOKRootOpinionMyVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type OpinionCommentsOKRootOpinionOpinion struct {
	// 意見ID.
	ID    string    `json:"id"`
	Title OptString `json:"title"`
	// 意見のテキスト.
	Content string `json:"content"`
	// 親の意見ID。ルートならば無し.
	ParentID OptString `json:"parentID"`
	// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
	VoteType OptOpinionCommentsOKRootOpinionOpinionVoteType `json:"voteType"`
	// 画像が返る場合もある.
	PictureURL OptString `json:"pictureURL"`
	// 参考文献URL.
	ReferenceURL OptString `json:"referenceURL"`
	PostedAt     string    `json:"postedAt"`
}

// GetID returns the value of ID.
func (s *OpinionCommentsOKRootOpinionOpinion) GetID() string {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *OpinionCommentsOKRootOpinionOpinion) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *OpinionCommentsOKRootOpinionOpinion) GetContent() string {
	return s.Content
}

// GetParentID returns the value of ParentID.
func (s *OpinionCommentsOKRootOpinionOpinion) GetParentID() OptString {
	return s.ParentID
}

// GetVoteType returns the value of VoteType.
func (s *OpinionCommentsOKRootOpinionOpinion) GetVoteType() OptOpinionCommentsOKRootOpinionOpinionVoteType {
	return s.VoteType
}

// GetPictureURL returns the value of PictureURL.
func (s *OpinionCommentsOKRootOpinionOpinion) GetPictureURL() OptString {
	return s.PictureURL
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *OpinionCommentsOKRootOpinionOpinion) GetReferenceURL() OptString {
	return s.ReferenceURL
}

// GetPostedAt returns the value of PostedAt.
func (s *OpinionCommentsOKRootOpinionOpinion) GetPostedAt() string {
	return s.PostedAt
}

// SetID sets the value of ID.
func (s *OpinionCommentsOKRootOpinionOpinion) SetID(val string) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *OpinionCommentsOKRootOpinionOpinion) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *OpinionCommentsOKRootOpinionOpinion) SetContent(val string) {
	s.Content = val
}

// SetParentID sets the value of ParentID.
func (s *OpinionCommentsOKRootOpinionOpinion) SetParentID(val OptString) {
	s.ParentID = val
}

// SetVoteType sets the value of VoteType.
func (s *OpinionCommentsOKRootOpinionOpinion) SetVoteType(val OptOpinionCommentsOKRootOpinionOpinionVoteType) {
	s.VoteType = val
}

// SetPictureURL sets the value of PictureURL.
func (s *OpinionCommentsOKRootOpinionOpinion) SetPictureURL(val OptString) {
	s.PictureURL = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *OpinionCommentsOKRootOpinionOpinion) SetReferenceURL(val OptString) {
	s.ReferenceURL = val
}

// SetPostedAt sets the value of PostedAt.
func (s *OpinionCommentsOKRootOpinionOpinion) SetPostedAt(val string) {
	s.PostedAt = val
}

// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
type OpinionCommentsOKRootOpinionOpinionVoteType string

const (
	OpinionCommentsOKRootOpinionOpinionVoteTypeAgree    OpinionCommentsOKRootOpinionOpinionVoteType = "agree"
	OpinionCommentsOKRootOpinionOpinionVoteTypeDisagree OpinionCommentsOKRootOpinionOpinionVoteType = "disagree"
	OpinionCommentsOKRootOpinionOpinionVoteTypePass     OpinionCommentsOKRootOpinionOpinionVoteType = "pass"
)

// AllValues returns all OpinionCommentsOKRootOpinionOpinionVoteType values.
func (OpinionCommentsOKRootOpinionOpinionVoteType) AllValues() []OpinionCommentsOKRootOpinionOpinionVoteType {
	return []OpinionCommentsOKRootOpinionOpinionVoteType{
		OpinionCommentsOKRootOpinionOpinionVoteTypeAgree,
		OpinionCommentsOKRootOpinionOpinionVoteTypeDisagree,
		OpinionCommentsOKRootOpinionOpinionVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OpinionCommentsOKRootOpinionOpinionVoteType) MarshalText() ([]byte, error) {
	switch s {
	case OpinionCommentsOKRootOpinionOpinionVoteTypeAgree:
		return []byte(s), nil
	case OpinionCommentsOKRootOpinionOpinionVoteTypeDisagree:
		return []byte(s), nil
	case OpinionCommentsOKRootOpinionOpinionVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OpinionCommentsOKRootOpinionOpinionVoteType) UnmarshalText(data []byte) error {
	switch OpinionCommentsOKRootOpinionOpinionVoteType(data) {
	case OpinionCommentsOKRootOpinionOpinionVoteTypeAgree:
		*s = OpinionCommentsOKRootOpinionOpinionVoteTypeAgree
		return nil
	case OpinionCommentsOKRootOpinionOpinionVoteTypeDisagree:
		*s = OpinionCommentsOKRootOpinionOpinionVoteTypeDisagree
		return nil
	case OpinionCommentsOKRootOpinionOpinionVoteTypePass:
		*s = OpinionCommentsOKRootOpinionOpinionVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 作成ユーザー.
type OpinionCommentsOKRootOpinionUser struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *OpinionCommentsOKRootOpinionUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *OpinionCommentsOKRootOpinionUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *OpinionCommentsOKRootOpinionUser) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *OpinionCommentsOKRootOpinionUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *OpinionCommentsOKRootOpinionUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *OpinionCommentsOKRootOpinionUser) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type OpinionsHistoryBadRequest struct{}

func (*OpinionsHistoryBadRequest) opinionsHistoryRes() {}

type OpinionsHistoryInternalServerError struct{}

func (*OpinionsHistoryInternalServerError) opinionsHistoryRes() {}

type OpinionsHistoryOK struct {
	Opinions   []OpinionsHistoryOKOpinionsItem `json:"opinions"`
	Pagination OpinionsHistoryOKPagination     `json:"pagination"`
}

// GetOpinions returns the value of Opinions.
func (s *OpinionsHistoryOK) GetOpinions() []OpinionsHistoryOKOpinionsItem {
	return s.Opinions
}

// GetPagination returns the value of Pagination.
func (s *OpinionsHistoryOK) GetPagination() OpinionsHistoryOKPagination {
	return s.Pagination
}

// SetOpinions sets the value of Opinions.
func (s *OpinionsHistoryOK) SetOpinions(val []OpinionsHistoryOKOpinionsItem) {
	s.Opinions = val
}

// SetPagination sets the value of Pagination.
func (s *OpinionsHistoryOK) SetPagination(val OpinionsHistoryOKPagination) {
	s.Pagination = val
}

func (*OpinionsHistoryOK) opinionsHistoryRes() {}

type OpinionsHistoryOKOpinionsItem struct {
	// 作成ユーザー.
	User       OpinionsHistoryOKOpinionsItemUser    `json:"user"`
	Opinion    OpinionsHistoryOKOpinionsItemOpinion `json:"opinion"`
	ReplyCount int                                  `json:"replyCount"`
}

// GetUser returns the value of User.
func (s *OpinionsHistoryOKOpinionsItem) GetUser() OpinionsHistoryOKOpinionsItemUser {
	return s.User
}

// GetOpinion returns the value of Opinion.
func (s *OpinionsHistoryOKOpinionsItem) GetOpinion() OpinionsHistoryOKOpinionsItemOpinion {
	return s.Opinion
}

// GetReplyCount returns the value of ReplyCount.
func (s *OpinionsHistoryOKOpinionsItem) GetReplyCount() int {
	return s.ReplyCount
}

// SetUser sets the value of User.
func (s *OpinionsHistoryOKOpinionsItem) SetUser(val OpinionsHistoryOKOpinionsItemUser) {
	s.User = val
}

// SetOpinion sets the value of Opinion.
func (s *OpinionsHistoryOKOpinionsItem) SetOpinion(val OpinionsHistoryOKOpinionsItemOpinion) {
	s.Opinion = val
}

// SetReplyCount sets the value of ReplyCount.
func (s *OpinionsHistoryOKOpinionsItem) SetReplyCount(val int) {
	s.ReplyCount = val
}

type OpinionsHistoryOKOpinionsItemOpinion struct {
	// 意見ID.
	ID    string    `json:"id"`
	Title OptString `json:"title"`
	// 意見のテキスト.
	Content string `json:"content"`
	// 親の意見ID。ルートならば無し.
	ParentID OptString `json:"parentID"`
	// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
	VoteType OptOpinionsHistoryOKOpinionsItemOpinionVoteType `json:"voteType"`
	// 画像が返る場合もある.
	PictureURL OptString `json:"pictureURL"`
	// 参考文献URL.
	ReferenceURL OptString `json:"referenceURL"`
	PostedAt     string    `json:"postedAt"`
}

// GetID returns the value of ID.
func (s *OpinionsHistoryOKOpinionsItemOpinion) GetID() string {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *OpinionsHistoryOKOpinionsItemOpinion) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *OpinionsHistoryOKOpinionsItemOpinion) GetContent() string {
	return s.Content
}

// GetParentID returns the value of ParentID.
func (s *OpinionsHistoryOKOpinionsItemOpinion) GetParentID() OptString {
	return s.ParentID
}

// GetVoteType returns the value of VoteType.
func (s *OpinionsHistoryOKOpinionsItemOpinion) GetVoteType() OptOpinionsHistoryOKOpinionsItemOpinionVoteType {
	return s.VoteType
}

// GetPictureURL returns the value of PictureURL.
func (s *OpinionsHistoryOKOpinionsItemOpinion) GetPictureURL() OptString {
	return s.PictureURL
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *OpinionsHistoryOKOpinionsItemOpinion) GetReferenceURL() OptString {
	return s.ReferenceURL
}

// GetPostedAt returns the value of PostedAt.
func (s *OpinionsHistoryOKOpinionsItemOpinion) GetPostedAt() string {
	return s.PostedAt
}

// SetID sets the value of ID.
func (s *OpinionsHistoryOKOpinionsItemOpinion) SetID(val string) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *OpinionsHistoryOKOpinionsItemOpinion) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *OpinionsHistoryOKOpinionsItemOpinion) SetContent(val string) {
	s.Content = val
}

// SetParentID sets the value of ParentID.
func (s *OpinionsHistoryOKOpinionsItemOpinion) SetParentID(val OptString) {
	s.ParentID = val
}

// SetVoteType sets the value of VoteType.
func (s *OpinionsHistoryOKOpinionsItemOpinion) SetVoteType(val OptOpinionsHistoryOKOpinionsItemOpinionVoteType) {
	s.VoteType = val
}

// SetPictureURL sets the value of PictureURL.
func (s *OpinionsHistoryOKOpinionsItemOpinion) SetPictureURL(val OptString) {
	s.PictureURL = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *OpinionsHistoryOKOpinionsItemOpinion) SetReferenceURL(val OptString) {
	s.ReferenceURL = val
}

// SetPostedAt sets the value of PostedAt.
func (s *OpinionsHistoryOKOpinionsItemOpinion) SetPostedAt(val string) {
	s.PostedAt = val
}

// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
type OpinionsHistoryOKOpinionsItemOpinionVoteType string

const (
	OpinionsHistoryOKOpinionsItemOpinionVoteTypeAgree    OpinionsHistoryOKOpinionsItemOpinionVoteType = "agree"
	OpinionsHistoryOKOpinionsItemOpinionVoteTypeDisagree OpinionsHistoryOKOpinionsItemOpinionVoteType = "disagree"
	OpinionsHistoryOKOpinionsItemOpinionVoteTypePass     OpinionsHistoryOKOpinionsItemOpinionVoteType = "pass"
)

// AllValues returns all OpinionsHistoryOKOpinionsItemOpinionVoteType values.
func (OpinionsHistoryOKOpinionsItemOpinionVoteType) AllValues() []OpinionsHistoryOKOpinionsItemOpinionVoteType {
	return []OpinionsHistoryOKOpinionsItemOpinionVoteType{
		OpinionsHistoryOKOpinionsItemOpinionVoteTypeAgree,
		OpinionsHistoryOKOpinionsItemOpinionVoteTypeDisagree,
		OpinionsHistoryOKOpinionsItemOpinionVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OpinionsHistoryOKOpinionsItemOpinionVoteType) MarshalText() ([]byte, error) {
	switch s {
	case OpinionsHistoryOKOpinionsItemOpinionVoteTypeAgree:
		return []byte(s), nil
	case OpinionsHistoryOKOpinionsItemOpinionVoteTypeDisagree:
		return []byte(s), nil
	case OpinionsHistoryOKOpinionsItemOpinionVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OpinionsHistoryOKOpinionsItemOpinionVoteType) UnmarshalText(data []byte) error {
	switch OpinionsHistoryOKOpinionsItemOpinionVoteType(data) {
	case OpinionsHistoryOKOpinionsItemOpinionVoteTypeAgree:
		*s = OpinionsHistoryOKOpinionsItemOpinionVoteTypeAgree
		return nil
	case OpinionsHistoryOKOpinionsItemOpinionVoteTypeDisagree:
		*s = OpinionsHistoryOKOpinionsItemOpinionVoteTypeDisagree
		return nil
	case OpinionsHistoryOKOpinionsItemOpinionVoteTypePass:
		*s = OpinionsHistoryOKOpinionsItemOpinionVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 作成ユーザー.
type OpinionsHistoryOKOpinionsItemUser struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *OpinionsHistoryOKOpinionsItemUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *OpinionsHistoryOKOpinionsItemUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *OpinionsHistoryOKOpinionsItemUser) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *OpinionsHistoryOKOpinionsItemUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *OpinionsHistoryOKOpinionsItemUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *OpinionsHistoryOKOpinionsItemUser) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type OpinionsHistoryOKPagination struct {
	TotalCount int `json:"totalCount"`
}

// GetTotalCount returns the value of TotalCount.
func (s *OpinionsHistoryOKPagination) GetTotalCount() int {
	return s.TotalCount
}

// SetTotalCount sets the value of TotalCount.
func (s *OpinionsHistoryOKPagination) SetTotalCount(val int) {
	s.TotalCount = val
}

type OpinionsHistorySort string

const (
	OpinionsHistorySortLatest      OpinionsHistorySort = "latest"
	OpinionsHistorySortMostReplies OpinionsHistorySort = "mostReplies"
	OpinionsHistorySortOldest      OpinionsHistorySort = "oldest"
)

// AllValues returns all OpinionsHistorySort values.
func (OpinionsHistorySort) AllValues() []OpinionsHistorySort {
	return []OpinionsHistorySort{
		OpinionsHistorySortLatest,
		OpinionsHistorySortMostReplies,
		OpinionsHistorySortOldest,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OpinionsHistorySort) MarshalText() ([]byte, error) {
	switch s {
	case OpinionsHistorySortLatest:
		return []byte(s), nil
	case OpinionsHistorySortMostReplies:
		return []byte(s), nil
	case OpinionsHistorySortOldest:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OpinionsHistorySort) UnmarshalText(data []byte) error {
	switch OpinionsHistorySort(data) {
	case OpinionsHistorySortLatest:
		*s = OpinionsHistorySortLatest
		return nil
	case OpinionsHistorySortMostReplies:
		*s = OpinionsHistorySortMostReplies
		return nil
	case OpinionsHistorySortOldest:
		*s = OpinionsHistorySortOldest
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateTalkSessionOKLocation returns new OptCreateTalkSessionOKLocation with value set to v.
func NewOptCreateTalkSessionOKLocation(v CreateTalkSessionOKLocation) OptCreateTalkSessionOKLocation {
	return OptCreateTalkSessionOKLocation{
		Value: v,
		Set:   true,
	}
}

// OptCreateTalkSessionOKLocation is optional CreateTalkSessionOKLocation.
type OptCreateTalkSessionOKLocation struct {
	Value CreateTalkSessionOKLocation
	Set   bool
}

// IsSet returns true if OptCreateTalkSessionOKLocation was set.
func (o OptCreateTalkSessionOKLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateTalkSessionOKLocation) Reset() {
	var v CreateTalkSessionOKLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateTalkSessionOKLocation) SetTo(v CreateTalkSessionOKLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateTalkSessionOKLocation) Get() (v CreateTalkSessionOKLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateTalkSessionOKLocation) Or(d CreateTalkSessionOKLocation) CreateTalkSessionOKLocation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateTalkSessionReq returns new OptCreateTalkSessionReq with value set to v.
func NewOptCreateTalkSessionReq(v CreateTalkSessionReq) OptCreateTalkSessionReq {
	return OptCreateTalkSessionReq{
		Value: v,
		Set:   true,
	}
}

// OptCreateTalkSessionReq is optional CreateTalkSessionReq.
type OptCreateTalkSessionReq struct {
	Value CreateTalkSessionReq
	Set   bool
}

// IsSet returns true if OptCreateTalkSessionReq was set.
func (o OptCreateTalkSessionReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateTalkSessionReq) Reset() {
	var v CreateTalkSessionReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateTalkSessionReq) SetTo(v CreateTalkSessionReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateTalkSessionReq) Get() (v CreateTalkSessionReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateTalkSessionReq) Or(d CreateTalkSessionReq) CreateTalkSessionReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEditTalkSessionOKLocation returns new OptEditTalkSessionOKLocation with value set to v.
func NewOptEditTalkSessionOKLocation(v EditTalkSessionOKLocation) OptEditTalkSessionOKLocation {
	return OptEditTalkSessionOKLocation{
		Value: v,
		Set:   true,
	}
}

// OptEditTalkSessionOKLocation is optional EditTalkSessionOKLocation.
type OptEditTalkSessionOKLocation struct {
	Value EditTalkSessionOKLocation
	Set   bool
}

// IsSet returns true if OptEditTalkSessionOKLocation was set.
func (o OptEditTalkSessionOKLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEditTalkSessionOKLocation) Reset() {
	var v EditTalkSessionOKLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEditTalkSessionOKLocation) SetTo(v EditTalkSessionOKLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEditTalkSessionOKLocation) Get() (v EditTalkSessionOKLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEditTalkSessionOKLocation) Or(d EditTalkSessionOKLocation) EditTalkSessionOKLocation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEditTalkSessionReq returns new OptEditTalkSessionReq with value set to v.
func NewOptEditTalkSessionReq(v EditTalkSessionReq) OptEditTalkSessionReq {
	return OptEditTalkSessionReq{
		Value: v,
		Set:   true,
	}
}

// OptEditTalkSessionReq is optional EditTalkSessionReq.
type OptEditTalkSessionReq struct {
	Value EditTalkSessionReq
	Set   bool
}

// IsSet returns true if OptEditTalkSessionReq was set.
func (o OptEditTalkSessionReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEditTalkSessionReq) Reset() {
	var v EditTalkSessionReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEditTalkSessionReq) SetTo(v EditTalkSessionReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEditTalkSessionReq) Get() (v EditTalkSessionReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEditTalkSessionReq) Or(d EditTalkSessionReq) EditTalkSessionReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEditTimeLineReq returns new OptEditTimeLineReq with value set to v.
func NewOptEditTimeLineReq(v EditTimeLineReq) OptEditTimeLineReq {
	return OptEditTimeLineReq{
		Value: v,
		Set:   true,
	}
}

// OptEditTimeLineReq is optional EditTimeLineReq.
type OptEditTimeLineReq struct {
	Value EditTimeLineReq
	Set   bool
}

// IsSet returns true if OptEditTimeLineReq was set.
func (o OptEditTimeLineReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEditTimeLineReq) Reset() {
	var v EditTimeLineReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEditTimeLineReq) SetTo(v EditTimeLineReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEditTimeLineReq) Get() (v EditTimeLineReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEditTimeLineReq) Or(d EditTimeLineReq) EditTimeLineReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEditUserProfileReq returns new OptEditUserProfileReq with value set to v.
func NewOptEditUserProfileReq(v EditUserProfileReq) OptEditUserProfileReq {
	return OptEditUserProfileReq{
		Value: v,
		Set:   true,
	}
}

// OptEditUserProfileReq is optional EditUserProfileReq.
type OptEditUserProfileReq struct {
	Value EditUserProfileReq
	Set   bool
}

// IsSet returns true if OptEditUserProfileReq was set.
func (o OptEditUserProfileReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEditUserProfileReq) Reset() {
	var v EditUserProfileReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEditUserProfileReq) SetTo(v EditUserProfileReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEditUserProfileReq) Get() (v EditUserProfileReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEditUserProfileReq) Or(d EditUserProfileReq) EditUserProfileReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation returns new OptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation with value set to v.
func NewOptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation(v GetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation) OptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation {
	return OptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation{
		Value: v,
		Set:   true,
	}
}

// OptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation is optional GetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation.
type OptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation struct {
	Value GetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation
	Set   bool
}

// IsSet returns true if OptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation was set.
func (o OptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation) Reset() {
	var v GetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation) SetTo(v GetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation) Get() (v GetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation) Or(d GetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation) GetOpenedTalkSessionOKTalkSessionsItemTalkSessionLocation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetOpinionDetailOKOpinionVoteType returns new OptGetOpinionDetailOKOpinionVoteType with value set to v.
func NewOptGetOpinionDetailOKOpinionVoteType(v GetOpinionDetailOKOpinionVoteType) OptGetOpinionDetailOKOpinionVoteType {
	return OptGetOpinionDetailOKOpinionVoteType{
		Value: v,
		Set:   true,
	}
}

// OptGetOpinionDetailOKOpinionVoteType is optional GetOpinionDetailOKOpinionVoteType.
type OptGetOpinionDetailOKOpinionVoteType struct {
	Value GetOpinionDetailOKOpinionVoteType
	Set   bool
}

// IsSet returns true if OptGetOpinionDetailOKOpinionVoteType was set.
func (o OptGetOpinionDetailOKOpinionVoteType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetOpinionDetailOKOpinionVoteType) Reset() {
	var v GetOpinionDetailOKOpinionVoteType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetOpinionDetailOKOpinionVoteType) SetTo(v GetOpinionDetailOKOpinionVoteType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetOpinionDetailOKOpinionVoteType) Get() (v GetOpinionDetailOKOpinionVoteType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetOpinionDetailOKOpinionVoteType) Or(d GetOpinionDetailOKOpinionVoteType) GetOpinionDetailOKOpinionVoteType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType returns new OptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType with value set to v.
func NewOptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType(v GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType) OptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType {
	return OptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType{
		Value: v,
		Set:   true,
	}
}

// OptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType is optional GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType.
type OptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType struct {
	Value GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType
	Set   bool
}

// IsSet returns true if OptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType was set.
func (o OptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType) Reset() {
	var v GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType) SetTo(v GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType) Get() (v GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType) Or(d GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType) GetOpinionsForTalkSessionOKOpinionsItemOpinionVoteType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetTalkSessionDetailOKLocation returns new OptGetTalkSessionDetailOKLocation with value set to v.
func NewOptGetTalkSessionDetailOKLocation(v GetTalkSessionDetailOKLocation) OptGetTalkSessionDetailOKLocation {
	return OptGetTalkSessionDetailOKLocation{
		Value: v,
		Set:   true,
	}
}

// OptGetTalkSessionDetailOKLocation is optional GetTalkSessionDetailOKLocation.
type OptGetTalkSessionDetailOKLocation struct {
	Value GetTalkSessionDetailOKLocation
	Set   bool
}

// IsSet returns true if OptGetTalkSessionDetailOKLocation was set.
func (o OptGetTalkSessionDetailOKLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetTalkSessionDetailOKLocation) Reset() {
	var v GetTalkSessionDetailOKLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetTalkSessionDetailOKLocation) SetTo(v GetTalkSessionDetailOKLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetTalkSessionDetailOKLocation) Get() (v GetTalkSessionDetailOKLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetTalkSessionDetailOKLocation) Or(d GetTalkSessionDetailOKLocation) GetTalkSessionDetailOKLocation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation returns new OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation with value set to v.
func NewOptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation(v GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation {
	return OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation{
		Value: v,
		Set:   true,
	}
}

// OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation is optional GetTalkSessionListOKTalkSessionsItemTalkSessionLocation.
type OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation struct {
	Value GetTalkSessionListOKTalkSessionsItemTalkSessionLocation
	Set   bool
}

// IsSet returns true if OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation was set.
func (o OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation) Reset() {
	var v GetTalkSessionListOKTalkSessionsItemTalkSessionLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation) SetTo(v GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation) Get() (v GetTalkSessionListOKTalkSessionsItemTalkSessionLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation) Or(d GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) GetTalkSessionListOKTalkSessionsItemTalkSessionLocation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetTalkSessionListSortKey returns new OptGetTalkSessionListSortKey with value set to v.
func NewOptGetTalkSessionListSortKey(v GetTalkSessionListSortKey) OptGetTalkSessionListSortKey {
	return OptGetTalkSessionListSortKey{
		Value: v,
		Set:   true,
	}
}

// OptGetTalkSessionListSortKey is optional GetTalkSessionListSortKey.
type OptGetTalkSessionListSortKey struct {
	Value GetTalkSessionListSortKey
	Set   bool
}

// IsSet returns true if OptGetTalkSessionListSortKey was set.
func (o OptGetTalkSessionListSortKey) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetTalkSessionListSortKey) Reset() {
	var v GetTalkSessionListSortKey
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetTalkSessionListSortKey) SetTo(v GetTalkSessionListSortKey) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetTalkSessionListSortKey) Get() (v GetTalkSessionListSortKey, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetTalkSessionListSortKey) Or(d GetTalkSessionListSortKey) GetTalkSessionListSortKey {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptManageRegenerateReq returns new OptManageRegenerateReq with value set to v.
func NewOptManageRegenerateReq(v ManageRegenerateReq) OptManageRegenerateReq {
	return OptManageRegenerateReq{
		Value: v,
		Set:   true,
	}
}

// OptManageRegenerateReq is optional ManageRegenerateReq.
type OptManageRegenerateReq struct {
	Value ManageRegenerateReq
	Set   bool
}

// IsSet returns true if OptManageRegenerateReq was set.
func (o OptManageRegenerateReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptManageRegenerateReq) Reset() {
	var v ManageRegenerateReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptManageRegenerateReq) SetTo(v ManageRegenerateReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptManageRegenerateReq) Get() (v ManageRegenerateReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptManageRegenerateReq) Or(d ManageRegenerateReq) ManageRegenerateReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMultipartFile returns new OptMultipartFile with value set to v.
func NewOptMultipartFile(v ht.MultipartFile) OptMultipartFile {
	return OptMultipartFile{
		Value: v,
		Set:   true,
	}
}

// OptMultipartFile is optional ht.MultipartFile.
type OptMultipartFile struct {
	Value ht.MultipartFile
	Set   bool
}

// IsSet returns true if OptMultipartFile was set.
func (o OptMultipartFile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMultipartFile) Reset() {
	var v ht.MultipartFile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMultipartFile) SetTo(v ht.MultipartFile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMultipartFile) Get() (v ht.MultipartFile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMultipartFile) Or(d ht.MultipartFile) ht.MultipartFile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBool returns new OptNilBool with value set to v.
func NewOptNilBool(v bool) OptNilBool {
	return OptNilBool{
		Value: v,
		Set:   true,
	}
}

// OptNilBool is optional nullable bool.
type OptNilBool struct {
	Value bool
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBool was set.
func (o OptNilBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBool) SetTo(v bool) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilBool) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilBool) SetToNull() {
	o.Set = true
	o.Null = true
	var v bool
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilEditUserProfileReqGender returns new OptNilEditUserProfileReqGender with value set to v.
func NewOptNilEditUserProfileReqGender(v EditUserProfileReqGender) OptNilEditUserProfileReqGender {
	return OptNilEditUserProfileReqGender{
		Value: v,
		Set:   true,
	}
}

// OptNilEditUserProfileReqGender is optional nullable EditUserProfileReqGender.
type OptNilEditUserProfileReqGender struct {
	Value EditUserProfileReqGender
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilEditUserProfileReqGender was set.
func (o OptNilEditUserProfileReqGender) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilEditUserProfileReqGender) Reset() {
	var v EditUserProfileReqGender
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilEditUserProfileReqGender) SetTo(v EditUserProfileReqGender) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilEditUserProfileReqGender) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilEditUserProfileReqGender) SetToNull() {
	o.Set = true
	o.Null = true
	var v EditUserProfileReqGender
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilEditUserProfileReqGender) Get() (v EditUserProfileReqGender, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilEditUserProfileReqGender) Or(d EditUserProfileReqGender) EditUserProfileReqGender {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilEditUserProfileReqOccupation returns new OptNilEditUserProfileReqOccupation with value set to v.
func NewOptNilEditUserProfileReqOccupation(v EditUserProfileReqOccupation) OptNilEditUserProfileReqOccupation {
	return OptNilEditUserProfileReqOccupation{
		Value: v,
		Set:   true,
	}
}

// OptNilEditUserProfileReqOccupation is optional nullable EditUserProfileReqOccupation.
type OptNilEditUserProfileReqOccupation struct {
	Value EditUserProfileReqOccupation
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilEditUserProfileReqOccupation was set.
func (o OptNilEditUserProfileReqOccupation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilEditUserProfileReqOccupation) Reset() {
	var v EditUserProfileReqOccupation
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilEditUserProfileReqOccupation) SetTo(v EditUserProfileReqOccupation) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilEditUserProfileReqOccupation) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilEditUserProfileReqOccupation) SetToNull() {
	o.Set = true
	o.Null = true
	var v EditUserProfileReqOccupation
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilEditUserProfileReqOccupation) Get() (v EditUserProfileReqOccupation, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilEditUserProfileReqOccupation) Or(d EditUserProfileReqOccupation) EditUserProfileReqOccupation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFloat64 returns new OptNilFloat64 with value set to v.
func NewOptNilFloat64(v float64) OptNilFloat64 {
	return OptNilFloat64{
		Value: v,
		Set:   true,
	}
}

// OptNilFloat64 is optional nullable float64.
type OptNilFloat64 struct {
	Value float64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFloat64 was set.
func (o OptNilFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFloat64) SetTo(v float64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilFloat64) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilFloat64) SetToNull() {
	o.Set = true
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilGetOpenedTalkSessionStatus returns new OptNilGetOpenedTalkSessionStatus with value set to v.
func NewOptNilGetOpenedTalkSessionStatus(v GetOpenedTalkSessionStatus) OptNilGetOpenedTalkSessionStatus {
	return OptNilGetOpenedTalkSessionStatus{
		Value: v,
		Set:   true,
	}
}

// OptNilGetOpenedTalkSessionStatus is optional nullable GetOpenedTalkSessionStatus.
type OptNilGetOpenedTalkSessionStatus struct {
	Value GetOpenedTalkSessionStatus
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGetOpenedTalkSessionStatus was set.
func (o OptNilGetOpenedTalkSessionStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGetOpenedTalkSessionStatus) Reset() {
	var v GetOpenedTalkSessionStatus
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGetOpenedTalkSessionStatus) SetTo(v GetOpenedTalkSessionStatus) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilGetOpenedTalkSessionStatus) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilGetOpenedTalkSessionStatus) SetToNull() {
	o.Set = true
	o.Null = true
	var v GetOpenedTalkSessionStatus
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGetOpenedTalkSessionStatus) Get() (v GetOpenedTalkSessionStatus, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilGetOpenedTalkSessionStatus) Or(d GetOpenedTalkSessionStatus) GetOpenedTalkSessionStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilGetOpinionsForTalkSessionSort returns new OptNilGetOpinionsForTalkSessionSort with value set to v.
func NewOptNilGetOpinionsForTalkSessionSort(v GetOpinionsForTalkSessionSort) OptNilGetOpinionsForTalkSessionSort {
	return OptNilGetOpinionsForTalkSessionSort{
		Value: v,
		Set:   true,
	}
}

// OptNilGetOpinionsForTalkSessionSort is optional nullable GetOpinionsForTalkSessionSort.
type OptNilGetOpinionsForTalkSessionSort struct {
	Value GetOpinionsForTalkSessionSort
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGetOpinionsForTalkSessionSort was set.
func (o OptNilGetOpinionsForTalkSessionSort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGetOpinionsForTalkSessionSort) Reset() {
	var v GetOpinionsForTalkSessionSort
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGetOpinionsForTalkSessionSort) SetTo(v GetOpinionsForTalkSessionSort) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilGetOpinionsForTalkSessionSort) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilGetOpinionsForTalkSessionSort) SetToNull() {
	o.Set = true
	o.Null = true
	var v GetOpinionsForTalkSessionSort
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGetOpinionsForTalkSessionSort) Get() (v GetOpinionsForTalkSessionSort, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilGetOpinionsForTalkSessionSort) Or(d GetOpinionsForTalkSessionSort) GetOpinionsForTalkSessionSort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilGetTalkSessionListStatus returns new OptNilGetTalkSessionListStatus with value set to v.
func NewOptNilGetTalkSessionListStatus(v GetTalkSessionListStatus) OptNilGetTalkSessionListStatus {
	return OptNilGetTalkSessionListStatus{
		Value: v,
		Set:   true,
	}
}

// OptNilGetTalkSessionListStatus is optional nullable GetTalkSessionListStatus.
type OptNilGetTalkSessionListStatus struct {
	Value GetTalkSessionListStatus
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGetTalkSessionListStatus was set.
func (o OptNilGetTalkSessionListStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGetTalkSessionListStatus) Reset() {
	var v GetTalkSessionListStatus
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGetTalkSessionListStatus) SetTo(v GetTalkSessionListStatus) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilGetTalkSessionListStatus) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilGetTalkSessionListStatus) SetToNull() {
	o.Set = true
	o.Null = true
	var v GetTalkSessionListStatus
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGetTalkSessionListStatus) Get() (v GetTalkSessionListStatus, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilGetTalkSessionListStatus) Or(d GetTalkSessionListStatus) GetTalkSessionListStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilInt) SetToNull() {
	o.Set = true
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilOpinionsHistorySort returns new OptNilOpinionsHistorySort with value set to v.
func NewOptNilOpinionsHistorySort(v OpinionsHistorySort) OptNilOpinionsHistorySort {
	return OptNilOpinionsHistorySort{
		Value: v,
		Set:   true,
	}
}

// OptNilOpinionsHistorySort is optional nullable OpinionsHistorySort.
type OptNilOpinionsHistorySort struct {
	Value OpinionsHistorySort
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilOpinionsHistorySort was set.
func (o OptNilOpinionsHistorySort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilOpinionsHistorySort) Reset() {
	var v OpinionsHistorySort
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilOpinionsHistorySort) SetTo(v OpinionsHistorySort) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilOpinionsHistorySort) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilOpinionsHistorySort) SetToNull() {
	o.Set = true
	o.Null = true
	var v OpinionsHistorySort
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilOpinionsHistorySort) Get() (v OpinionsHistorySort, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilOpinionsHistorySort) Or(d OpinionsHistorySort) OpinionsHistorySort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRegisterUserReqGender returns new OptNilRegisterUserReqGender with value set to v.
func NewOptNilRegisterUserReqGender(v RegisterUserReqGender) OptNilRegisterUserReqGender {
	return OptNilRegisterUserReqGender{
		Value: v,
		Set:   true,
	}
}

// OptNilRegisterUserReqGender is optional nullable RegisterUserReqGender.
type OptNilRegisterUserReqGender struct {
	Value RegisterUserReqGender
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRegisterUserReqGender was set.
func (o OptNilRegisterUserReqGender) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRegisterUserReqGender) Reset() {
	var v RegisterUserReqGender
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRegisterUserReqGender) SetTo(v RegisterUserReqGender) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRegisterUserReqGender) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRegisterUserReqGender) SetToNull() {
	o.Set = true
	o.Null = true
	var v RegisterUserReqGender
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRegisterUserReqGender) Get() (v RegisterUserReqGender, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRegisterUserReqGender) Or(d RegisterUserReqGender) RegisterUserReqGender {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRegisterUserReqOccupation returns new OptNilRegisterUserReqOccupation with value set to v.
func NewOptNilRegisterUserReqOccupation(v RegisterUserReqOccupation) OptNilRegisterUserReqOccupation {
	return OptNilRegisterUserReqOccupation{
		Value: v,
		Set:   true,
	}
}

// OptNilRegisterUserReqOccupation is optional nullable RegisterUserReqOccupation.
type OptNilRegisterUserReqOccupation struct {
	Value RegisterUserReqOccupation
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRegisterUserReqOccupation was set.
func (o OptNilRegisterUserReqOccupation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRegisterUserReqOccupation) Reset() {
	var v RegisterUserReqOccupation
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRegisterUserReqOccupation) SetTo(v RegisterUserReqOccupation) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRegisterUserReqOccupation) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRegisterUserReqOccupation) SetToNull() {
	o.Set = true
	o.Null = true
	var v RegisterUserReqOccupation
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRegisterUserReqOccupation) Get() (v RegisterUserReqOccupation, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRegisterUserReqOccupation) Or(d RegisterUserReqOccupation) RegisterUserReqOccupation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilSessionsHistoryStatus returns new OptNilSessionsHistoryStatus with value set to v.
func NewOptNilSessionsHistoryStatus(v SessionsHistoryStatus) OptNilSessionsHistoryStatus {
	return OptNilSessionsHistoryStatus{
		Value: v,
		Set:   true,
	}
}

// OptNilSessionsHistoryStatus is optional nullable SessionsHistoryStatus.
type OptNilSessionsHistoryStatus struct {
	Value SessionsHistoryStatus
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilSessionsHistoryStatus was set.
func (o OptNilSessionsHistoryStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilSessionsHistoryStatus) Reset() {
	var v SessionsHistoryStatus
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilSessionsHistoryStatus) SetTo(v SessionsHistoryStatus) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilSessionsHistoryStatus) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilSessionsHistoryStatus) SetToNull() {
	o.Set = true
	o.Null = true
	var v SessionsHistoryStatus
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilSessionsHistoryStatus) Get() (v SessionsHistoryStatus, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilSessionsHistoryStatus) Or(d SessionsHistoryStatus) SessionsHistoryStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOpinionCommentsOKOpinionsItemMyVoteType returns new OptOpinionCommentsOKOpinionsItemMyVoteType with value set to v.
func NewOptOpinionCommentsOKOpinionsItemMyVoteType(v OpinionCommentsOKOpinionsItemMyVoteType) OptOpinionCommentsOKOpinionsItemMyVoteType {
	return OptOpinionCommentsOKOpinionsItemMyVoteType{
		Value: v,
		Set:   true,
	}
}

// OptOpinionCommentsOKOpinionsItemMyVoteType is optional OpinionCommentsOKOpinionsItemMyVoteType.
type OptOpinionCommentsOKOpinionsItemMyVoteType struct {
	Value OpinionCommentsOKOpinionsItemMyVoteType
	Set   bool
}

// IsSet returns true if OptOpinionCommentsOKOpinionsItemMyVoteType was set.
func (o OptOpinionCommentsOKOpinionsItemMyVoteType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOpinionCommentsOKOpinionsItemMyVoteType) Reset() {
	var v OpinionCommentsOKOpinionsItemMyVoteType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOpinionCommentsOKOpinionsItemMyVoteType) SetTo(v OpinionCommentsOKOpinionsItemMyVoteType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOpinionCommentsOKOpinionsItemMyVoteType) Get() (v OpinionCommentsOKOpinionsItemMyVoteType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOpinionCommentsOKOpinionsItemMyVoteType) Or(d OpinionCommentsOKOpinionsItemMyVoteType) OpinionCommentsOKOpinionsItemMyVoteType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOpinionCommentsOKOpinionsItemOpinionVoteType returns new OptOpinionCommentsOKOpinionsItemOpinionVoteType with value set to v.
func NewOptOpinionCommentsOKOpinionsItemOpinionVoteType(v OpinionCommentsOKOpinionsItemOpinionVoteType) OptOpinionCommentsOKOpinionsItemOpinionVoteType {
	return OptOpinionCommentsOKOpinionsItemOpinionVoteType{
		Value: v,
		Set:   true,
	}
}

// OptOpinionCommentsOKOpinionsItemOpinionVoteType is optional OpinionCommentsOKOpinionsItemOpinionVoteType.
type OptOpinionCommentsOKOpinionsItemOpinionVoteType struct {
	Value OpinionCommentsOKOpinionsItemOpinionVoteType
	Set   bool
}

// IsSet returns true if OptOpinionCommentsOKOpinionsItemOpinionVoteType was set.
func (o OptOpinionCommentsOKOpinionsItemOpinionVoteType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOpinionCommentsOKOpinionsItemOpinionVoteType) Reset() {
	var v OpinionCommentsOKOpinionsItemOpinionVoteType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOpinionCommentsOKOpinionsItemOpinionVoteType) SetTo(v OpinionCommentsOKOpinionsItemOpinionVoteType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOpinionCommentsOKOpinionsItemOpinionVoteType) Get() (v OpinionCommentsOKOpinionsItemOpinionVoteType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOpinionCommentsOKOpinionsItemOpinionVoteType) Or(d OpinionCommentsOKOpinionsItemOpinionVoteType) OpinionCommentsOKOpinionsItemOpinionVoteType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOpinionCommentsOKRootOpinionMyVoteType returns new OptOpinionCommentsOKRootOpinionMyVoteType with value set to v.
func NewOptOpinionCommentsOKRootOpinionMyVoteType(v OpinionCommentsOKRootOpinionMyVoteType) OptOpinionCommentsOKRootOpinionMyVoteType {
	return OptOpinionCommentsOKRootOpinionMyVoteType{
		Value: v,
		Set:   true,
	}
}

// OptOpinionCommentsOKRootOpinionMyVoteType is optional OpinionCommentsOKRootOpinionMyVoteType.
type OptOpinionCommentsOKRootOpinionMyVoteType struct {
	Value OpinionCommentsOKRootOpinionMyVoteType
	Set   bool
}

// IsSet returns true if OptOpinionCommentsOKRootOpinionMyVoteType was set.
func (o OptOpinionCommentsOKRootOpinionMyVoteType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOpinionCommentsOKRootOpinionMyVoteType) Reset() {
	var v OpinionCommentsOKRootOpinionMyVoteType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOpinionCommentsOKRootOpinionMyVoteType) SetTo(v OpinionCommentsOKRootOpinionMyVoteType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOpinionCommentsOKRootOpinionMyVoteType) Get() (v OpinionCommentsOKRootOpinionMyVoteType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOpinionCommentsOKRootOpinionMyVoteType) Or(d OpinionCommentsOKRootOpinionMyVoteType) OpinionCommentsOKRootOpinionMyVoteType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOpinionCommentsOKRootOpinionOpinionVoteType returns new OptOpinionCommentsOKRootOpinionOpinionVoteType with value set to v.
func NewOptOpinionCommentsOKRootOpinionOpinionVoteType(v OpinionCommentsOKRootOpinionOpinionVoteType) OptOpinionCommentsOKRootOpinionOpinionVoteType {
	return OptOpinionCommentsOKRootOpinionOpinionVoteType{
		Value: v,
		Set:   true,
	}
}

// OptOpinionCommentsOKRootOpinionOpinionVoteType is optional OpinionCommentsOKRootOpinionOpinionVoteType.
type OptOpinionCommentsOKRootOpinionOpinionVoteType struct {
	Value OpinionCommentsOKRootOpinionOpinionVoteType
	Set   bool
}

// IsSet returns true if OptOpinionCommentsOKRootOpinionOpinionVoteType was set.
func (o OptOpinionCommentsOKRootOpinionOpinionVoteType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOpinionCommentsOKRootOpinionOpinionVoteType) Reset() {
	var v OpinionCommentsOKRootOpinionOpinionVoteType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOpinionCommentsOKRootOpinionOpinionVoteType) SetTo(v OpinionCommentsOKRootOpinionOpinionVoteType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOpinionCommentsOKRootOpinionOpinionVoteType) Get() (v OpinionCommentsOKRootOpinionOpinionVoteType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOpinionCommentsOKRootOpinionOpinionVoteType) Or(d OpinionCommentsOKRootOpinionOpinionVoteType) OpinionCommentsOKRootOpinionOpinionVoteType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOpinionsHistoryOKOpinionsItemOpinionVoteType returns new OptOpinionsHistoryOKOpinionsItemOpinionVoteType with value set to v.
func NewOptOpinionsHistoryOKOpinionsItemOpinionVoteType(v OpinionsHistoryOKOpinionsItemOpinionVoteType) OptOpinionsHistoryOKOpinionsItemOpinionVoteType {
	return OptOpinionsHistoryOKOpinionsItemOpinionVoteType{
		Value: v,
		Set:   true,
	}
}

// OptOpinionsHistoryOKOpinionsItemOpinionVoteType is optional OpinionsHistoryOKOpinionsItemOpinionVoteType.
type OptOpinionsHistoryOKOpinionsItemOpinionVoteType struct {
	Value OpinionsHistoryOKOpinionsItemOpinionVoteType
	Set   bool
}

// IsSet returns true if OptOpinionsHistoryOKOpinionsItemOpinionVoteType was set.
func (o OptOpinionsHistoryOKOpinionsItemOpinionVoteType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOpinionsHistoryOKOpinionsItemOpinionVoteType) Reset() {
	var v OpinionsHistoryOKOpinionsItemOpinionVoteType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOpinionsHistoryOKOpinionsItemOpinionVoteType) SetTo(v OpinionsHistoryOKOpinionsItemOpinionVoteType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOpinionsHistoryOKOpinionsItemOpinionVoteType) Get() (v OpinionsHistoryOKOpinionsItemOpinionVoteType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOpinionsHistoryOKOpinionsItemOpinionVoteType) Or(d OpinionsHistoryOKOpinionsItemOpinionVoteType) OpinionsHistoryOKOpinionsItemOpinionVoteType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPostConclusionReq returns new OptPostConclusionReq with value set to v.
func NewOptPostConclusionReq(v PostConclusionReq) OptPostConclusionReq {
	return OptPostConclusionReq{
		Value: v,
		Set:   true,
	}
}

// OptPostConclusionReq is optional PostConclusionReq.
type OptPostConclusionReq struct {
	Value PostConclusionReq
	Set   bool
}

// IsSet returns true if OptPostConclusionReq was set.
func (o OptPostConclusionReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPostConclusionReq) Reset() {
	var v PostConclusionReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPostConclusionReq) SetTo(v PostConclusionReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPostConclusionReq) Get() (v PostConclusionReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPostConclusionReq) Or(d PostConclusionReq) PostConclusionReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPostOpinionPostReq returns new OptPostOpinionPostReq with value set to v.
func NewOptPostOpinionPostReq(v PostOpinionPostReq) OptPostOpinionPostReq {
	return OptPostOpinionPostReq{
		Value: v,
		Set:   true,
	}
}

// OptPostOpinionPostReq is optional PostOpinionPostReq.
type OptPostOpinionPostReq struct {
	Value PostOpinionPostReq
	Set   bool
}

// IsSet returns true if OptPostOpinionPostReq was set.
func (o OptPostOpinionPostReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPostOpinionPostReq) Reset() {
	var v PostOpinionPostReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPostOpinionPostReq) SetTo(v PostOpinionPostReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPostOpinionPostReq) Get() (v PostOpinionPostReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPostOpinionPostReq) Or(d PostOpinionPostReq) PostOpinionPostReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPostTimeLineItemReq returns new OptPostTimeLineItemReq with value set to v.
func NewOptPostTimeLineItemReq(v PostTimeLineItemReq) OptPostTimeLineItemReq {
	return OptPostTimeLineItemReq{
		Value: v,
		Set:   true,
	}
}

// OptPostTimeLineItemReq is optional PostTimeLineItemReq.
type OptPostTimeLineItemReq struct {
	Value PostTimeLineItemReq
	Set   bool
}

// IsSet returns true if OptPostTimeLineItemReq was set.
func (o OptPostTimeLineItemReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPostTimeLineItemReq) Reset() {
	var v PostTimeLineItemReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPostTimeLineItemReq) SetTo(v PostTimeLineItemReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPostTimeLineItemReq) Get() (v PostTimeLineItemReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPostTimeLineItemReq) Or(d PostTimeLineItemReq) PostTimeLineItemReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRegisterUserReq returns new OptRegisterUserReq with value set to v.
func NewOptRegisterUserReq(v RegisterUserReq) OptRegisterUserReq {
	return OptRegisterUserReq{
		Value: v,
		Set:   true,
	}
}

// OptRegisterUserReq is optional RegisterUserReq.
type OptRegisterUserReq struct {
	Value RegisterUserReq
	Set   bool
}

// IsSet returns true if OptRegisterUserReq was set.
func (o OptRegisterUserReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRegisterUserReq) Reset() {
	var v RegisterUserReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRegisterUserReq) SetTo(v RegisterUserReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRegisterUserReq) Get() (v RegisterUserReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRegisterUserReq) Or(d RegisterUserReq) RegisterUserReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSessionsHistoryOKTalkSessionsItemTalkSessionLocation returns new OptSessionsHistoryOKTalkSessionsItemTalkSessionLocation with value set to v.
func NewOptSessionsHistoryOKTalkSessionsItemTalkSessionLocation(v SessionsHistoryOKTalkSessionsItemTalkSessionLocation) OptSessionsHistoryOKTalkSessionsItemTalkSessionLocation {
	return OptSessionsHistoryOKTalkSessionsItemTalkSessionLocation{
		Value: v,
		Set:   true,
	}
}

// OptSessionsHistoryOKTalkSessionsItemTalkSessionLocation is optional SessionsHistoryOKTalkSessionsItemTalkSessionLocation.
type OptSessionsHistoryOKTalkSessionsItemTalkSessionLocation struct {
	Value SessionsHistoryOKTalkSessionsItemTalkSessionLocation
	Set   bool
}

// IsSet returns true if OptSessionsHistoryOKTalkSessionsItemTalkSessionLocation was set.
func (o OptSessionsHistoryOKTalkSessionsItemTalkSessionLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSessionsHistoryOKTalkSessionsItemTalkSessionLocation) Reset() {
	var v SessionsHistoryOKTalkSessionsItemTalkSessionLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSessionsHistoryOKTalkSessionsItemTalkSessionLocation) SetTo(v SessionsHistoryOKTalkSessionsItemTalkSessionLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSessionsHistoryOKTalkSessionsItemTalkSessionLocation) Get() (v SessionsHistoryOKTalkSessionsItemTalkSessionLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSessionsHistoryOKTalkSessionsItemTalkSessionLocation) Or(d SessionsHistoryOKTalkSessionsItemTalkSessionLocation) SessionsHistoryOKTalkSessionsItemTalkSessionLocation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSwipeOpinionsOKItemOpinionVoteType returns new OptSwipeOpinionsOKItemOpinionVoteType with value set to v.
func NewOptSwipeOpinionsOKItemOpinionVoteType(v SwipeOpinionsOKItemOpinionVoteType) OptSwipeOpinionsOKItemOpinionVoteType {
	return OptSwipeOpinionsOKItemOpinionVoteType{
		Value: v,
		Set:   true,
	}
}

// OptSwipeOpinionsOKItemOpinionVoteType is optional SwipeOpinionsOKItemOpinionVoteType.
type OptSwipeOpinionsOKItemOpinionVoteType struct {
	Value SwipeOpinionsOKItemOpinionVoteType
	Set   bool
}

// IsSet returns true if OptSwipeOpinionsOKItemOpinionVoteType was set.
func (o OptSwipeOpinionsOKItemOpinionVoteType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSwipeOpinionsOKItemOpinionVoteType) Reset() {
	var v SwipeOpinionsOKItemOpinionVoteType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSwipeOpinionsOKItemOpinionVoteType) SetTo(v SwipeOpinionsOKItemOpinionVoteType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSwipeOpinionsOKItemOpinionVoteType) Get() (v SwipeOpinionsOKItemOpinionVoteType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSwipeOpinionsOKItemOpinionVoteType) Or(d SwipeOpinionsOKItemOpinionVoteType) SwipeOpinionsOKItemOpinionVoteType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType returns new OptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType with value set to v.
func NewOptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType(v TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType) OptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType {
	return OptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType{
		Value: v,
		Set:   true,
	}
}

// OptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType is optional TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType.
type OptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType struct {
	Value TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType
	Set   bool
}

// IsSet returns true if OptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType was set.
func (o OptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType) Reset() {
	var v TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType) SetTo(v TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType) Get() (v TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType) Or(d TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType) TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTalkSessionAnalysisOKMyPosition returns new OptTalkSessionAnalysisOKMyPosition with value set to v.
func NewOptTalkSessionAnalysisOKMyPosition(v TalkSessionAnalysisOKMyPosition) OptTalkSessionAnalysisOKMyPosition {
	return OptTalkSessionAnalysisOKMyPosition{
		Value: v,
		Set:   true,
	}
}

// OptTalkSessionAnalysisOKMyPosition is optional TalkSessionAnalysisOKMyPosition.
type OptTalkSessionAnalysisOKMyPosition struct {
	Value TalkSessionAnalysisOKMyPosition
	Set   bool
}

// IsSet returns true if OptTalkSessionAnalysisOKMyPosition was set.
func (o OptTalkSessionAnalysisOKMyPosition) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTalkSessionAnalysisOKMyPosition) Reset() {
	var v TalkSessionAnalysisOKMyPosition
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTalkSessionAnalysisOKMyPosition) SetTo(v TalkSessionAnalysisOKMyPosition) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTalkSessionAnalysisOKMyPosition) Get() (v TalkSessionAnalysisOKMyPosition, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTalkSessionAnalysisOKMyPosition) Or(d TalkSessionAnalysisOKMyPosition) TalkSessionAnalysisOKMyPosition {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptVoteOKItemVoteType returns new OptVoteOKItemVoteType with value set to v.
func NewOptVoteOKItemVoteType(v VoteOKItemVoteType) OptVoteOKItemVoteType {
	return OptVoteOKItemVoteType{
		Value: v,
		Set:   true,
	}
}

// OptVoteOKItemVoteType is optional VoteOKItemVoteType.
type OptVoteOKItemVoteType struct {
	Value VoteOKItemVoteType
	Set   bool
}

// IsSet returns true if OptVoteOKItemVoteType was set.
func (o OptVoteOKItemVoteType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVoteOKItemVoteType) Reset() {
	var v VoteOKItemVoteType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVoteOKItemVoteType) SetTo(v VoteOKItemVoteType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVoteOKItemVoteType) Get() (v VoteOKItemVoteType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptVoteOKItemVoteType) Or(d VoteOKItemVoteType) VoteOKItemVoteType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptVoteReq returns new OptVoteReq with value set to v.
func NewOptVoteReq(v VoteReq) OptVoteReq {
	return OptVoteReq{
		Value: v,
		Set:   true,
	}
}

// OptVoteReq is optional VoteReq.
type OptVoteReq struct {
	Value VoteReq
	Set   bool
}

// IsSet returns true if OptVoteReq was set.
func (o OptVoteReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVoteReq) Reset() {
	var v VoteReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVoteReq) SetTo(v VoteReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVoteReq) Get() (v VoteReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptVoteReq) Or(d VoteReq) VoteReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type PostConclusionBadRequest struct{}

func (*PostConclusionBadRequest) postConclusionRes() {}

type PostConclusionInternalServerError struct{}

func (*PostConclusionInternalServerError) postConclusionRes() {}

type PostConclusionOK struct {
	// 作成ユーザー.
	User PostConclusionOKUser `json:"user"`
	// 結論本文.
	Content string `json:"content"`
}

// GetUser returns the value of User.
func (s *PostConclusionOK) GetUser() PostConclusionOKUser {
	return s.User
}

// GetContent returns the value of Content.
func (s *PostConclusionOK) GetContent() string {
	return s.Content
}

// SetUser sets the value of User.
func (s *PostConclusionOK) SetUser(val PostConclusionOKUser) {
	s.User = val
}

// SetContent sets the value of Content.
func (s *PostConclusionOK) SetContent(val string) {
	s.Content = val
}

func (*PostConclusionOK) postConclusionRes() {}

// 作成ユーザー.
type PostConclusionOKUser struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *PostConclusionOKUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *PostConclusionOKUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *PostConclusionOKUser) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *PostConclusionOKUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *PostConclusionOKUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *PostConclusionOKUser) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type PostConclusionReq struct {
	// 結論本文。2文字以上.
	Content string `json:"content"`
}

// GetContent returns the value of Content.
func (s *PostConclusionReq) GetContent() string {
	return s.Content
}

// SetContent sets the value of Content.
func (s *PostConclusionReq) SetContent(val string) {
	s.Content = val
}

type PostOpinionPostBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *PostOpinionPostBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *PostOpinionPostBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *PostOpinionPostBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *PostOpinionPostBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*PostOpinionPostBadRequest) postOpinionPostRes() {}

type PostOpinionPostInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *PostOpinionPostInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *PostOpinionPostInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *PostOpinionPostInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *PostOpinionPostInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*PostOpinionPostInternalServerError) postOpinionPostRes() {}

type PostOpinionPostOK struct{}

func (*PostOpinionPostOK) postOpinionPostRes() {}

type PostOpinionPostReq struct {
	ParentOpinionID OptNilString `json:"parentOpinionID"`
	Title           OptNilString `json:"title"`
	OpinionContent  string       `json:"opinionContent"`
	ReferenceURL    OptNilString `json:"referenceURL"`
	// 参考画像。4MiBまで.
	Picture OptMultipartFile `json:"picture"`
}

// GetParentOpinionID returns the value of ParentOpinionID.
func (s *PostOpinionPostReq) GetParentOpinionID() OptNilString {
	return s.ParentOpinionID
}

// GetTitle returns the value of Title.
func (s *PostOpinionPostReq) GetTitle() OptNilString {
	return s.Title
}

// GetOpinionContent returns the value of OpinionContent.
func (s *PostOpinionPostReq) GetOpinionContent() string {
	return s.OpinionContent
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *PostOpinionPostReq) GetReferenceURL() OptNilString {
	return s.ReferenceURL
}

// GetPicture returns the value of Picture.
func (s *PostOpinionPostReq) GetPicture() OptMultipartFile {
	return s.Picture
}

// SetParentOpinionID sets the value of ParentOpinionID.
func (s *PostOpinionPostReq) SetParentOpinionID(val OptNilString) {
	s.ParentOpinionID = val
}

// SetTitle sets the value of Title.
func (s *PostOpinionPostReq) SetTitle(val OptNilString) {
	s.Title = val
}

// SetOpinionContent sets the value of OpinionContent.
func (s *PostOpinionPostReq) SetOpinionContent(val string) {
	s.OpinionContent = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *PostOpinionPostReq) SetReferenceURL(val OptNilString) {
	s.ReferenceURL = val
}

// SetPicture sets the value of Picture.
func (s *PostOpinionPostReq) SetPicture(val OptMultipartFile) {
	s.Picture = val
}

type PostTimeLineItemBadRequest struct{}

func (*PostTimeLineItemBadRequest) postTimeLineItemRes() {}

type PostTimeLineItemInternalServerError struct{}

func (*PostTimeLineItemInternalServerError) postTimeLineItemRes() {}

type PostTimeLineItemOK struct {
	ActionItemID string `json:"ActionItemID"`
	Sequence     int    `json:"Sequence"`
	Content      string `json:"Content"`
	Status       string `json:"Status"`
	CreatedAt    string `json:"CreatedAt"`
	UpdatedAt    string `json:"UpdatedAt"`
}

// GetActionItemID returns the value of ActionItemID.
func (s *PostTimeLineItemOK) GetActionItemID() string {
	return s.ActionItemID
}

// GetSequence returns the value of Sequence.
func (s *PostTimeLineItemOK) GetSequence() int {
	return s.Sequence
}

// GetContent returns the value of Content.
func (s *PostTimeLineItemOK) GetContent() string {
	return s.Content
}

// GetStatus returns the value of Status.
func (s *PostTimeLineItemOK) GetStatus() string {
	return s.Status
}

// GetCreatedAt returns the value of CreatedAt.
func (s *PostTimeLineItemOK) GetCreatedAt() string {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *PostTimeLineItemOK) GetUpdatedAt() string {
	return s.UpdatedAt
}

// SetActionItemID sets the value of ActionItemID.
func (s *PostTimeLineItemOK) SetActionItemID(val string) {
	s.ActionItemID = val
}

// SetSequence sets the value of Sequence.
func (s *PostTimeLineItemOK) SetSequence(val int) {
	s.Sequence = val
}

// SetContent sets the value of Content.
func (s *PostTimeLineItemOK) SetContent(val string) {
	s.Content = val
}

// SetStatus sets the value of Status.
func (s *PostTimeLineItemOK) SetStatus(val string) {
	s.Status = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *PostTimeLineItemOK) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *PostTimeLineItemOK) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

func (*PostTimeLineItemOK) postTimeLineItemRes() {}

type PostTimeLineItemReq struct {
	Content string `json:"content"`
	Status  string `json:"status"`
	// 親があるなら親のIDヲシテイ.
	ParentActionItemID OptNilString `json:"parentActionItemID"`
}

// GetContent returns the value of Content.
func (s *PostTimeLineItemReq) GetContent() string {
	return s.Content
}

// GetStatus returns the value of Status.
func (s *PostTimeLineItemReq) GetStatus() string {
	return s.Status
}

// GetParentActionItemID returns the value of ParentActionItemID.
func (s *PostTimeLineItemReq) GetParentActionItemID() OptNilString {
	return s.ParentActionItemID
}

// SetContent sets the value of Content.
func (s *PostTimeLineItemReq) SetContent(val string) {
	s.Content = val
}

// SetStatus sets the value of Status.
func (s *PostTimeLineItemReq) SetStatus(val string) {
	s.Status = val
}

// SetParentActionItemID sets the value of ParentActionItemID.
func (s *PostTimeLineItemReq) SetParentActionItemID(val OptNilString) {
	s.ParentActionItemID = val
}

type RegisterUserBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *RegisterUserBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *RegisterUserBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *RegisterUserBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *RegisterUserBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*RegisterUserBadRequest) registerUserRes() {}

type RegisterUserInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *RegisterUserInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *RegisterUserInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *RegisterUserInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *RegisterUserInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*RegisterUserInternalServerError) registerUserRes() {}

type RegisterUserOK struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *RegisterUserOK) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *RegisterUserOK) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *RegisterUserOK) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *RegisterUserOK) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *RegisterUserOK) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *RegisterUserOK) SetIconURL(val OptNilString) {
	s.IconURL = val
}

func (*RegisterUserOK) registerUserRes() {}

type RegisterUserReq struct {
	// ユーザー名。日本語なども設定可能。.
	DisplayName string `json:"displayName"`
	// ユーザーID。プロフィールのパスなどで使用される。DBのIDとは別。.
	DisplayID string `json:"displayID"`
	// ユーザーアイコン.
	Icon OptMultipartFile `json:"icon"`
	// 生まれ年.
	YearOfBirth OptNilInt `json:"yearOfBirth"`
	// 性別.
	Gender OptNilRegisterUserReqGender `json:"gender"`
	// 都道府県.
	Prefecture OptString `json:"prefecture"`
	// 市区町村.
	City OptNilString `json:"city"`
	// ユーザーの職業.
	Occupation OptNilRegisterUserReqOccupation `json:"occupation"`
	// 世帯人数.
	HouseholdSize OptNilInt `json:"householdSize"`
}

// GetDisplayName returns the value of DisplayName.
func (s *RegisterUserReq) GetDisplayName() string {
	return s.DisplayName
}

// GetDisplayID returns the value of DisplayID.
func (s *RegisterUserReq) GetDisplayID() string {
	return s.DisplayID
}

// GetIcon returns the value of Icon.
func (s *RegisterUserReq) GetIcon() OptMultipartFile {
	return s.Icon
}

// GetYearOfBirth returns the value of YearOfBirth.
func (s *RegisterUserReq) GetYearOfBirth() OptNilInt {
	return s.YearOfBirth
}

// GetGender returns the value of Gender.
func (s *RegisterUserReq) GetGender() OptNilRegisterUserReqGender {
	return s.Gender
}

// GetPrefecture returns the value of Prefecture.
func (s *RegisterUserReq) GetPrefecture() OptString {
	return s.Prefecture
}

// GetCity returns the value of City.
func (s *RegisterUserReq) GetCity() OptNilString {
	return s.City
}

// GetOccupation returns the value of Occupation.
func (s *RegisterUserReq) GetOccupation() OptNilRegisterUserReqOccupation {
	return s.Occupation
}

// GetHouseholdSize returns the value of HouseholdSize.
func (s *RegisterUserReq) GetHouseholdSize() OptNilInt {
	return s.HouseholdSize
}

// SetDisplayName sets the value of DisplayName.
func (s *RegisterUserReq) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetDisplayID sets the value of DisplayID.
func (s *RegisterUserReq) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetIcon sets the value of Icon.
func (s *RegisterUserReq) SetIcon(val OptMultipartFile) {
	s.Icon = val
}

// SetYearOfBirth sets the value of YearOfBirth.
func (s *RegisterUserReq) SetYearOfBirth(val OptNilInt) {
	s.YearOfBirth = val
}

// SetGender sets the value of Gender.
func (s *RegisterUserReq) SetGender(val OptNilRegisterUserReqGender) {
	s.Gender = val
}

// SetPrefecture sets the value of Prefecture.
func (s *RegisterUserReq) SetPrefecture(val OptString) {
	s.Prefecture = val
}

// SetCity sets the value of City.
func (s *RegisterUserReq) SetCity(val OptNilString) {
	s.City = val
}

// SetOccupation sets the value of Occupation.
func (s *RegisterUserReq) SetOccupation(val OptNilRegisterUserReqOccupation) {
	s.Occupation = val
}

// SetHouseholdSize sets the value of HouseholdSize.
func (s *RegisterUserReq) SetHouseholdSize(val OptNilInt) {
	s.HouseholdSize = val
}

// 性別.
type RegisterUserReqGender string

const (
	RegisterUserReqGender_0 RegisterUserReqGender = "男性"
	RegisterUserReqGender_1 RegisterUserReqGender = "女性"
	RegisterUserReqGender_2 RegisterUserReqGender = "その他"
	RegisterUserReqGender_3 RegisterUserReqGender = "回答しない"
)

// AllValues returns all RegisterUserReqGender values.
func (RegisterUserReqGender) AllValues() []RegisterUserReqGender {
	return []RegisterUserReqGender{
		RegisterUserReqGender_0,
		RegisterUserReqGender_1,
		RegisterUserReqGender_2,
		RegisterUserReqGender_3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RegisterUserReqGender) MarshalText() ([]byte, error) {
	switch s {
	case RegisterUserReqGender_0:
		return []byte(s), nil
	case RegisterUserReqGender_1:
		return []byte(s), nil
	case RegisterUserReqGender_2:
		return []byte(s), nil
	case RegisterUserReqGender_3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RegisterUserReqGender) UnmarshalText(data []byte) error {
	switch RegisterUserReqGender(data) {
	case RegisterUserReqGender_0:
		*s = RegisterUserReqGender_0
		return nil
	case RegisterUserReqGender_1:
		*s = RegisterUserReqGender_1
		return nil
	case RegisterUserReqGender_2:
		*s = RegisterUserReqGender_2
		return nil
	case RegisterUserReqGender_3:
		*s = RegisterUserReqGender_3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ユーザーの職業.
type RegisterUserReqOccupation string

const (
	RegisterUserReqOccupation_0  RegisterUserReqOccupation = "正社員"
	RegisterUserReqOccupation_1  RegisterUserReqOccupation = "契約社員"
	RegisterUserReqOccupation_2  RegisterUserReqOccupation = "公務員"
	RegisterUserReqOccupation_3  RegisterUserReqOccupation = "自営業"
	RegisterUserReqOccupation_4  RegisterUserReqOccupation = "会社役員"
	RegisterUserReqOccupation_5  RegisterUserReqOccupation = "パート・アルバイト"
	RegisterUserReqOccupation_6  RegisterUserReqOccupation = "家事従事者"
	RegisterUserReqOccupation_7  RegisterUserReqOccupation = "学生"
	RegisterUserReqOccupation_8  RegisterUserReqOccupation = "無職"
	RegisterUserReqOccupation_9  RegisterUserReqOccupation = "その他"
	RegisterUserReqOccupation_10 RegisterUserReqOccupation = "回答しない"
)

// AllValues returns all RegisterUserReqOccupation values.
func (RegisterUserReqOccupation) AllValues() []RegisterUserReqOccupation {
	return []RegisterUserReqOccupation{
		RegisterUserReqOccupation_0,
		RegisterUserReqOccupation_1,
		RegisterUserReqOccupation_2,
		RegisterUserReqOccupation_3,
		RegisterUserReqOccupation_4,
		RegisterUserReqOccupation_5,
		RegisterUserReqOccupation_6,
		RegisterUserReqOccupation_7,
		RegisterUserReqOccupation_8,
		RegisterUserReqOccupation_9,
		RegisterUserReqOccupation_10,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RegisterUserReqOccupation) MarshalText() ([]byte, error) {
	switch s {
	case RegisterUserReqOccupation_0:
		return []byte(s), nil
	case RegisterUserReqOccupation_1:
		return []byte(s), nil
	case RegisterUserReqOccupation_2:
		return []byte(s), nil
	case RegisterUserReqOccupation_3:
		return []byte(s), nil
	case RegisterUserReqOccupation_4:
		return []byte(s), nil
	case RegisterUserReqOccupation_5:
		return []byte(s), nil
	case RegisterUserReqOccupation_6:
		return []byte(s), nil
	case RegisterUserReqOccupation_7:
		return []byte(s), nil
	case RegisterUserReqOccupation_8:
		return []byte(s), nil
	case RegisterUserReqOccupation_9:
		return []byte(s), nil
	case RegisterUserReqOccupation_10:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RegisterUserReqOccupation) UnmarshalText(data []byte) error {
	switch RegisterUserReqOccupation(data) {
	case RegisterUserReqOccupation_0:
		*s = RegisterUserReqOccupation_0
		return nil
	case RegisterUserReqOccupation_1:
		*s = RegisterUserReqOccupation_1
		return nil
	case RegisterUserReqOccupation_2:
		*s = RegisterUserReqOccupation_2
		return nil
	case RegisterUserReqOccupation_3:
		*s = RegisterUserReqOccupation_3
		return nil
	case RegisterUserReqOccupation_4:
		*s = RegisterUserReqOccupation_4
		return nil
	case RegisterUserReqOccupation_5:
		*s = RegisterUserReqOccupation_5
		return nil
	case RegisterUserReqOccupation_6:
		*s = RegisterUserReqOccupation_6
		return nil
	case RegisterUserReqOccupation_7:
		*s = RegisterUserReqOccupation_7
		return nil
	case RegisterUserReqOccupation_8:
		*s = RegisterUserReqOccupation_8
		return nil
	case RegisterUserReqOccupation_9:
		*s = RegisterUserReqOccupation_9
		return nil
	case RegisterUserReqOccupation_10:
		*s = RegisterUserReqOccupation_10
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SessionId struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *SessionId) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *SessionId) SetAPIKey(val string) {
	s.APIKey = val
}

type SessionsHistoryBadRequest struct{}

func (*SessionsHistoryBadRequest) sessionsHistoryRes() {}

type SessionsHistoryInternalServerError struct{}

func (*SessionsHistoryInternalServerError) sessionsHistoryRes() {}

type SessionsHistoryOK struct {
	Pagination   SessionsHistoryOKPagination         `json:"pagination"`
	TalkSessions []SessionsHistoryOKTalkSessionsItem `json:"talkSessions"`
}

// GetPagination returns the value of Pagination.
func (s *SessionsHistoryOK) GetPagination() SessionsHistoryOKPagination {
	return s.Pagination
}

// GetTalkSessions returns the value of TalkSessions.
func (s *SessionsHistoryOK) GetTalkSessions() []SessionsHistoryOKTalkSessionsItem {
	return s.TalkSessions
}

// SetPagination sets the value of Pagination.
func (s *SessionsHistoryOK) SetPagination(val SessionsHistoryOKPagination) {
	s.Pagination = val
}

// SetTalkSessions sets the value of TalkSessions.
func (s *SessionsHistoryOK) SetTalkSessions(val []SessionsHistoryOKTalkSessionsItem) {
	s.TalkSessions = val
}

func (*SessionsHistoryOK) sessionsHistoryRes() {}

type SessionsHistoryOKPagination struct {
	TotalCount int `json:"totalCount"`
	Offset     int `json:"offset"`
	Limit      int `json:"limit"`
}

// GetTotalCount returns the value of TotalCount.
func (s *SessionsHistoryOKPagination) GetTotalCount() int {
	return s.TotalCount
}

// GetOffset returns the value of Offset.
func (s *SessionsHistoryOKPagination) GetOffset() int {
	return s.Offset
}

// GetLimit returns the value of Limit.
func (s *SessionsHistoryOKPagination) GetLimit() int {
	return s.Limit
}

// SetTotalCount sets the value of TotalCount.
func (s *SessionsHistoryOKPagination) SetTotalCount(val int) {
	s.TotalCount = val
}

// SetOffset sets the value of Offset.
func (s *SessionsHistoryOKPagination) SetOffset(val int) {
	s.Offset = val
}

// SetLimit sets the value of Limit.
func (s *SessionsHistoryOKPagination) SetLimit(val int) {
	s.Limit = val
}

type SessionsHistoryOKTalkSessionsItem struct {
	OpinionCount int                                          `json:"opinionCount"`
	TalkSession  SessionsHistoryOKTalkSessionsItemTalkSession `json:"talkSession"`
}

// GetOpinionCount returns the value of OpinionCount.
func (s *SessionsHistoryOKTalkSessionsItem) GetOpinionCount() int {
	return s.OpinionCount
}

// GetTalkSession returns the value of TalkSession.
func (s *SessionsHistoryOKTalkSessionsItem) GetTalkSession() SessionsHistoryOKTalkSessionsItemTalkSession {
	return s.TalkSession
}

// SetOpinionCount sets the value of OpinionCount.
func (s *SessionsHistoryOKTalkSessionsItem) SetOpinionCount(val int) {
	s.OpinionCount = val
}

// SetTalkSession sets the value of TalkSession.
func (s *SessionsHistoryOKTalkSessionsItem) SetTalkSession(val SessionsHistoryOKTalkSessionsItemTalkSession) {
	s.TalkSession = val
}

type SessionsHistoryOKTalkSessionsItemTalkSession struct {
	// トークセッションID.
	ID string `json:"id"`
	// テーマ.
	Theme string `json:"theme"`
	// 説明.
	Description OptNilString `json:"description"`
	// 作成ユーザー.
	Owner SessionsHistoryOKTalkSessionsItemTalkSessionOwner `json:"owner"`
	// 作成日時.
	CreatedAt string `json:"createdAt"`
	// 終了予定日時.
	ScheduledEndTime string `json:"scheduledEndTime"`
	// 位置情報.
	Location OptSessionsHistoryOKTalkSessionsItemTalkSessionLocation `json:"location"`
	// 市区町村.
	City OptNilString `json:"city"`
	// 都道府県.
	Prefecture OptNilString `json:"prefecture"`
}

// GetID returns the value of ID.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) GetID() string {
	return s.ID
}

// GetTheme returns the value of Theme.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) GetTheme() string {
	return s.Theme
}

// GetDescription returns the value of Description.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) GetDescription() OptNilString {
	return s.Description
}

// GetOwner returns the value of Owner.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) GetOwner() SessionsHistoryOKTalkSessionsItemTalkSessionOwner {
	return s.Owner
}

// GetCreatedAt returns the value of CreatedAt.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) GetCreatedAt() string {
	return s.CreatedAt
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) GetScheduledEndTime() string {
	return s.ScheduledEndTime
}

// GetLocation returns the value of Location.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) GetLocation() OptSessionsHistoryOKTalkSessionsItemTalkSessionLocation {
	return s.Location
}

// GetCity returns the value of City.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) GetCity() OptNilString {
	return s.City
}

// GetPrefecture returns the value of Prefecture.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) GetPrefecture() OptNilString {
	return s.Prefecture
}

// SetID sets the value of ID.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) SetID(val string) {
	s.ID = val
}

// SetTheme sets the value of Theme.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) SetTheme(val string) {
	s.Theme = val
}

// SetDescription sets the value of Description.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) SetDescription(val OptNilString) {
	s.Description = val
}

// SetOwner sets the value of Owner.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) SetOwner(val SessionsHistoryOKTalkSessionsItemTalkSessionOwner) {
	s.Owner = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) SetScheduledEndTime(val string) {
	s.ScheduledEndTime = val
}

// SetLocation sets the value of Location.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) SetLocation(val OptSessionsHistoryOKTalkSessionsItemTalkSessionLocation) {
	s.Location = val
}

// SetCity sets the value of City.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) SetCity(val OptNilString) {
	s.City = val
}

// SetPrefecture sets the value of Prefecture.
func (s *SessionsHistoryOKTalkSessionsItemTalkSession) SetPrefecture(val OptNilString) {
	s.Prefecture = val
}

// 位置情報.
type SessionsHistoryOKTalkSessionsItemTalkSessionLocation struct {
	// 緯度.
	Latitude OptFloat64 `json:"latitude"`
	// 経度.
	Longitude OptFloat64 `json:"longitude"`
}

// GetLatitude returns the value of Latitude.
func (s *SessionsHistoryOKTalkSessionsItemTalkSessionLocation) GetLatitude() OptFloat64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *SessionsHistoryOKTalkSessionsItemTalkSessionLocation) GetLongitude() OptFloat64 {
	return s.Longitude
}

// SetLatitude sets the value of Latitude.
func (s *SessionsHistoryOKTalkSessionsItemTalkSessionLocation) SetLatitude(val OptFloat64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *SessionsHistoryOKTalkSessionsItemTalkSessionLocation) SetLongitude(val OptFloat64) {
	s.Longitude = val
}

// 作成ユーザー.
type SessionsHistoryOKTalkSessionsItemTalkSessionOwner struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *SessionsHistoryOKTalkSessionsItemTalkSessionOwner) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *SessionsHistoryOKTalkSessionsItemTalkSessionOwner) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *SessionsHistoryOKTalkSessionsItemTalkSessionOwner) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *SessionsHistoryOKTalkSessionsItemTalkSessionOwner) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *SessionsHistoryOKTalkSessionsItemTalkSessionOwner) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *SessionsHistoryOKTalkSessionsItemTalkSessionOwner) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type SessionsHistoryStatus string

const (
	SessionsHistoryStatusOpen     SessionsHistoryStatus = "open"
	SessionsHistoryStatusFinished SessionsHistoryStatus = "finished"
)

// AllValues returns all SessionsHistoryStatus values.
func (SessionsHistoryStatus) AllValues() []SessionsHistoryStatus {
	return []SessionsHistoryStatus{
		SessionsHistoryStatusOpen,
		SessionsHistoryStatusFinished,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SessionsHistoryStatus) MarshalText() ([]byte, error) {
	switch s {
	case SessionsHistoryStatusOpen:
		return []byte(s), nil
	case SessionsHistoryStatusFinished:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SessionsHistoryStatus) UnmarshalText(data []byte) error {
	switch SessionsHistoryStatus(data) {
	case SessionsHistoryStatusOpen:
		*s = SessionsHistoryStatusOpen
		return nil
	case SessionsHistoryStatusFinished:
		*s = SessionsHistoryStatusFinished
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SwipeOpinionsBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *SwipeOpinionsBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *SwipeOpinionsBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *SwipeOpinionsBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *SwipeOpinionsBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*SwipeOpinionsBadRequest) swipeOpinionsRes() {}

type SwipeOpinionsInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *SwipeOpinionsInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *SwipeOpinionsInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *SwipeOpinionsInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *SwipeOpinionsInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*SwipeOpinionsInternalServerError) swipeOpinionsRes() {}

type SwipeOpinionsOKApplicationJSON []SwipeOpinionsOKItem

func (*SwipeOpinionsOKApplicationJSON) swipeOpinionsRes() {}

type SwipeOpinionsOKItem struct {
	Opinion SwipeOpinionsOKItemOpinion `json:"opinion"`
	// 作成ユーザー.
	User       SwipeOpinionsOKItemUser `json:"user"`
	ReplyCount int                     `json:"replyCount"`
}

// GetOpinion returns the value of Opinion.
func (s *SwipeOpinionsOKItem) GetOpinion() SwipeOpinionsOKItemOpinion {
	return s.Opinion
}

// GetUser returns the value of User.
func (s *SwipeOpinionsOKItem) GetUser() SwipeOpinionsOKItemUser {
	return s.User
}

// GetReplyCount returns the value of ReplyCount.
func (s *SwipeOpinionsOKItem) GetReplyCount() int {
	return s.ReplyCount
}

// SetOpinion sets the value of Opinion.
func (s *SwipeOpinionsOKItem) SetOpinion(val SwipeOpinionsOKItemOpinion) {
	s.Opinion = val
}

// SetUser sets the value of User.
func (s *SwipeOpinionsOKItem) SetUser(val SwipeOpinionsOKItemUser) {
	s.User = val
}

// SetReplyCount sets the value of ReplyCount.
func (s *SwipeOpinionsOKItem) SetReplyCount(val int) {
	s.ReplyCount = val
}

type SwipeOpinionsOKItemOpinion struct {
	// 意見ID.
	ID    string    `json:"id"`
	Title OptString `json:"title"`
	// 意見のテキスト.
	Content string `json:"content"`
	// 親の意見ID。ルートならば無し.
	ParentID OptString `json:"parentID"`
	// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
	VoteType OptSwipeOpinionsOKItemOpinionVoteType `json:"voteType"`
	// 画像が返る場合もある.
	PictureURL OptString `json:"pictureURL"`
	// 参考文献URL.
	ReferenceURL OptString `json:"referenceURL"`
	PostedAt     string    `json:"postedAt"`
}

// GetID returns the value of ID.
func (s *SwipeOpinionsOKItemOpinion) GetID() string {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *SwipeOpinionsOKItemOpinion) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *SwipeOpinionsOKItemOpinion) GetContent() string {
	return s.Content
}

// GetParentID returns the value of ParentID.
func (s *SwipeOpinionsOKItemOpinion) GetParentID() OptString {
	return s.ParentID
}

// GetVoteType returns the value of VoteType.
func (s *SwipeOpinionsOKItemOpinion) GetVoteType() OptSwipeOpinionsOKItemOpinionVoteType {
	return s.VoteType
}

// GetPictureURL returns the value of PictureURL.
func (s *SwipeOpinionsOKItemOpinion) GetPictureURL() OptString {
	return s.PictureURL
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *SwipeOpinionsOKItemOpinion) GetReferenceURL() OptString {
	return s.ReferenceURL
}

// GetPostedAt returns the value of PostedAt.
func (s *SwipeOpinionsOKItemOpinion) GetPostedAt() string {
	return s.PostedAt
}

// SetID sets the value of ID.
func (s *SwipeOpinionsOKItemOpinion) SetID(val string) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *SwipeOpinionsOKItemOpinion) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *SwipeOpinionsOKItemOpinion) SetContent(val string) {
	s.Content = val
}

// SetParentID sets the value of ParentID.
func (s *SwipeOpinionsOKItemOpinion) SetParentID(val OptString) {
	s.ParentID = val
}

// SetVoteType sets the value of VoteType.
func (s *SwipeOpinionsOKItemOpinion) SetVoteType(val OptSwipeOpinionsOKItemOpinionVoteType) {
	s.VoteType = val
}

// SetPictureURL sets the value of PictureURL.
func (s *SwipeOpinionsOKItemOpinion) SetPictureURL(val OptString) {
	s.PictureURL = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *SwipeOpinionsOKItemOpinion) SetReferenceURL(val OptString) {
	s.ReferenceURL = val
}

// SetPostedAt sets the value of PostedAt.
func (s *SwipeOpinionsOKItemOpinion) SetPostedAt(val string) {
	s.PostedAt = val
}

// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
type SwipeOpinionsOKItemOpinionVoteType string

const (
	SwipeOpinionsOKItemOpinionVoteTypeAgree    SwipeOpinionsOKItemOpinionVoteType = "agree"
	SwipeOpinionsOKItemOpinionVoteTypeDisagree SwipeOpinionsOKItemOpinionVoteType = "disagree"
	SwipeOpinionsOKItemOpinionVoteTypePass     SwipeOpinionsOKItemOpinionVoteType = "pass"
)

// AllValues returns all SwipeOpinionsOKItemOpinionVoteType values.
func (SwipeOpinionsOKItemOpinionVoteType) AllValues() []SwipeOpinionsOKItemOpinionVoteType {
	return []SwipeOpinionsOKItemOpinionVoteType{
		SwipeOpinionsOKItemOpinionVoteTypeAgree,
		SwipeOpinionsOKItemOpinionVoteTypeDisagree,
		SwipeOpinionsOKItemOpinionVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SwipeOpinionsOKItemOpinionVoteType) MarshalText() ([]byte, error) {
	switch s {
	case SwipeOpinionsOKItemOpinionVoteTypeAgree:
		return []byte(s), nil
	case SwipeOpinionsOKItemOpinionVoteTypeDisagree:
		return []byte(s), nil
	case SwipeOpinionsOKItemOpinionVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SwipeOpinionsOKItemOpinionVoteType) UnmarshalText(data []byte) error {
	switch SwipeOpinionsOKItemOpinionVoteType(data) {
	case SwipeOpinionsOKItemOpinionVoteTypeAgree:
		*s = SwipeOpinionsOKItemOpinionVoteTypeAgree
		return nil
	case SwipeOpinionsOKItemOpinionVoteTypeDisagree:
		*s = SwipeOpinionsOKItemOpinionVoteTypeDisagree
		return nil
	case SwipeOpinionsOKItemOpinionVoteTypePass:
		*s = SwipeOpinionsOKItemOpinionVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 作成ユーザー.
type SwipeOpinionsOKItemUser struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *SwipeOpinionsOKItemUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *SwipeOpinionsOKItemUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *SwipeOpinionsOKItemUser) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *SwipeOpinionsOKItemUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *SwipeOpinionsOKItemUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *SwipeOpinionsOKItemUser) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type TalkSessionAnalysisBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *TalkSessionAnalysisBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *TalkSessionAnalysisBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *TalkSessionAnalysisBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *TalkSessionAnalysisBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*TalkSessionAnalysisBadRequest) talkSessionAnalysisRes() {}

type TalkSessionAnalysisInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *TalkSessionAnalysisInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *TalkSessionAnalysisInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *TalkSessionAnalysisInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *TalkSessionAnalysisInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*TalkSessionAnalysisInternalServerError) talkSessionAnalysisRes() {}

type TalkSessionAnalysisOK struct {
	MyPosition    OptTalkSessionAnalysisOKMyPosition       `json:"myPosition"`
	Positions     []TalkSessionAnalysisOKPositionsItem     `json:"positions"`
	GroupOpinions []TalkSessionAnalysisOKGroupOpinionsItem `json:"groupOpinions"`
}

// GetMyPosition returns the value of MyPosition.
func (s *TalkSessionAnalysisOK) GetMyPosition() OptTalkSessionAnalysisOKMyPosition {
	return s.MyPosition
}

// GetPositions returns the value of Positions.
func (s *TalkSessionAnalysisOK) GetPositions() []TalkSessionAnalysisOKPositionsItem {
	return s.Positions
}

// GetGroupOpinions returns the value of GroupOpinions.
func (s *TalkSessionAnalysisOK) GetGroupOpinions() []TalkSessionAnalysisOKGroupOpinionsItem {
	return s.GroupOpinions
}

// SetMyPosition sets the value of MyPosition.
func (s *TalkSessionAnalysisOK) SetMyPosition(val OptTalkSessionAnalysisOKMyPosition) {
	s.MyPosition = val
}

// SetPositions sets the value of Positions.
func (s *TalkSessionAnalysisOK) SetPositions(val []TalkSessionAnalysisOKPositionsItem) {
	s.Positions = val
}

// SetGroupOpinions sets the value of GroupOpinions.
func (s *TalkSessionAnalysisOK) SetGroupOpinions(val []TalkSessionAnalysisOKGroupOpinionsItem) {
	s.GroupOpinions = val
}

func (*TalkSessionAnalysisOK) talkSessionAnalysisRes() {}

type TalkSessionAnalysisOKGroupOpinionsItem struct {
	GroupName string                                               `json:"groupName"`
	GroupId   int                                                  `json:"groupId"`
	Opinions  []TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem `json:"opinions"`
}

// GetGroupName returns the value of GroupName.
func (s *TalkSessionAnalysisOKGroupOpinionsItem) GetGroupName() string {
	return s.GroupName
}

// GetGroupId returns the value of GroupId.
func (s *TalkSessionAnalysisOKGroupOpinionsItem) GetGroupId() int {
	return s.GroupId
}

// GetOpinions returns the value of Opinions.
func (s *TalkSessionAnalysisOKGroupOpinionsItem) GetOpinions() []TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem {
	return s.Opinions
}

// SetGroupName sets the value of GroupName.
func (s *TalkSessionAnalysisOKGroupOpinionsItem) SetGroupName(val string) {
	s.GroupName = val
}

// SetGroupId sets the value of GroupId.
func (s *TalkSessionAnalysisOKGroupOpinionsItem) SetGroupId(val int) {
	s.GroupId = val
}

// SetOpinions sets the value of Opinions.
func (s *TalkSessionAnalysisOKGroupOpinionsItem) SetOpinions(val []TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) {
	s.Opinions = val
}

type TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem struct {
	Opinion TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion `json:"opinion"`
	// 作成ユーザー.
	User          TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemUser `json:"user"`
	AgreeCount    int                                                    `json:"agreeCount"`
	DisagreeCount int                                                    `json:"disagreeCount"`
	PassCount     int                                                    `json:"passCount"`
}

// GetOpinion returns the value of Opinion.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) GetOpinion() TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion {
	return s.Opinion
}

// GetUser returns the value of User.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) GetUser() TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemUser {
	return s.User
}

// GetAgreeCount returns the value of AgreeCount.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) GetAgreeCount() int {
	return s.AgreeCount
}

// GetDisagreeCount returns the value of DisagreeCount.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) GetDisagreeCount() int {
	return s.DisagreeCount
}

// GetPassCount returns the value of PassCount.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) GetPassCount() int {
	return s.PassCount
}

// SetOpinion sets the value of Opinion.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) SetOpinion(val TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) {
	s.Opinion = val
}

// SetUser sets the value of User.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) SetUser(val TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemUser) {
	s.User = val
}

// SetAgreeCount sets the value of AgreeCount.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) SetAgreeCount(val int) {
	s.AgreeCount = val
}

// SetDisagreeCount sets the value of DisagreeCount.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) SetDisagreeCount(val int) {
	s.DisagreeCount = val
}

// SetPassCount sets the value of PassCount.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItem) SetPassCount(val int) {
	s.PassCount = val
}

type TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion struct {
	// 意見ID.
	ID    string    `json:"id"`
	Title OptString `json:"title"`
	// 意見のテキスト.
	Content string `json:"content"`
	// 親の意見ID。ルートならば無し.
	ParentID OptString `json:"parentID"`
	// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
	VoteType OptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType `json:"voteType"`
	// 画像が返る場合もある.
	PictureURL OptString `json:"pictureURL"`
	// 参考文献URL.
	ReferenceURL OptString `json:"referenceURL"`
	PostedAt     string    `json:"postedAt"`
}

// GetID returns the value of ID.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) GetID() string {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) GetContent() string {
	return s.Content
}

// GetParentID returns the value of ParentID.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) GetParentID() OptString {
	return s.ParentID
}

// GetVoteType returns the value of VoteType.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) GetVoteType() OptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType {
	return s.VoteType
}

// GetPictureURL returns the value of PictureURL.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) GetPictureURL() OptString {
	return s.PictureURL
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) GetReferenceURL() OptString {
	return s.ReferenceURL
}

// GetPostedAt returns the value of PostedAt.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) GetPostedAt() string {
	return s.PostedAt
}

// SetID sets the value of ID.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) SetID(val string) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) SetContent(val string) {
	s.Content = val
}

// SetParentID sets the value of ParentID.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) SetParentID(val OptString) {
	s.ParentID = val
}

// SetVoteType sets the value of VoteType.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) SetVoteType(val OptTalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType) {
	s.VoteType = val
}

// SetPictureURL sets the value of PictureURL.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) SetPictureURL(val OptString) {
	s.PictureURL = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) SetReferenceURL(val OptString) {
	s.ReferenceURL = val
}

// SetPostedAt sets the value of PostedAt.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinion) SetPostedAt(val string) {
	s.PostedAt = val
}

// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
type TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType string

const (
	TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypeAgree    TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType = "agree"
	TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypeDisagree TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType = "disagree"
	TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypePass     TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType = "pass"
)

// AllValues returns all TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType values.
func (TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType) AllValues() []TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType {
	return []TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType{
		TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypeAgree,
		TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypeDisagree,
		TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType) MarshalText() ([]byte, error) {
	switch s {
	case TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypeAgree:
		return []byte(s), nil
	case TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypeDisagree:
		return []byte(s), nil
	case TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType) UnmarshalText(data []byte) error {
	switch TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteType(data) {
	case TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypeAgree:
		*s = TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypeAgree
		return nil
	case TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypeDisagree:
		*s = TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypeDisagree
		return nil
	case TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypePass:
		*s = TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemOpinionVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 作成ユーザー.
type TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemUser struct {
	DisplayID   string       `json:"displayID"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemUser) GetIconURL() OptNilString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *TalkSessionAnalysisOKGroupOpinionsItemOpinionsItemUser) SetIconURL(val OptNilString) {
	s.IconURL = val
}

type TalkSessionAnalysisOKMyPosition struct {
	PosX        float64      `json:"posX"`
	PosY        float64      `json:"posY"`
	DisplayId   string       `json:"displayId"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
	GroupName   string       `json:"groupName"`
	GroupId     int          `json:"groupId"`
	// 境界ポイントのインデックス.
	PerimeterIndex OptInt `json:"perimeterIndex"`
}

// GetPosX returns the value of PosX.
func (s *TalkSessionAnalysisOKMyPosition) GetPosX() float64 {
	return s.PosX
}

// GetPosY returns the value of PosY.
func (s *TalkSessionAnalysisOKMyPosition) GetPosY() float64 {
	return s.PosY
}

// GetDisplayId returns the value of DisplayId.
func (s *TalkSessionAnalysisOKMyPosition) GetDisplayId() string {
	return s.DisplayId
}

// GetDisplayName returns the value of DisplayName.
func (s *TalkSessionAnalysisOKMyPosition) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *TalkSessionAnalysisOKMyPosition) GetIconURL() OptNilString {
	return s.IconURL
}

// GetGroupName returns the value of GroupName.
func (s *TalkSessionAnalysisOKMyPosition) GetGroupName() string {
	return s.GroupName
}

// GetGroupId returns the value of GroupId.
func (s *TalkSessionAnalysisOKMyPosition) GetGroupId() int {
	return s.GroupId
}

// GetPerimeterIndex returns the value of PerimeterIndex.
func (s *TalkSessionAnalysisOKMyPosition) GetPerimeterIndex() OptInt {
	return s.PerimeterIndex
}

// SetPosX sets the value of PosX.
func (s *TalkSessionAnalysisOKMyPosition) SetPosX(val float64) {
	s.PosX = val
}

// SetPosY sets the value of PosY.
func (s *TalkSessionAnalysisOKMyPosition) SetPosY(val float64) {
	s.PosY = val
}

// SetDisplayId sets the value of DisplayId.
func (s *TalkSessionAnalysisOKMyPosition) SetDisplayId(val string) {
	s.DisplayId = val
}

// SetDisplayName sets the value of DisplayName.
func (s *TalkSessionAnalysisOKMyPosition) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *TalkSessionAnalysisOKMyPosition) SetIconURL(val OptNilString) {
	s.IconURL = val
}

// SetGroupName sets the value of GroupName.
func (s *TalkSessionAnalysisOKMyPosition) SetGroupName(val string) {
	s.GroupName = val
}

// SetGroupId sets the value of GroupId.
func (s *TalkSessionAnalysisOKMyPosition) SetGroupId(val int) {
	s.GroupId = val
}

// SetPerimeterIndex sets the value of PerimeterIndex.
func (s *TalkSessionAnalysisOKMyPosition) SetPerimeterIndex(val OptInt) {
	s.PerimeterIndex = val
}

type TalkSessionAnalysisOKPositionsItem struct {
	PosX        float64      `json:"posX"`
	PosY        float64      `json:"posY"`
	DisplayId   string       `json:"displayId"`
	DisplayName string       `json:"displayName"`
	IconURL     OptNilString `json:"iconURL"`
	GroupName   string       `json:"groupName"`
	GroupId     int          `json:"groupId"`
	// 境界ポイントのインデックス.
	PerimeterIndex OptInt `json:"perimeterIndex"`
}

// GetPosX returns the value of PosX.
func (s *TalkSessionAnalysisOKPositionsItem) GetPosX() float64 {
	return s.PosX
}

// GetPosY returns the value of PosY.
func (s *TalkSessionAnalysisOKPositionsItem) GetPosY() float64 {
	return s.PosY
}

// GetDisplayId returns the value of DisplayId.
func (s *TalkSessionAnalysisOKPositionsItem) GetDisplayId() string {
	return s.DisplayId
}

// GetDisplayName returns the value of DisplayName.
func (s *TalkSessionAnalysisOKPositionsItem) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *TalkSessionAnalysisOKPositionsItem) GetIconURL() OptNilString {
	return s.IconURL
}

// GetGroupName returns the value of GroupName.
func (s *TalkSessionAnalysisOKPositionsItem) GetGroupName() string {
	return s.GroupName
}

// GetGroupId returns the value of GroupId.
func (s *TalkSessionAnalysisOKPositionsItem) GetGroupId() int {
	return s.GroupId
}

// GetPerimeterIndex returns the value of PerimeterIndex.
func (s *TalkSessionAnalysisOKPositionsItem) GetPerimeterIndex() OptInt {
	return s.PerimeterIndex
}

// SetPosX sets the value of PosX.
func (s *TalkSessionAnalysisOKPositionsItem) SetPosX(val float64) {
	s.PosX = val
}

// SetPosY sets the value of PosY.
func (s *TalkSessionAnalysisOKPositionsItem) SetPosY(val float64) {
	s.PosY = val
}

// SetDisplayId sets the value of DisplayId.
func (s *TalkSessionAnalysisOKPositionsItem) SetDisplayId(val string) {
	s.DisplayId = val
}

// SetDisplayName sets the value of DisplayName.
func (s *TalkSessionAnalysisOKPositionsItem) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *TalkSessionAnalysisOKPositionsItem) SetIconURL(val OptNilString) {
	s.IconURL = val
}

// SetGroupName sets the value of GroupName.
func (s *TalkSessionAnalysisOKPositionsItem) SetGroupName(val string) {
	s.GroupName = val
}

// SetGroupId sets the value of GroupId.
func (s *TalkSessionAnalysisOKPositionsItem) SetGroupId(val int) {
	s.GroupId = val
}

// SetPerimeterIndex sets the value of PerimeterIndex.
func (s *TalkSessionAnalysisOKPositionsItem) SetPerimeterIndex(val OptInt) {
	s.PerimeterIndex = val
}

type TestBadRequest struct{}

func (*TestBadRequest) testRes() {}

type TestInternalServerError struct{}

func (*TestInternalServerError) testRes() {}

type TestOK struct {
	OptInt     OptNilInt    `json:"optInt"`
	OptNilInt  OptInt       `json:"optNilInt"`
	OptNilBool OptNilBool   `json:"optNilBool"`
	OptBool    OptBool      `json:"optBool"`
	OptUrl     OptURI       `json:"optUrl"`
	OptNilUrl  OptNilString `json:"optNilUrl"`
}

// GetOptInt returns the value of OptInt.
func (s *TestOK) GetOptInt() OptNilInt {
	return s.OptInt
}

// GetOptNilInt returns the value of OptNilInt.
func (s *TestOK) GetOptNilInt() OptInt {
	return s.OptNilInt
}

// GetOptNilBool returns the value of OptNilBool.
func (s *TestOK) GetOptNilBool() OptNilBool {
	return s.OptNilBool
}

// GetOptBool returns the value of OptBool.
func (s *TestOK) GetOptBool() OptBool {
	return s.OptBool
}

// GetOptUrl returns the value of OptUrl.
func (s *TestOK) GetOptUrl() OptURI {
	return s.OptUrl
}

// GetOptNilUrl returns the value of OptNilUrl.
func (s *TestOK) GetOptNilUrl() OptNilString {
	return s.OptNilUrl
}

// SetOptInt sets the value of OptInt.
func (s *TestOK) SetOptInt(val OptNilInt) {
	s.OptInt = val
}

// SetOptNilInt sets the value of OptNilInt.
func (s *TestOK) SetOptNilInt(val OptInt) {
	s.OptNilInt = val
}

// SetOptNilBool sets the value of OptNilBool.
func (s *TestOK) SetOptNilBool(val OptNilBool) {
	s.OptNilBool = val
}

// SetOptBool sets the value of OptBool.
func (s *TestOK) SetOptBool(val OptBool) {
	s.OptBool = val
}

// SetOptUrl sets the value of OptUrl.
func (s *TestOK) SetOptUrl(val OptURI) {
	s.OptUrl = val
}

// SetOptNilUrl sets the value of OptNilUrl.
func (s *TestOK) SetOptNilUrl(val OptNilString) {
	s.OptNilUrl = val
}

func (*TestOK) testRes() {}

type VoteBadRequest struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *VoteBadRequest) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *VoteBadRequest) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *VoteBadRequest) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *VoteBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*VoteBadRequest) voteRes() {}

type VoteInternalServerError struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *VoteInternalServerError) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *VoteInternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *VoteInternalServerError) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *VoteInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*VoteInternalServerError) voteRes() {}

type VoteOKApplicationJSON []VoteOKItem

func (*VoteOKApplicationJSON) voteRes() {}

type VoteOKItem struct {
	// 意見ID.
	ID    string    `json:"id"`
	Title OptString `json:"title"`
	// 意見のテキスト.
	Content string `json:"content"`
	// 親の意見ID。ルートならば無し.
	ParentID OptString `json:"parentID"`
	// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
	VoteType OptVoteOKItemVoteType `json:"voteType"`
	// 画像が返る場合もある.
	PictureURL OptString `json:"pictureURL"`
	// 参考文献URL.
	ReferenceURL OptString `json:"referenceURL"`
	PostedAt     string    `json:"postedAt"`
}

// GetID returns the value of ID.
func (s *VoteOKItem) GetID() string {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *VoteOKItem) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *VoteOKItem) GetContent() string {
	return s.Content
}

// GetParentID returns the value of ParentID.
func (s *VoteOKItem) GetParentID() OptString {
	return s.ParentID
}

// GetVoteType returns the value of VoteType.
func (s *VoteOKItem) GetVoteType() OptVoteOKItemVoteType {
	return s.VoteType
}

// GetPictureURL returns the value of PictureURL.
func (s *VoteOKItem) GetPictureURL() OptString {
	return s.PictureURL
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *VoteOKItem) GetReferenceURL() OptString {
	return s.ReferenceURL
}

// GetPostedAt returns the value of PostedAt.
func (s *VoteOKItem) GetPostedAt() string {
	return s.PostedAt
}

// SetID sets the value of ID.
func (s *VoteOKItem) SetID(val string) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *VoteOKItem) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *VoteOKItem) SetContent(val string) {
	s.Content = val
}

// SetParentID sets the value of ParentID.
func (s *VoteOKItem) SetParentID(val OptString) {
	s.ParentID = val
}

// SetVoteType sets the value of VoteType.
func (s *VoteOKItem) SetVoteType(val OptVoteOKItemVoteType) {
	s.VoteType = val
}

// SetPictureURL sets the value of PictureURL.
func (s *VoteOKItem) SetPictureURL(val OptString) {
	s.PictureURL = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *VoteOKItem) SetReferenceURL(val OptString) {
	s.ReferenceURL = val
}

// SetPostedAt sets the value of PostedAt.
func (s *VoteOKItem) SetPostedAt(val string) {
	s.PostedAt = val
}

// 意見投稿主の意見。ルート意見の場合はここには何も入らない.
type VoteOKItemVoteType string

const (
	VoteOKItemVoteTypeAgree    VoteOKItemVoteType = "agree"
	VoteOKItemVoteTypeDisagree VoteOKItemVoteType = "disagree"
	VoteOKItemVoteTypePass     VoteOKItemVoteType = "pass"
)

// AllValues returns all VoteOKItemVoteType values.
func (VoteOKItemVoteType) AllValues() []VoteOKItemVoteType {
	return []VoteOKItemVoteType{
		VoteOKItemVoteTypeAgree,
		VoteOKItemVoteTypeDisagree,
		VoteOKItemVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s VoteOKItemVoteType) MarshalText() ([]byte, error) {
	switch s {
	case VoteOKItemVoteTypeAgree:
		return []byte(s), nil
	case VoteOKItemVoteTypeDisagree:
		return []byte(s), nil
	case VoteOKItemVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *VoteOKItemVoteType) UnmarshalText(data []byte) error {
	switch VoteOKItemVoteType(data) {
	case VoteOKItemVoteTypeAgree:
		*s = VoteOKItemVoteTypeAgree
		return nil
	case VoteOKItemVoteTypeDisagree:
		*s = VoteOKItemVoteTypeDisagree
		return nil
	case VoteOKItemVoteTypePass:
		*s = VoteOKItemVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type VoteReq struct {
	VoteStatus NilVoteReqVoteStatus `json:"voteStatus"`
}

// GetVoteStatus returns the value of VoteStatus.
func (s *VoteReq) GetVoteStatus() NilVoteReqVoteStatus {
	return s.VoteStatus
}

// SetVoteStatus sets the value of VoteStatus.
func (s *VoteReq) SetVoteStatus(val NilVoteReqVoteStatus) {
	s.VoteStatus = val
}

type VoteReqVoteStatus string

const (
	VoteReqVoteStatusAgree    VoteReqVoteStatus = "agree"
	VoteReqVoteStatusDisagree VoteReqVoteStatus = "disagree"
	VoteReqVoteStatusPass     VoteReqVoteStatus = "pass"
)

// AllValues returns all VoteReqVoteStatus values.
func (VoteReqVoteStatus) AllValues() []VoteReqVoteStatus {
	return []VoteReqVoteStatus{
		VoteReqVoteStatusAgree,
		VoteReqVoteStatusDisagree,
		VoteReqVoteStatusPass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s VoteReqVoteStatus) MarshalText() ([]byte, error) {
	switch s {
	case VoteReqVoteStatusAgree:
		return []byte(s), nil
	case VoteReqVoteStatusDisagree:
		return []byte(s), nil
	case VoteReqVoteStatusPass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *VoteReqVoteStatus) UnmarshalText(data []byte) error {
	switch VoteReqVoteStatus(data) {
	case VoteReqVoteStatusAgree:
		*s = VoteReqVoteStatusAgree
		return nil
	case VoteReqVoteStatusDisagree:
		*s = VoteReqVoteStatusDisagree
		return nil
	case VoteReqVoteStatusPass:
		*s = VoteReqVoteStatusPass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}
