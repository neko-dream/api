// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"net/url"
	"time"

	"github.com/go-faster/errors"

	ht "github.com/ogen-go/ogen/http"
)

// AuthorizeFound is response for Authorize operation.
type AuthorizeFound struct {
	Location  OptURI
	SetCookie OptString
}

// GetLocation returns the value of Location.
func (s *AuthorizeFound) GetLocation() OptURI {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *AuthorizeFound) GetSetCookie() OptString {
	return s.SetCookie
}

// SetLocation sets the value of Location.
func (s *AuthorizeFound) SetLocation(val OptURI) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *AuthorizeFound) SetSetCookie(val OptString) {
	s.SetCookie = val
}

type CreateTalkSessionOK struct {
	// トークセッションID.
	ID string `json:"id"`
	// テーマ.
	Theme string `json:"theme"`
	// 作成ユーザー.
	Owner CreateTalkSessionOKOwner `json:"owner"`
	// 作成日時.
	CreatedAt string `json:"createdAt"`
	// 終了日時.
	FinishedAt OptString `json:"finishedAt"`
	// 終了予定日時.
	ScheduledEndTime string `json:"scheduledEndTime"`
	// 位置情報.
	Location OptCreateTalkSessionOKLocation `json:"location"`
}

// GetID returns the value of ID.
func (s *CreateTalkSessionOK) GetID() string {
	return s.ID
}

// GetTheme returns the value of Theme.
func (s *CreateTalkSessionOK) GetTheme() string {
	return s.Theme
}

// GetOwner returns the value of Owner.
func (s *CreateTalkSessionOK) GetOwner() CreateTalkSessionOKOwner {
	return s.Owner
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateTalkSessionOK) GetCreatedAt() string {
	return s.CreatedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *CreateTalkSessionOK) GetFinishedAt() OptString {
	return s.FinishedAt
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *CreateTalkSessionOK) GetScheduledEndTime() string {
	return s.ScheduledEndTime
}

// GetLocation returns the value of Location.
func (s *CreateTalkSessionOK) GetLocation() OptCreateTalkSessionOKLocation {
	return s.Location
}

// SetID sets the value of ID.
func (s *CreateTalkSessionOK) SetID(val string) {
	s.ID = val
}

// SetTheme sets the value of Theme.
func (s *CreateTalkSessionOK) SetTheme(val string) {
	s.Theme = val
}

// SetOwner sets the value of Owner.
func (s *CreateTalkSessionOK) SetOwner(val CreateTalkSessionOKOwner) {
	s.Owner = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateTalkSessionOK) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *CreateTalkSessionOK) SetFinishedAt(val OptString) {
	s.FinishedAt = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *CreateTalkSessionOK) SetScheduledEndTime(val string) {
	s.ScheduledEndTime = val
}

// SetLocation sets the value of Location.
func (s *CreateTalkSessionOK) SetLocation(val OptCreateTalkSessionOKLocation) {
	s.Location = val
}

// 位置情報.
// CreateTalkSessionOKLocation represents sum type.
type CreateTalkSessionOKLocation struct {
	Type                         CreateTalkSessionOKLocationType // switch on this field
	CreateTalkSessionOKLocation0 CreateTalkSessionOKLocation0
	Null                         struct{}
}

// CreateTalkSessionOKLocationType is oneOf type of CreateTalkSessionOKLocation.
type CreateTalkSessionOKLocationType string

// Possible values for CreateTalkSessionOKLocationType.
const (
	CreateTalkSessionOKLocation0CreateTalkSessionOKLocation CreateTalkSessionOKLocationType = "CreateTalkSessionOKLocation0"
	NullCreateTalkSessionOKLocation                         CreateTalkSessionOKLocationType = "struct{}"
)

// IsCreateTalkSessionOKLocation0 reports whether CreateTalkSessionOKLocation is CreateTalkSessionOKLocation0.
func (s CreateTalkSessionOKLocation) IsCreateTalkSessionOKLocation0() bool {
	return s.Type == CreateTalkSessionOKLocation0CreateTalkSessionOKLocation
}

// IsNull reports whether CreateTalkSessionOKLocation is struct{}.
func (s CreateTalkSessionOKLocation) IsNull() bool { return s.Type == NullCreateTalkSessionOKLocation }

// SetCreateTalkSessionOKLocation0 sets CreateTalkSessionOKLocation to CreateTalkSessionOKLocation0.
func (s *CreateTalkSessionOKLocation) SetCreateTalkSessionOKLocation0(v CreateTalkSessionOKLocation0) {
	s.Type = CreateTalkSessionOKLocation0CreateTalkSessionOKLocation
	s.CreateTalkSessionOKLocation0 = v
}

// GetCreateTalkSessionOKLocation0 returns CreateTalkSessionOKLocation0 and true boolean if CreateTalkSessionOKLocation is CreateTalkSessionOKLocation0.
func (s CreateTalkSessionOKLocation) GetCreateTalkSessionOKLocation0() (v CreateTalkSessionOKLocation0, ok bool) {
	if !s.IsCreateTalkSessionOKLocation0() {
		return v, false
	}
	return s.CreateTalkSessionOKLocation0, true
}

// NewCreateTalkSessionOKLocation0CreateTalkSessionOKLocation returns new CreateTalkSessionOKLocation from CreateTalkSessionOKLocation0.
func NewCreateTalkSessionOKLocation0CreateTalkSessionOKLocation(v CreateTalkSessionOKLocation0) CreateTalkSessionOKLocation {
	var s CreateTalkSessionOKLocation
	s.SetCreateTalkSessionOKLocation0(v)
	return s
}

// SetNull sets CreateTalkSessionOKLocation to struct{}.
func (s *CreateTalkSessionOKLocation) SetNull(v struct{}) {
	s.Type = NullCreateTalkSessionOKLocation
	s.Null = v
}

// GetNull returns struct{} and true boolean if CreateTalkSessionOKLocation is struct{}.
func (s CreateTalkSessionOKLocation) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullCreateTalkSessionOKLocation returns new CreateTalkSessionOKLocation from struct{}.
func NewNullCreateTalkSessionOKLocation(v struct{}) CreateTalkSessionOKLocation {
	var s CreateTalkSessionOKLocation
	s.SetNull(v)
	return s
}

type CreateTalkSessionOKLocation0 struct {
	// 緯度.
	Latitude float64 `json:"latitude"`
	// 経度.
	Longitude float64 `json:"longitude"`
	// 都道府県.
	Prefecture string `json:"prefecture"`
	// 市区町村.
	City string `json:"city"`
}

// GetLatitude returns the value of Latitude.
func (s *CreateTalkSessionOKLocation0) GetLatitude() float64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *CreateTalkSessionOKLocation0) GetLongitude() float64 {
	return s.Longitude
}

// GetPrefecture returns the value of Prefecture.
func (s *CreateTalkSessionOKLocation0) GetPrefecture() string {
	return s.Prefecture
}

// GetCity returns the value of City.
func (s *CreateTalkSessionOKLocation0) GetCity() string {
	return s.City
}

// SetLatitude sets the value of Latitude.
func (s *CreateTalkSessionOKLocation0) SetLatitude(val float64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *CreateTalkSessionOKLocation0) SetLongitude(val float64) {
	s.Longitude = val
}

// SetPrefecture sets the value of Prefecture.
func (s *CreateTalkSessionOKLocation0) SetPrefecture(val string) {
	s.Prefecture = val
}

// SetCity sets the value of City.
func (s *CreateTalkSessionOKLocation0) SetCity(val string) {
	s.City = val
}

// 作成ユーザー.
type CreateTalkSessionOKOwner struct {
	DisplayID   string    `json:"displayID"`
	DisplayName string    `json:"displayName"`
	IconURL     OptString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *CreateTalkSessionOKOwner) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *CreateTalkSessionOKOwner) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *CreateTalkSessionOKOwner) GetIconURL() OptString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *CreateTalkSessionOKOwner) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *CreateTalkSessionOKOwner) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *CreateTalkSessionOKOwner) SetIconURL(val OptString) {
	s.IconURL = val
}

type CreateTalkSessionReq struct {
	Theme            string    `json:"theme"`
	ScheduledEndTime time.Time `json:"scheduledEndTime"`
	// 緯度.
	Latitude OptNilFloat64 `json:"latitude"`
	// 経度.
	Longitude OptNilFloat64 `json:"longitude"`
}

// GetTheme returns the value of Theme.
func (s *CreateTalkSessionReq) GetTheme() string {
	return s.Theme
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *CreateTalkSessionReq) GetScheduledEndTime() time.Time {
	return s.ScheduledEndTime
}

// GetLatitude returns the value of Latitude.
func (s *CreateTalkSessionReq) GetLatitude() OptNilFloat64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *CreateTalkSessionReq) GetLongitude() OptNilFloat64 {
	return s.Longitude
}

// SetTheme sets the value of Theme.
func (s *CreateTalkSessionReq) SetTheme(val string) {
	s.Theme = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *CreateTalkSessionReq) SetScheduledEndTime(val time.Time) {
	s.ScheduledEndTime = val
}

// SetLatitude sets the value of Latitude.
func (s *CreateTalkSessionReq) SetLatitude(val OptNilFloat64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *CreateTalkSessionReq) SetLongitude(val OptNilFloat64) {
	s.Longitude = val
}

type EditUserProfileInternalServerError struct{}

func (*EditUserProfileInternalServerError) editUserProfileRes() {}

type EditUserProfileOK struct {
	DisplayID   string    `json:"displayID"`
	DisplayName string    `json:"displayName"`
	IconURL     OptString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *EditUserProfileOK) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *EditUserProfileOK) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *EditUserProfileOK) GetIconURL() OptString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *EditUserProfileOK) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *EditUserProfileOK) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *EditUserProfileOK) SetIconURL(val OptString) {
	s.IconURL = val
}

func (*EditUserProfileOK) editUserProfileRes() {}

type EditUserProfileReq struct {
	// ユーザー名.
	DisplayName OptNilString `json:"displayName"`
	// ユーザーアイコン.
	Icon OptMultipartFile `json:"icon"`
	// 生まれ年.
	YearOfBirth OptNilInt `json:"yearOfBirth"`
	// 性別.
	Gender OptNilEditUserProfileReqGender `json:"gender"`
	// 市区町村.
	Municipality OptNilString `json:"municipality"`
	// 職業.
	Occupation OptNilEditUserProfileReqOccupation `json:"occupation"`
	// 世帯人数.
	HouseholdSize OptNilInt `json:"householdSize"`
}

// GetDisplayName returns the value of DisplayName.
func (s *EditUserProfileReq) GetDisplayName() OptNilString {
	return s.DisplayName
}

// GetIcon returns the value of Icon.
func (s *EditUserProfileReq) GetIcon() OptMultipartFile {
	return s.Icon
}

// GetYearOfBirth returns the value of YearOfBirth.
func (s *EditUserProfileReq) GetYearOfBirth() OptNilInt {
	return s.YearOfBirth
}

// GetGender returns the value of Gender.
func (s *EditUserProfileReq) GetGender() OptNilEditUserProfileReqGender {
	return s.Gender
}

// GetMunicipality returns the value of Municipality.
func (s *EditUserProfileReq) GetMunicipality() OptNilString {
	return s.Municipality
}

// GetOccupation returns the value of Occupation.
func (s *EditUserProfileReq) GetOccupation() OptNilEditUserProfileReqOccupation {
	return s.Occupation
}

// GetHouseholdSize returns the value of HouseholdSize.
func (s *EditUserProfileReq) GetHouseholdSize() OptNilInt {
	return s.HouseholdSize
}

// SetDisplayName sets the value of DisplayName.
func (s *EditUserProfileReq) SetDisplayName(val OptNilString) {
	s.DisplayName = val
}

// SetIcon sets the value of Icon.
func (s *EditUserProfileReq) SetIcon(val OptMultipartFile) {
	s.Icon = val
}

// SetYearOfBirth sets the value of YearOfBirth.
func (s *EditUserProfileReq) SetYearOfBirth(val OptNilInt) {
	s.YearOfBirth = val
}

// SetGender sets the value of Gender.
func (s *EditUserProfileReq) SetGender(val OptNilEditUserProfileReqGender) {
	s.Gender = val
}

// SetMunicipality sets the value of Municipality.
func (s *EditUserProfileReq) SetMunicipality(val OptNilString) {
	s.Municipality = val
}

// SetOccupation sets the value of Occupation.
func (s *EditUserProfileReq) SetOccupation(val OptNilEditUserProfileReqOccupation) {
	s.Occupation = val
}

// SetHouseholdSize sets the value of HouseholdSize.
func (s *EditUserProfileReq) SetHouseholdSize(val OptNilInt) {
	s.HouseholdSize = val
}

// 性別.
type EditUserProfileReqGender string

const (
	EditUserProfileReqGenderMale           EditUserProfileReqGender = "male"
	EditUserProfileReqGenderFemale         EditUserProfileReqGender = "female"
	EditUserProfileReqGenderOther          EditUserProfileReqGender = "other"
	EditUserProfileReqGenderPreferNotToSay EditUserProfileReqGender = "preferNotToSay"
)

// AllValues returns all EditUserProfileReqGender values.
func (EditUserProfileReqGender) AllValues() []EditUserProfileReqGender {
	return []EditUserProfileReqGender{
		EditUserProfileReqGenderMale,
		EditUserProfileReqGenderFemale,
		EditUserProfileReqGenderOther,
		EditUserProfileReqGenderPreferNotToSay,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s EditUserProfileReqGender) MarshalText() ([]byte, error) {
	switch s {
	case EditUserProfileReqGenderMale:
		return []byte(s), nil
	case EditUserProfileReqGenderFemale:
		return []byte(s), nil
	case EditUserProfileReqGenderOther:
		return []byte(s), nil
	case EditUserProfileReqGenderPreferNotToSay:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EditUserProfileReqGender) UnmarshalText(data []byte) error {
	switch EditUserProfileReqGender(data) {
	case EditUserProfileReqGenderMale:
		*s = EditUserProfileReqGenderMale
		return nil
	case EditUserProfileReqGenderFemale:
		*s = EditUserProfileReqGenderFemale
		return nil
	case EditUserProfileReqGenderOther:
		*s = EditUserProfileReqGenderOther
		return nil
	case EditUserProfileReqGenderPreferNotToSay:
		*s = EditUserProfileReqGenderPreferNotToSay
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 職業.
type EditUserProfileReqOccupation string

const (
	EditUserProfileReqOccupation_0  EditUserProfileReqOccupation = "正社員"
	EditUserProfileReqOccupation_1  EditUserProfileReqOccupation = "契約社員"
	EditUserProfileReqOccupation_2  EditUserProfileReqOccupation = "公務員"
	EditUserProfileReqOccupation_3  EditUserProfileReqOccupation = "自営業"
	EditUserProfileReqOccupation_4  EditUserProfileReqOccupation = "会社役員"
	EditUserProfileReqOccupation_5  EditUserProfileReqOccupation = "パート・アルバイト"
	EditUserProfileReqOccupation_6  EditUserProfileReqOccupation = "家事従事者"
	EditUserProfileReqOccupation_7  EditUserProfileReqOccupation = "学生"
	EditUserProfileReqOccupation_8  EditUserProfileReqOccupation = "無職"
	EditUserProfileReqOccupation_9  EditUserProfileReqOccupation = "その他"
	EditUserProfileReqOccupation_10 EditUserProfileReqOccupation = "無回答"
)

// AllValues returns all EditUserProfileReqOccupation values.
func (EditUserProfileReqOccupation) AllValues() []EditUserProfileReqOccupation {
	return []EditUserProfileReqOccupation{
		EditUserProfileReqOccupation_0,
		EditUserProfileReqOccupation_1,
		EditUserProfileReqOccupation_2,
		EditUserProfileReqOccupation_3,
		EditUserProfileReqOccupation_4,
		EditUserProfileReqOccupation_5,
		EditUserProfileReqOccupation_6,
		EditUserProfileReqOccupation_7,
		EditUserProfileReqOccupation_8,
		EditUserProfileReqOccupation_9,
		EditUserProfileReqOccupation_10,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s EditUserProfileReqOccupation) MarshalText() ([]byte, error) {
	switch s {
	case EditUserProfileReqOccupation_0:
		return []byte(s), nil
	case EditUserProfileReqOccupation_1:
		return []byte(s), nil
	case EditUserProfileReqOccupation_2:
		return []byte(s), nil
	case EditUserProfileReqOccupation_3:
		return []byte(s), nil
	case EditUserProfileReqOccupation_4:
		return []byte(s), nil
	case EditUserProfileReqOccupation_5:
		return []byte(s), nil
	case EditUserProfileReqOccupation_6:
		return []byte(s), nil
	case EditUserProfileReqOccupation_7:
		return []byte(s), nil
	case EditUserProfileReqOccupation_8:
		return []byte(s), nil
	case EditUserProfileReqOccupation_9:
		return []byte(s), nil
	case EditUserProfileReqOccupation_10:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EditUserProfileReqOccupation) UnmarshalText(data []byte) error {
	switch EditUserProfileReqOccupation(data) {
	case EditUserProfileReqOccupation_0:
		*s = EditUserProfileReqOccupation_0
		return nil
	case EditUserProfileReqOccupation_1:
		*s = EditUserProfileReqOccupation_1
		return nil
	case EditUserProfileReqOccupation_2:
		*s = EditUserProfileReqOccupation_2
		return nil
	case EditUserProfileReqOccupation_3:
		*s = EditUserProfileReqOccupation_3
		return nil
	case EditUserProfileReqOccupation_4:
		*s = EditUserProfileReqOccupation_4
		return nil
	case EditUserProfileReqOccupation_5:
		*s = EditUserProfileReqOccupation_5
		return nil
	case EditUserProfileReqOccupation_6:
		*s = EditUserProfileReqOccupation_6
		return nil
	case EditUserProfileReqOccupation_7:
		*s = EditUserProfileReqOccupation_7
		return nil
	case EditUserProfileReqOccupation_8:
		*s = EditUserProfileReqOccupation_8
		return nil
	case EditUserProfileReqOccupation_9:
		*s = EditUserProfileReqOccupation_9
		return nil
	case EditUserProfileReqOccupation_10:
		*s = EditUserProfileReqOccupation_10
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetTalkSessionDetailOK struct {
	// トークセッションID.
	ID string `json:"id"`
	// テーマ.
	Theme string `json:"theme"`
	// 作成ユーザー.
	Owner GetTalkSessionDetailOKOwner `json:"owner"`
	// 作成日時.
	CreatedAt string `json:"createdAt"`
	// 終了日時.
	FinishedAt OptString `json:"finishedAt"`
	// 終了予定日時.
	ScheduledEndTime string `json:"scheduledEndTime"`
	// 位置情報.
	Location OptGetTalkSessionDetailOKLocation `json:"location"`
}

// GetID returns the value of ID.
func (s *GetTalkSessionDetailOK) GetID() string {
	return s.ID
}

// GetTheme returns the value of Theme.
func (s *GetTalkSessionDetailOK) GetTheme() string {
	return s.Theme
}

// GetOwner returns the value of Owner.
func (s *GetTalkSessionDetailOK) GetOwner() GetTalkSessionDetailOKOwner {
	return s.Owner
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetTalkSessionDetailOK) GetCreatedAt() string {
	return s.CreatedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *GetTalkSessionDetailOK) GetFinishedAt() OptString {
	return s.FinishedAt
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *GetTalkSessionDetailOK) GetScheduledEndTime() string {
	return s.ScheduledEndTime
}

// GetLocation returns the value of Location.
func (s *GetTalkSessionDetailOK) GetLocation() OptGetTalkSessionDetailOKLocation {
	return s.Location
}

// SetID sets the value of ID.
func (s *GetTalkSessionDetailOK) SetID(val string) {
	s.ID = val
}

// SetTheme sets the value of Theme.
func (s *GetTalkSessionDetailOK) SetTheme(val string) {
	s.Theme = val
}

// SetOwner sets the value of Owner.
func (s *GetTalkSessionDetailOK) SetOwner(val GetTalkSessionDetailOKOwner) {
	s.Owner = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetTalkSessionDetailOK) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *GetTalkSessionDetailOK) SetFinishedAt(val OptString) {
	s.FinishedAt = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *GetTalkSessionDetailOK) SetScheduledEndTime(val string) {
	s.ScheduledEndTime = val
}

// SetLocation sets the value of Location.
func (s *GetTalkSessionDetailOK) SetLocation(val OptGetTalkSessionDetailOKLocation) {
	s.Location = val
}

// 位置情報.
// GetTalkSessionDetailOKLocation represents sum type.
type GetTalkSessionDetailOKLocation struct {
	Type                            GetTalkSessionDetailOKLocationType // switch on this field
	GetTalkSessionDetailOKLocation0 GetTalkSessionDetailOKLocation0
	Null                            struct{}
}

// GetTalkSessionDetailOKLocationType is oneOf type of GetTalkSessionDetailOKLocation.
type GetTalkSessionDetailOKLocationType string

// Possible values for GetTalkSessionDetailOKLocationType.
const (
	GetTalkSessionDetailOKLocation0GetTalkSessionDetailOKLocation GetTalkSessionDetailOKLocationType = "GetTalkSessionDetailOKLocation0"
	NullGetTalkSessionDetailOKLocation                            GetTalkSessionDetailOKLocationType = "struct{}"
)

// IsGetTalkSessionDetailOKLocation0 reports whether GetTalkSessionDetailOKLocation is GetTalkSessionDetailOKLocation0.
func (s GetTalkSessionDetailOKLocation) IsGetTalkSessionDetailOKLocation0() bool {
	return s.Type == GetTalkSessionDetailOKLocation0GetTalkSessionDetailOKLocation
}

// IsNull reports whether GetTalkSessionDetailOKLocation is struct{}.
func (s GetTalkSessionDetailOKLocation) IsNull() bool {
	return s.Type == NullGetTalkSessionDetailOKLocation
}

// SetGetTalkSessionDetailOKLocation0 sets GetTalkSessionDetailOKLocation to GetTalkSessionDetailOKLocation0.
func (s *GetTalkSessionDetailOKLocation) SetGetTalkSessionDetailOKLocation0(v GetTalkSessionDetailOKLocation0) {
	s.Type = GetTalkSessionDetailOKLocation0GetTalkSessionDetailOKLocation
	s.GetTalkSessionDetailOKLocation0 = v
}

// GetGetTalkSessionDetailOKLocation0 returns GetTalkSessionDetailOKLocation0 and true boolean if GetTalkSessionDetailOKLocation is GetTalkSessionDetailOKLocation0.
func (s GetTalkSessionDetailOKLocation) GetGetTalkSessionDetailOKLocation0() (v GetTalkSessionDetailOKLocation0, ok bool) {
	if !s.IsGetTalkSessionDetailOKLocation0() {
		return v, false
	}
	return s.GetTalkSessionDetailOKLocation0, true
}

// NewGetTalkSessionDetailOKLocation0GetTalkSessionDetailOKLocation returns new GetTalkSessionDetailOKLocation from GetTalkSessionDetailOKLocation0.
func NewGetTalkSessionDetailOKLocation0GetTalkSessionDetailOKLocation(v GetTalkSessionDetailOKLocation0) GetTalkSessionDetailOKLocation {
	var s GetTalkSessionDetailOKLocation
	s.SetGetTalkSessionDetailOKLocation0(v)
	return s
}

// SetNull sets GetTalkSessionDetailOKLocation to struct{}.
func (s *GetTalkSessionDetailOKLocation) SetNull(v struct{}) {
	s.Type = NullGetTalkSessionDetailOKLocation
	s.Null = v
}

// GetNull returns struct{} and true boolean if GetTalkSessionDetailOKLocation is struct{}.
func (s GetTalkSessionDetailOKLocation) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullGetTalkSessionDetailOKLocation returns new GetTalkSessionDetailOKLocation from struct{}.
func NewNullGetTalkSessionDetailOKLocation(v struct{}) GetTalkSessionDetailOKLocation {
	var s GetTalkSessionDetailOKLocation
	s.SetNull(v)
	return s
}

type GetTalkSessionDetailOKLocation0 struct {
	// 緯度.
	Latitude float64 `json:"latitude"`
	// 経度.
	Longitude float64 `json:"longitude"`
	// 都道府県.
	Prefecture string `json:"prefecture"`
	// 市区町村.
	City string `json:"city"`
}

// GetLatitude returns the value of Latitude.
func (s *GetTalkSessionDetailOKLocation0) GetLatitude() float64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *GetTalkSessionDetailOKLocation0) GetLongitude() float64 {
	return s.Longitude
}

// GetPrefecture returns the value of Prefecture.
func (s *GetTalkSessionDetailOKLocation0) GetPrefecture() string {
	return s.Prefecture
}

// GetCity returns the value of City.
func (s *GetTalkSessionDetailOKLocation0) GetCity() string {
	return s.City
}

// SetLatitude sets the value of Latitude.
func (s *GetTalkSessionDetailOKLocation0) SetLatitude(val float64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *GetTalkSessionDetailOKLocation0) SetLongitude(val float64) {
	s.Longitude = val
}

// SetPrefecture sets the value of Prefecture.
func (s *GetTalkSessionDetailOKLocation0) SetPrefecture(val string) {
	s.Prefecture = val
}

// SetCity sets the value of City.
func (s *GetTalkSessionDetailOKLocation0) SetCity(val string) {
	s.City = val
}

// 作成ユーザー.
type GetTalkSessionDetailOKOwner struct {
	DisplayID   string    `json:"displayID"`
	DisplayName string    `json:"displayName"`
	IconURL     OptString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *GetTalkSessionDetailOKOwner) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetTalkSessionDetailOKOwner) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *GetTalkSessionDetailOKOwner) GetIconURL() OptString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *GetTalkSessionDetailOKOwner) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetTalkSessionDetailOKOwner) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *GetTalkSessionDetailOKOwner) SetIconURL(val OptString) {
	s.IconURL = val
}

type GetTalkSessionListInternalServerError struct{}

func (*GetTalkSessionListInternalServerError) getTalkSessionListRes() {}

type GetTalkSessionListOK struct {
	TalkSessions []GetTalkSessionListOKTalkSessionsItem `json:"talkSessions"`
}

// GetTalkSessions returns the value of TalkSessions.
func (s *GetTalkSessionListOK) GetTalkSessions() []GetTalkSessionListOKTalkSessionsItem {
	return s.TalkSessions
}

// SetTalkSessions sets the value of TalkSessions.
func (s *GetTalkSessionListOK) SetTalkSessions(val []GetTalkSessionListOKTalkSessionsItem) {
	s.TalkSessions = val
}

func (*GetTalkSessionListOK) getTalkSessionListRes() {}

type GetTalkSessionListOKTalkSessionsItem struct {
	TalkSession  GetTalkSessionListOKTalkSessionsItemTalkSession `json:"talkSession"`
	OpinionCount int                                             `json:"opinionCount"`
}

// GetTalkSession returns the value of TalkSession.
func (s *GetTalkSessionListOKTalkSessionsItem) GetTalkSession() GetTalkSessionListOKTalkSessionsItemTalkSession {
	return s.TalkSession
}

// GetOpinionCount returns the value of OpinionCount.
func (s *GetTalkSessionListOKTalkSessionsItem) GetOpinionCount() int {
	return s.OpinionCount
}

// SetTalkSession sets the value of TalkSession.
func (s *GetTalkSessionListOKTalkSessionsItem) SetTalkSession(val GetTalkSessionListOKTalkSessionsItemTalkSession) {
	s.TalkSession = val
}

// SetOpinionCount sets the value of OpinionCount.
func (s *GetTalkSessionListOKTalkSessionsItem) SetOpinionCount(val int) {
	s.OpinionCount = val
}

type GetTalkSessionListOKTalkSessionsItemTalkSession struct {
	// トークセッションID.
	ID string `json:"id"`
	// テーマ.
	Theme string `json:"theme"`
	// 作成ユーザー.
	Owner GetTalkSessionListOKTalkSessionsItemTalkSessionOwner `json:"owner"`
	// 作成日時.
	CreatedAt string `json:"createdAt"`
	// 終了日時.
	FinishedAt OptString `json:"finishedAt"`
	// 終了予定日時.
	ScheduledEndTime string `json:"scheduledEndTime"`
	// 位置情報.
	Location OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation `json:"location"`
}

// GetID returns the value of ID.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetID() string {
	return s.ID
}

// GetTheme returns the value of Theme.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetTheme() string {
	return s.Theme
}

// GetOwner returns the value of Owner.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetOwner() GetTalkSessionListOKTalkSessionsItemTalkSessionOwner {
	return s.Owner
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetCreatedAt() string {
	return s.CreatedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetFinishedAt() OptString {
	return s.FinishedAt
}

// GetScheduledEndTime returns the value of ScheduledEndTime.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetScheduledEndTime() string {
	return s.ScheduledEndTime
}

// GetLocation returns the value of Location.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) GetLocation() OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation {
	return s.Location
}

// SetID sets the value of ID.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetID(val string) {
	s.ID = val
}

// SetTheme sets the value of Theme.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetTheme(val string) {
	s.Theme = val
}

// SetOwner sets the value of Owner.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetOwner(val GetTalkSessionListOKTalkSessionsItemTalkSessionOwner) {
	s.Owner = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetFinishedAt(val OptString) {
	s.FinishedAt = val
}

// SetScheduledEndTime sets the value of ScheduledEndTime.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetScheduledEndTime(val string) {
	s.ScheduledEndTime = val
}

// SetLocation sets the value of Location.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSession) SetLocation(val OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation) {
	s.Location = val
}

// 位置情報.
// GetTalkSessionListOKTalkSessionsItemTalkSessionLocation represents sum type.
type GetTalkSessionListOKTalkSessionsItemTalkSessionLocation struct {
	Type                                                     GetTalkSessionListOKTalkSessionsItemTalkSessionLocationType // switch on this field
	GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0 GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0
	Null                                                     struct{}
}

// GetTalkSessionListOKTalkSessionsItemTalkSessionLocationType is oneOf type of GetTalkSessionListOKTalkSessionsItemTalkSessionLocation.
type GetTalkSessionListOKTalkSessionsItemTalkSessionLocationType string

// Possible values for GetTalkSessionListOKTalkSessionsItemTalkSessionLocationType.
const (
	GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0GetTalkSessionListOKTalkSessionsItemTalkSessionLocation GetTalkSessionListOKTalkSessionsItemTalkSessionLocationType = "GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0"
	NullGetTalkSessionListOKTalkSessionsItemTalkSessionLocation                                                     GetTalkSessionListOKTalkSessionsItemTalkSessionLocationType = "struct{}"
)

// IsGetTalkSessionListOKTalkSessionsItemTalkSessionLocation0 reports whether GetTalkSessionListOKTalkSessionsItemTalkSessionLocation is GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0.
func (s GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) IsGetTalkSessionListOKTalkSessionsItemTalkSessionLocation0() bool {
	return s.Type == GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0GetTalkSessionListOKTalkSessionsItemTalkSessionLocation
}

// IsNull reports whether GetTalkSessionListOKTalkSessionsItemTalkSessionLocation is struct{}.
func (s GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) IsNull() bool {
	return s.Type == NullGetTalkSessionListOKTalkSessionsItemTalkSessionLocation
}

// SetGetTalkSessionListOKTalkSessionsItemTalkSessionLocation0 sets GetTalkSessionListOKTalkSessionsItemTalkSessionLocation to GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) SetGetTalkSessionListOKTalkSessionsItemTalkSessionLocation0(v GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0) {
	s.Type = GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0GetTalkSessionListOKTalkSessionsItemTalkSessionLocation
	s.GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0 = v
}

// GetGetTalkSessionListOKTalkSessionsItemTalkSessionLocation0 returns GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0 and true boolean if GetTalkSessionListOKTalkSessionsItemTalkSessionLocation is GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0.
func (s GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) GetGetTalkSessionListOKTalkSessionsItemTalkSessionLocation0() (v GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0, ok bool) {
	if !s.IsGetTalkSessionListOKTalkSessionsItemTalkSessionLocation0() {
		return v, false
	}
	return s.GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0, true
}

// NewGetTalkSessionListOKTalkSessionsItemTalkSessionLocation0GetTalkSessionListOKTalkSessionsItemTalkSessionLocation returns new GetTalkSessionListOKTalkSessionsItemTalkSessionLocation from GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0.
func NewGetTalkSessionListOKTalkSessionsItemTalkSessionLocation0GetTalkSessionListOKTalkSessionsItemTalkSessionLocation(v GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0) GetTalkSessionListOKTalkSessionsItemTalkSessionLocation {
	var s GetTalkSessionListOKTalkSessionsItemTalkSessionLocation
	s.SetGetTalkSessionListOKTalkSessionsItemTalkSessionLocation0(v)
	return s
}

// SetNull sets GetTalkSessionListOKTalkSessionsItemTalkSessionLocation to struct{}.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) SetNull(v struct{}) {
	s.Type = NullGetTalkSessionListOKTalkSessionsItemTalkSessionLocation
	s.Null = v
}

// GetNull returns struct{} and true boolean if GetTalkSessionListOKTalkSessionsItemTalkSessionLocation is struct{}.
func (s GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullGetTalkSessionListOKTalkSessionsItemTalkSessionLocation returns new GetTalkSessionListOKTalkSessionsItemTalkSessionLocation from struct{}.
func NewNullGetTalkSessionListOKTalkSessionsItemTalkSessionLocation(v struct{}) GetTalkSessionListOKTalkSessionsItemTalkSessionLocation {
	var s GetTalkSessionListOKTalkSessionsItemTalkSessionLocation
	s.SetNull(v)
	return s
}

type GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0 struct {
	// 緯度.
	Latitude float64 `json:"latitude"`
	// 経度.
	Longitude float64 `json:"longitude"`
	// 都道府県.
	Prefecture string `json:"prefecture"`
	// 市区町村.
	City string `json:"city"`
}

// GetLatitude returns the value of Latitude.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0) GetLatitude() float64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0) GetLongitude() float64 {
	return s.Longitude
}

// GetPrefecture returns the value of Prefecture.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0) GetPrefecture() string {
	return s.Prefecture
}

// GetCity returns the value of City.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0) GetCity() string {
	return s.City
}

// SetLatitude sets the value of Latitude.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0) SetLatitude(val float64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0) SetLongitude(val float64) {
	s.Longitude = val
}

// SetPrefecture sets the value of Prefecture.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0) SetPrefecture(val string) {
	s.Prefecture = val
}

// SetCity sets the value of City.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionLocation0) SetCity(val string) {
	s.City = val
}

// 作成ユーザー.
type GetTalkSessionListOKTalkSessionsItemTalkSessionOwner struct {
	DisplayID   string    `json:"displayID"`
	DisplayName string    `json:"displayName"`
	IconURL     OptString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionOwner) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionOwner) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionOwner) GetIconURL() OptString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionOwner) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionOwner) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *GetTalkSessionListOKTalkSessionsItemTalkSessionOwner) SetIconURL(val OptString) {
	s.IconURL = val
}

type GetTalkSessionListStatus string

const (
	GetTalkSessionListStatusOpen     GetTalkSessionListStatus = "open"
	GetTalkSessionListStatusFinished GetTalkSessionListStatus = "finished"
)

// AllValues returns all GetTalkSessionListStatus values.
func (GetTalkSessionListStatus) AllValues() []GetTalkSessionListStatus {
	return []GetTalkSessionListStatus{
		GetTalkSessionListStatusOpen,
		GetTalkSessionListStatusFinished,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetTalkSessionListStatus) MarshalText() ([]byte, error) {
	switch s {
	case GetTalkSessionListStatusOpen:
		return []byte(s), nil
	case GetTalkSessionListStatusFinished:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetTalkSessionListStatus) UnmarshalText(data []byte) error {
	switch GetTalkSessionListStatus(data) {
	case GetTalkSessionListStatusOpen:
		*s = GetTalkSessionListStatusOpen
		return nil
	case GetTalkSessionListStatusFinished:
		*s = GetTalkSessionListStatusFinished
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetTopOpinionsInternalServerError struct{}

func (*GetTopOpinionsInternalServerError) getTopOpinionsRes() {}

type GetTopOpinionsOK struct{}

func (*GetTopOpinionsOK) getTopOpinionsRes() {}

type GetUserProfileOK struct {
	DisplayID   string    `json:"displayID"`
	DisplayName string    `json:"displayName"`
	IconURL     OptString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *GetUserProfileOK) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetUserProfileOK) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *GetUserProfileOK) GetIconURL() OptString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *GetUserProfileOK) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetUserProfileOK) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *GetUserProfileOK) SetIconURL(val OptString) {
	s.IconURL = val
}

type ListOpinionsInternalServerError struct{}

func (*ListOpinionsInternalServerError) listOpinionsRes() {}

type ListOpinionsOKApplicationJSON []ListOpinionsOKItem

func (*ListOpinionsOKApplicationJSON) listOpinionsRes() {}

type ListOpinionsOKItem struct {
	Opinion ListOpinionsOKItemOpinion `json:"opinion"`
	// 作成ユーザー.
	User         ListOpinionsOKItemUser `json:"user"`
	CommentCount string                 `json:"commentCount"`
}

// GetOpinion returns the value of Opinion.
func (s *ListOpinionsOKItem) GetOpinion() ListOpinionsOKItemOpinion {
	return s.Opinion
}

// GetUser returns the value of User.
func (s *ListOpinionsOKItem) GetUser() ListOpinionsOKItemUser {
	return s.User
}

// GetCommentCount returns the value of CommentCount.
func (s *ListOpinionsOKItem) GetCommentCount() string {
	return s.CommentCount
}

// SetOpinion sets the value of Opinion.
func (s *ListOpinionsOKItem) SetOpinion(val ListOpinionsOKItemOpinion) {
	s.Opinion = val
}

// SetUser sets the value of User.
func (s *ListOpinionsOKItem) SetUser(val ListOpinionsOKItemUser) {
	s.User = val
}

// SetCommentCount sets the value of CommentCount.
func (s *ListOpinionsOKItem) SetCommentCount(val string) {
	s.CommentCount = val
}

type ListOpinionsOKItemOpinion struct {
	// 意見ID.
	ID    string    `json:"id"`
	Title OptString `json:"title"`
	// 意見のテキスト.
	Content string `json:"content"`
	// 親の意見ID。ルートならば無し.
	ParentID OptString `json:"parentID"`
	// 意見投稿主の意見.
	VoteType ListOpinionsOKItemOpinionVoteType `json:"voteType"`
	// 画像が返る場合もある.
	PictureURL OptString `json:"pictureURL"`
	// 参考文献URL.
	ReferenceURL OptString `json:"referenceURL"`
}

// GetID returns the value of ID.
func (s *ListOpinionsOKItemOpinion) GetID() string {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *ListOpinionsOKItemOpinion) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *ListOpinionsOKItemOpinion) GetContent() string {
	return s.Content
}

// GetParentID returns the value of ParentID.
func (s *ListOpinionsOKItemOpinion) GetParentID() OptString {
	return s.ParentID
}

// GetVoteType returns the value of VoteType.
func (s *ListOpinionsOKItemOpinion) GetVoteType() ListOpinionsOKItemOpinionVoteType {
	return s.VoteType
}

// GetPictureURL returns the value of PictureURL.
func (s *ListOpinionsOKItemOpinion) GetPictureURL() OptString {
	return s.PictureURL
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *ListOpinionsOKItemOpinion) GetReferenceURL() OptString {
	return s.ReferenceURL
}

// SetID sets the value of ID.
func (s *ListOpinionsOKItemOpinion) SetID(val string) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *ListOpinionsOKItemOpinion) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *ListOpinionsOKItemOpinion) SetContent(val string) {
	s.Content = val
}

// SetParentID sets the value of ParentID.
func (s *ListOpinionsOKItemOpinion) SetParentID(val OptString) {
	s.ParentID = val
}

// SetVoteType sets the value of VoteType.
func (s *ListOpinionsOKItemOpinion) SetVoteType(val ListOpinionsOKItemOpinionVoteType) {
	s.VoteType = val
}

// SetPictureURL sets the value of PictureURL.
func (s *ListOpinionsOKItemOpinion) SetPictureURL(val OptString) {
	s.PictureURL = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *ListOpinionsOKItemOpinion) SetReferenceURL(val OptString) {
	s.ReferenceURL = val
}

// 意見投稿主の意見.
type ListOpinionsOKItemOpinionVoteType string

const (
	ListOpinionsOKItemOpinionVoteTypeAgree    ListOpinionsOKItemOpinionVoteType = "agree"
	ListOpinionsOKItemOpinionVoteTypeDisagree ListOpinionsOKItemOpinionVoteType = "disagree"
	ListOpinionsOKItemOpinionVoteTypePass     ListOpinionsOKItemOpinionVoteType = "pass"
)

// AllValues returns all ListOpinionsOKItemOpinionVoteType values.
func (ListOpinionsOKItemOpinionVoteType) AllValues() []ListOpinionsOKItemOpinionVoteType {
	return []ListOpinionsOKItemOpinionVoteType{
		ListOpinionsOKItemOpinionVoteTypeAgree,
		ListOpinionsOKItemOpinionVoteTypeDisagree,
		ListOpinionsOKItemOpinionVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ListOpinionsOKItemOpinionVoteType) MarshalText() ([]byte, error) {
	switch s {
	case ListOpinionsOKItemOpinionVoteTypeAgree:
		return []byte(s), nil
	case ListOpinionsOKItemOpinionVoteTypeDisagree:
		return []byte(s), nil
	case ListOpinionsOKItemOpinionVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ListOpinionsOKItemOpinionVoteType) UnmarshalText(data []byte) error {
	switch ListOpinionsOKItemOpinionVoteType(data) {
	case ListOpinionsOKItemOpinionVoteTypeAgree:
		*s = ListOpinionsOKItemOpinionVoteTypeAgree
		return nil
	case ListOpinionsOKItemOpinionVoteTypeDisagree:
		*s = ListOpinionsOKItemOpinionVoteTypeDisagree
		return nil
	case ListOpinionsOKItemOpinionVoteTypePass:
		*s = ListOpinionsOKItemOpinionVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 作成ユーザー.
type ListOpinionsOKItemUser struct {
	DisplayID   string    `json:"displayID"`
	DisplayName string    `json:"displayName"`
	IconURL     OptString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *ListOpinionsOKItemUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *ListOpinionsOKItemUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *ListOpinionsOKItemUser) GetIconURL() OptString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *ListOpinionsOKItemUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListOpinionsOKItemUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *ListOpinionsOKItemUser) SetIconURL(val OptString) {
	s.IconURL = val
}

// NewNilRegisterUserReqGender returns new NilRegisterUserReqGender with value set to v.
func NewNilRegisterUserReqGender(v RegisterUserReqGender) NilRegisterUserReqGender {
	return NilRegisterUserReqGender{
		Value: v,
	}
}

// NilRegisterUserReqGender is nullable RegisterUserReqGender.
type NilRegisterUserReqGender struct {
	Value RegisterUserReqGender
	Null  bool
}

// SetTo sets value to v.
func (o *NilRegisterUserReqGender) SetTo(v RegisterUserReqGender) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilRegisterUserReqGender) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilRegisterUserReqGender) SetToNull() {
	o.Null = true
	var v RegisterUserReqGender
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilRegisterUserReqGender) Get() (v RegisterUserReqGender, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilRegisterUserReqGender) Or(d RegisterUserReqGender) RegisterUserReqGender {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilRegisterUserReqOccupation returns new NilRegisterUserReqOccupation with value set to v.
func NewNilRegisterUserReqOccupation(v RegisterUserReqOccupation) NilRegisterUserReqOccupation {
	return NilRegisterUserReqOccupation{
		Value: v,
	}
}

// NilRegisterUserReqOccupation is nullable RegisterUserReqOccupation.
type NilRegisterUserReqOccupation struct {
	Value RegisterUserReqOccupation
	Null  bool
}

// SetTo sets value to v.
func (o *NilRegisterUserReqOccupation) SetTo(v RegisterUserReqOccupation) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilRegisterUserReqOccupation) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilRegisterUserReqOccupation) SetToNull() {
	o.Null = true
	var v RegisterUserReqOccupation
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilRegisterUserReqOccupation) Get() (v RegisterUserReqOccupation, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilRegisterUserReqOccupation) Or(d RegisterUserReqOccupation) RegisterUserReqOccupation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// OAuthCallbackFound is response for OAuthCallback operation.
type OAuthCallbackFound struct {
	Location  OptURI
	SetCookie OptString
}

// GetLocation returns the value of Location.
func (s *OAuthCallbackFound) GetLocation() OptURI {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *OAuthCallbackFound) GetSetCookie() OptString {
	return s.SetCookie
}

// SetLocation sets the value of Location.
func (s *OAuthCallbackFound) SetLocation(val OptURI) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *OAuthCallbackFound) SetSetCookie(val OptString) {
	s.SetCookie = val
}

type OAuthRevokeNoContent struct{}

func (*OAuthRevokeNoContent) oAuthRevokeRes() {}

// OAuthRevokeUnauthorized is response for OAuthRevoke operation.
type OAuthRevokeUnauthorized struct{}

func (*OAuthRevokeUnauthorized) oAuthRevokeRes() {}

type OAuthTokenInfoOK struct {
	// Audience.
	Aud string `json:"aud"`
	// 有効期限.
	Exp string `json:"exp"`
	// 発行日時.
	Iat string `json:"iat"`
	// 発行者.
	Iss string `json:"iss"`
	// ユーザID.
	Sub string `json:"sub"`
	// JWT ID.
	Jti string `json:"jti"`
	// 表示用ユーザID.
	DisplayId OptNilString `json:"displayId"`
	// 表示名.
	DisplayName OptNilString `json:"displayName"`
	// アイコンURL.
	IconURL OptNilString `json:"iconURL"`
	// ユーザー登録済みか.
	IsVerify bool `json:"isVerify"`
}

// GetAud returns the value of Aud.
func (s *OAuthTokenInfoOK) GetAud() string {
	return s.Aud
}

// GetExp returns the value of Exp.
func (s *OAuthTokenInfoOK) GetExp() string {
	return s.Exp
}

// GetIat returns the value of Iat.
func (s *OAuthTokenInfoOK) GetIat() string {
	return s.Iat
}

// GetIss returns the value of Iss.
func (s *OAuthTokenInfoOK) GetIss() string {
	return s.Iss
}

// GetSub returns the value of Sub.
func (s *OAuthTokenInfoOK) GetSub() string {
	return s.Sub
}

// GetJti returns the value of Jti.
func (s *OAuthTokenInfoOK) GetJti() string {
	return s.Jti
}

// GetDisplayId returns the value of DisplayId.
func (s *OAuthTokenInfoOK) GetDisplayId() OptNilString {
	return s.DisplayId
}

// GetDisplayName returns the value of DisplayName.
func (s *OAuthTokenInfoOK) GetDisplayName() OptNilString {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *OAuthTokenInfoOK) GetIconURL() OptNilString {
	return s.IconURL
}

// GetIsVerify returns the value of IsVerify.
func (s *OAuthTokenInfoOK) GetIsVerify() bool {
	return s.IsVerify
}

// SetAud sets the value of Aud.
func (s *OAuthTokenInfoOK) SetAud(val string) {
	s.Aud = val
}

// SetExp sets the value of Exp.
func (s *OAuthTokenInfoOK) SetExp(val string) {
	s.Exp = val
}

// SetIat sets the value of Iat.
func (s *OAuthTokenInfoOK) SetIat(val string) {
	s.Iat = val
}

// SetIss sets the value of Iss.
func (s *OAuthTokenInfoOK) SetIss(val string) {
	s.Iss = val
}

// SetSub sets the value of Sub.
func (s *OAuthTokenInfoOK) SetSub(val string) {
	s.Sub = val
}

// SetJti sets the value of Jti.
func (s *OAuthTokenInfoOK) SetJti(val string) {
	s.Jti = val
}

// SetDisplayId sets the value of DisplayId.
func (s *OAuthTokenInfoOK) SetDisplayId(val OptNilString) {
	s.DisplayId = val
}

// SetDisplayName sets the value of DisplayName.
func (s *OAuthTokenInfoOK) SetDisplayName(val OptNilString) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *OAuthTokenInfoOK) SetIconURL(val OptNilString) {
	s.IconURL = val
}

// SetIsVerify sets the value of IsVerify.
func (s *OAuthTokenInfoOK) SetIsVerify(val bool) {
	s.IsVerify = val
}

type OpinionCommentsInternalServerError struct{}

func (*OpinionCommentsInternalServerError) opinionCommentsRes() {}

type OpinionCommentsOK struct {
	RootOpinion OpinionCommentsOKRootOpinion    `json:"rootOpinion"`
	Opinions    []OpinionCommentsOKOpinionsItem `json:"opinions"`
}

// GetRootOpinion returns the value of RootOpinion.
func (s *OpinionCommentsOK) GetRootOpinion() OpinionCommentsOKRootOpinion {
	return s.RootOpinion
}

// GetOpinions returns the value of Opinions.
func (s *OpinionCommentsOK) GetOpinions() []OpinionCommentsOKOpinionsItem {
	return s.Opinions
}

// SetRootOpinion sets the value of RootOpinion.
func (s *OpinionCommentsOK) SetRootOpinion(val OpinionCommentsOKRootOpinion) {
	s.RootOpinion = val
}

// SetOpinions sets the value of Opinions.
func (s *OpinionCommentsOK) SetOpinions(val []OpinionCommentsOKOpinionsItem) {
	s.Opinions = val
}

func (*OpinionCommentsOK) opinionCommentsRes() {}

type OpinionCommentsOKOpinionsItem struct {
	Opinion OpinionCommentsOKOpinionsItemOpinion `json:"opinion"`
	// 作成ユーザー.
	User OpinionCommentsOKOpinionsItemUser `json:"user"`
	// 意見投稿主の意見.
	MyItentionStatus OpinionCommentsOKOpinionsItemMyItentionStatus `json:"myItentionStatus"`
}

// GetOpinion returns the value of Opinion.
func (s *OpinionCommentsOKOpinionsItem) GetOpinion() OpinionCommentsOKOpinionsItemOpinion {
	return s.Opinion
}

// GetUser returns the value of User.
func (s *OpinionCommentsOKOpinionsItem) GetUser() OpinionCommentsOKOpinionsItemUser {
	return s.User
}

// GetMyItentionStatus returns the value of MyItentionStatus.
func (s *OpinionCommentsOKOpinionsItem) GetMyItentionStatus() OpinionCommentsOKOpinionsItemMyItentionStatus {
	return s.MyItentionStatus
}

// SetOpinion sets the value of Opinion.
func (s *OpinionCommentsOKOpinionsItem) SetOpinion(val OpinionCommentsOKOpinionsItemOpinion) {
	s.Opinion = val
}

// SetUser sets the value of User.
func (s *OpinionCommentsOKOpinionsItem) SetUser(val OpinionCommentsOKOpinionsItemUser) {
	s.User = val
}

// SetMyItentionStatus sets the value of MyItentionStatus.
func (s *OpinionCommentsOKOpinionsItem) SetMyItentionStatus(val OpinionCommentsOKOpinionsItemMyItentionStatus) {
	s.MyItentionStatus = val
}

// 意見投稿主の意見.
type OpinionCommentsOKOpinionsItemMyItentionStatus string

const (
	OpinionCommentsOKOpinionsItemMyItentionStatusAgree    OpinionCommentsOKOpinionsItemMyItentionStatus = "agree"
	OpinionCommentsOKOpinionsItemMyItentionStatusDisagree OpinionCommentsOKOpinionsItemMyItentionStatus = "disagree"
	OpinionCommentsOKOpinionsItemMyItentionStatusPass     OpinionCommentsOKOpinionsItemMyItentionStatus = "pass"
)

// AllValues returns all OpinionCommentsOKOpinionsItemMyItentionStatus values.
func (OpinionCommentsOKOpinionsItemMyItentionStatus) AllValues() []OpinionCommentsOKOpinionsItemMyItentionStatus {
	return []OpinionCommentsOKOpinionsItemMyItentionStatus{
		OpinionCommentsOKOpinionsItemMyItentionStatusAgree,
		OpinionCommentsOKOpinionsItemMyItentionStatusDisagree,
		OpinionCommentsOKOpinionsItemMyItentionStatusPass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OpinionCommentsOKOpinionsItemMyItentionStatus) MarshalText() ([]byte, error) {
	switch s {
	case OpinionCommentsOKOpinionsItemMyItentionStatusAgree:
		return []byte(s), nil
	case OpinionCommentsOKOpinionsItemMyItentionStatusDisagree:
		return []byte(s), nil
	case OpinionCommentsOKOpinionsItemMyItentionStatusPass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OpinionCommentsOKOpinionsItemMyItentionStatus) UnmarshalText(data []byte) error {
	switch OpinionCommentsOKOpinionsItemMyItentionStatus(data) {
	case OpinionCommentsOKOpinionsItemMyItentionStatusAgree:
		*s = OpinionCommentsOKOpinionsItemMyItentionStatusAgree
		return nil
	case OpinionCommentsOKOpinionsItemMyItentionStatusDisagree:
		*s = OpinionCommentsOKOpinionsItemMyItentionStatusDisagree
		return nil
	case OpinionCommentsOKOpinionsItemMyItentionStatusPass:
		*s = OpinionCommentsOKOpinionsItemMyItentionStatusPass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type OpinionCommentsOKOpinionsItemOpinion struct {
	// 意見ID.
	ID    string    `json:"id"`
	Title OptString `json:"title"`
	// 意見のテキスト.
	Content string `json:"content"`
	// 親の意見ID。ルートならば無し.
	ParentID OptString `json:"parentID"`
	// 意見投稿主の意見.
	VoteType OpinionCommentsOKOpinionsItemOpinionVoteType `json:"voteType"`
	// 画像が返る場合もある.
	PictureURL OptString `json:"pictureURL"`
	// 参考文献URL.
	ReferenceURL OptString `json:"referenceURL"`
}

// GetID returns the value of ID.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetID() string {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetContent() string {
	return s.Content
}

// GetParentID returns the value of ParentID.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetParentID() OptString {
	return s.ParentID
}

// GetVoteType returns the value of VoteType.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetVoteType() OpinionCommentsOKOpinionsItemOpinionVoteType {
	return s.VoteType
}

// GetPictureURL returns the value of PictureURL.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetPictureURL() OptString {
	return s.PictureURL
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *OpinionCommentsOKOpinionsItemOpinion) GetReferenceURL() OptString {
	return s.ReferenceURL
}

// SetID sets the value of ID.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetID(val string) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetContent(val string) {
	s.Content = val
}

// SetParentID sets the value of ParentID.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetParentID(val OptString) {
	s.ParentID = val
}

// SetVoteType sets the value of VoteType.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetVoteType(val OpinionCommentsOKOpinionsItemOpinionVoteType) {
	s.VoteType = val
}

// SetPictureURL sets the value of PictureURL.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetPictureURL(val OptString) {
	s.PictureURL = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *OpinionCommentsOKOpinionsItemOpinion) SetReferenceURL(val OptString) {
	s.ReferenceURL = val
}

// 意見投稿主の意見.
type OpinionCommentsOKOpinionsItemOpinionVoteType string

const (
	OpinionCommentsOKOpinionsItemOpinionVoteTypeAgree    OpinionCommentsOKOpinionsItemOpinionVoteType = "agree"
	OpinionCommentsOKOpinionsItemOpinionVoteTypeDisagree OpinionCommentsOKOpinionsItemOpinionVoteType = "disagree"
	OpinionCommentsOKOpinionsItemOpinionVoteTypePass     OpinionCommentsOKOpinionsItemOpinionVoteType = "pass"
)

// AllValues returns all OpinionCommentsOKOpinionsItemOpinionVoteType values.
func (OpinionCommentsOKOpinionsItemOpinionVoteType) AllValues() []OpinionCommentsOKOpinionsItemOpinionVoteType {
	return []OpinionCommentsOKOpinionsItemOpinionVoteType{
		OpinionCommentsOKOpinionsItemOpinionVoteTypeAgree,
		OpinionCommentsOKOpinionsItemOpinionVoteTypeDisagree,
		OpinionCommentsOKOpinionsItemOpinionVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OpinionCommentsOKOpinionsItemOpinionVoteType) MarshalText() ([]byte, error) {
	switch s {
	case OpinionCommentsOKOpinionsItemOpinionVoteTypeAgree:
		return []byte(s), nil
	case OpinionCommentsOKOpinionsItemOpinionVoteTypeDisagree:
		return []byte(s), nil
	case OpinionCommentsOKOpinionsItemOpinionVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OpinionCommentsOKOpinionsItemOpinionVoteType) UnmarshalText(data []byte) error {
	switch OpinionCommentsOKOpinionsItemOpinionVoteType(data) {
	case OpinionCommentsOKOpinionsItemOpinionVoteTypeAgree:
		*s = OpinionCommentsOKOpinionsItemOpinionVoteTypeAgree
		return nil
	case OpinionCommentsOKOpinionsItemOpinionVoteTypeDisagree:
		*s = OpinionCommentsOKOpinionsItemOpinionVoteTypeDisagree
		return nil
	case OpinionCommentsOKOpinionsItemOpinionVoteTypePass:
		*s = OpinionCommentsOKOpinionsItemOpinionVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 作成ユーザー.
type OpinionCommentsOKOpinionsItemUser struct {
	DisplayID   string    `json:"displayID"`
	DisplayName string    `json:"displayName"`
	IconURL     OptString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *OpinionCommentsOKOpinionsItemUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *OpinionCommentsOKOpinionsItemUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *OpinionCommentsOKOpinionsItemUser) GetIconURL() OptString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *OpinionCommentsOKOpinionsItemUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *OpinionCommentsOKOpinionsItemUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *OpinionCommentsOKOpinionsItemUser) SetIconURL(val OptString) {
	s.IconURL = val
}

type OpinionCommentsOKRootOpinion struct {
	// 作成ユーザー.
	User    OpinionCommentsOKRootOpinionUser    `json:"user"`
	Opinion OpinionCommentsOKRootOpinionOpinion `json:"opinion"`
}

// GetUser returns the value of User.
func (s *OpinionCommentsOKRootOpinion) GetUser() OpinionCommentsOKRootOpinionUser {
	return s.User
}

// GetOpinion returns the value of Opinion.
func (s *OpinionCommentsOKRootOpinion) GetOpinion() OpinionCommentsOKRootOpinionOpinion {
	return s.Opinion
}

// SetUser sets the value of User.
func (s *OpinionCommentsOKRootOpinion) SetUser(val OpinionCommentsOKRootOpinionUser) {
	s.User = val
}

// SetOpinion sets the value of Opinion.
func (s *OpinionCommentsOKRootOpinion) SetOpinion(val OpinionCommentsOKRootOpinionOpinion) {
	s.Opinion = val
}

type OpinionCommentsOKRootOpinionOpinion struct {
	// 意見ID.
	ID    string    `json:"id"`
	Title OptString `json:"title"`
	// 意見のテキスト.
	Content string `json:"content"`
	// 親の意見ID。ルートならば無し.
	ParentID OptString `json:"parentID"`
	// 意見投稿主の意見.
	VoteType OpinionCommentsOKRootOpinionOpinionVoteType `json:"voteType"`
	// 画像が返る場合もある.
	PictureURL OptString `json:"pictureURL"`
	// 参考文献URL.
	ReferenceURL OptString `json:"referenceURL"`
}

// GetID returns the value of ID.
func (s *OpinionCommentsOKRootOpinionOpinion) GetID() string {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *OpinionCommentsOKRootOpinionOpinion) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *OpinionCommentsOKRootOpinionOpinion) GetContent() string {
	return s.Content
}

// GetParentID returns the value of ParentID.
func (s *OpinionCommentsOKRootOpinionOpinion) GetParentID() OptString {
	return s.ParentID
}

// GetVoteType returns the value of VoteType.
func (s *OpinionCommentsOKRootOpinionOpinion) GetVoteType() OpinionCommentsOKRootOpinionOpinionVoteType {
	return s.VoteType
}

// GetPictureURL returns the value of PictureURL.
func (s *OpinionCommentsOKRootOpinionOpinion) GetPictureURL() OptString {
	return s.PictureURL
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *OpinionCommentsOKRootOpinionOpinion) GetReferenceURL() OptString {
	return s.ReferenceURL
}

// SetID sets the value of ID.
func (s *OpinionCommentsOKRootOpinionOpinion) SetID(val string) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *OpinionCommentsOKRootOpinionOpinion) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *OpinionCommentsOKRootOpinionOpinion) SetContent(val string) {
	s.Content = val
}

// SetParentID sets the value of ParentID.
func (s *OpinionCommentsOKRootOpinionOpinion) SetParentID(val OptString) {
	s.ParentID = val
}

// SetVoteType sets the value of VoteType.
func (s *OpinionCommentsOKRootOpinionOpinion) SetVoteType(val OpinionCommentsOKRootOpinionOpinionVoteType) {
	s.VoteType = val
}

// SetPictureURL sets the value of PictureURL.
func (s *OpinionCommentsOKRootOpinionOpinion) SetPictureURL(val OptString) {
	s.PictureURL = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *OpinionCommentsOKRootOpinionOpinion) SetReferenceURL(val OptString) {
	s.ReferenceURL = val
}

// 意見投稿主の意見.
type OpinionCommentsOKRootOpinionOpinionVoteType string

const (
	OpinionCommentsOKRootOpinionOpinionVoteTypeAgree    OpinionCommentsOKRootOpinionOpinionVoteType = "agree"
	OpinionCommentsOKRootOpinionOpinionVoteTypeDisagree OpinionCommentsOKRootOpinionOpinionVoteType = "disagree"
	OpinionCommentsOKRootOpinionOpinionVoteTypePass     OpinionCommentsOKRootOpinionOpinionVoteType = "pass"
)

// AllValues returns all OpinionCommentsOKRootOpinionOpinionVoteType values.
func (OpinionCommentsOKRootOpinionOpinionVoteType) AllValues() []OpinionCommentsOKRootOpinionOpinionVoteType {
	return []OpinionCommentsOKRootOpinionOpinionVoteType{
		OpinionCommentsOKRootOpinionOpinionVoteTypeAgree,
		OpinionCommentsOKRootOpinionOpinionVoteTypeDisagree,
		OpinionCommentsOKRootOpinionOpinionVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OpinionCommentsOKRootOpinionOpinionVoteType) MarshalText() ([]byte, error) {
	switch s {
	case OpinionCommentsOKRootOpinionOpinionVoteTypeAgree:
		return []byte(s), nil
	case OpinionCommentsOKRootOpinionOpinionVoteTypeDisagree:
		return []byte(s), nil
	case OpinionCommentsOKRootOpinionOpinionVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OpinionCommentsOKRootOpinionOpinionVoteType) UnmarshalText(data []byte) error {
	switch OpinionCommentsOKRootOpinionOpinionVoteType(data) {
	case OpinionCommentsOKRootOpinionOpinionVoteTypeAgree:
		*s = OpinionCommentsOKRootOpinionOpinionVoteTypeAgree
		return nil
	case OpinionCommentsOKRootOpinionOpinionVoteTypeDisagree:
		*s = OpinionCommentsOKRootOpinionOpinionVoteTypeDisagree
		return nil
	case OpinionCommentsOKRootOpinionOpinionVoteTypePass:
		*s = OpinionCommentsOKRootOpinionOpinionVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 作成ユーザー.
type OpinionCommentsOKRootOpinionUser struct {
	DisplayID   string    `json:"displayID"`
	DisplayName string    `json:"displayName"`
	IconURL     OptString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *OpinionCommentsOKRootOpinionUser) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *OpinionCommentsOKRootOpinionUser) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *OpinionCommentsOKRootOpinionUser) GetIconURL() OptString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *OpinionCommentsOKRootOpinionUser) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *OpinionCommentsOKRootOpinionUser) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *OpinionCommentsOKRootOpinionUser) SetIconURL(val OptString) {
	s.IconURL = val
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateTalkSessionOKLocation returns new OptCreateTalkSessionOKLocation with value set to v.
func NewOptCreateTalkSessionOKLocation(v CreateTalkSessionOKLocation) OptCreateTalkSessionOKLocation {
	return OptCreateTalkSessionOKLocation{
		Value: v,
		Set:   true,
	}
}

// OptCreateTalkSessionOKLocation is optional CreateTalkSessionOKLocation.
type OptCreateTalkSessionOKLocation struct {
	Value CreateTalkSessionOKLocation
	Set   bool
}

// IsSet returns true if OptCreateTalkSessionOKLocation was set.
func (o OptCreateTalkSessionOKLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateTalkSessionOKLocation) Reset() {
	var v CreateTalkSessionOKLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateTalkSessionOKLocation) SetTo(v CreateTalkSessionOKLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateTalkSessionOKLocation) Get() (v CreateTalkSessionOKLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateTalkSessionOKLocation) Or(d CreateTalkSessionOKLocation) CreateTalkSessionOKLocation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateTalkSessionReq returns new OptCreateTalkSessionReq with value set to v.
func NewOptCreateTalkSessionReq(v CreateTalkSessionReq) OptCreateTalkSessionReq {
	return OptCreateTalkSessionReq{
		Value: v,
		Set:   true,
	}
}

// OptCreateTalkSessionReq is optional CreateTalkSessionReq.
type OptCreateTalkSessionReq struct {
	Value CreateTalkSessionReq
	Set   bool
}

// IsSet returns true if OptCreateTalkSessionReq was set.
func (o OptCreateTalkSessionReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateTalkSessionReq) Reset() {
	var v CreateTalkSessionReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateTalkSessionReq) SetTo(v CreateTalkSessionReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateTalkSessionReq) Get() (v CreateTalkSessionReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateTalkSessionReq) Or(d CreateTalkSessionReq) CreateTalkSessionReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEditUserProfileReq returns new OptEditUserProfileReq with value set to v.
func NewOptEditUserProfileReq(v EditUserProfileReq) OptEditUserProfileReq {
	return OptEditUserProfileReq{
		Value: v,
		Set:   true,
	}
}

// OptEditUserProfileReq is optional EditUserProfileReq.
type OptEditUserProfileReq struct {
	Value EditUserProfileReq
	Set   bool
}

// IsSet returns true if OptEditUserProfileReq was set.
func (o OptEditUserProfileReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEditUserProfileReq) Reset() {
	var v EditUserProfileReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEditUserProfileReq) SetTo(v EditUserProfileReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEditUserProfileReq) Get() (v EditUserProfileReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEditUserProfileReq) Or(d EditUserProfileReq) EditUserProfileReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetTalkSessionDetailOKLocation returns new OptGetTalkSessionDetailOKLocation with value set to v.
func NewOptGetTalkSessionDetailOKLocation(v GetTalkSessionDetailOKLocation) OptGetTalkSessionDetailOKLocation {
	return OptGetTalkSessionDetailOKLocation{
		Value: v,
		Set:   true,
	}
}

// OptGetTalkSessionDetailOKLocation is optional GetTalkSessionDetailOKLocation.
type OptGetTalkSessionDetailOKLocation struct {
	Value GetTalkSessionDetailOKLocation
	Set   bool
}

// IsSet returns true if OptGetTalkSessionDetailOKLocation was set.
func (o OptGetTalkSessionDetailOKLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetTalkSessionDetailOKLocation) Reset() {
	var v GetTalkSessionDetailOKLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetTalkSessionDetailOKLocation) SetTo(v GetTalkSessionDetailOKLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetTalkSessionDetailOKLocation) Get() (v GetTalkSessionDetailOKLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetTalkSessionDetailOKLocation) Or(d GetTalkSessionDetailOKLocation) GetTalkSessionDetailOKLocation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation returns new OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation with value set to v.
func NewOptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation(v GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation {
	return OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation{
		Value: v,
		Set:   true,
	}
}

// OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation is optional GetTalkSessionListOKTalkSessionsItemTalkSessionLocation.
type OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation struct {
	Value GetTalkSessionListOKTalkSessionsItemTalkSessionLocation
	Set   bool
}

// IsSet returns true if OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation was set.
func (o OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation) Reset() {
	var v GetTalkSessionListOKTalkSessionsItemTalkSessionLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation) SetTo(v GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation) Get() (v GetTalkSessionListOKTalkSessionsItemTalkSessionLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetTalkSessionListOKTalkSessionsItemTalkSessionLocation) Or(d GetTalkSessionListOKTalkSessionsItemTalkSessionLocation) GetTalkSessionListOKTalkSessionsItemTalkSessionLocation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMultipartFile returns new OptMultipartFile with value set to v.
func NewOptMultipartFile(v ht.MultipartFile) OptMultipartFile {
	return OptMultipartFile{
		Value: v,
		Set:   true,
	}
}

// OptMultipartFile is optional ht.MultipartFile.
type OptMultipartFile struct {
	Value ht.MultipartFile
	Set   bool
}

// IsSet returns true if OptMultipartFile was set.
func (o OptMultipartFile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMultipartFile) Reset() {
	var v ht.MultipartFile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMultipartFile) SetTo(v ht.MultipartFile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMultipartFile) Get() (v ht.MultipartFile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMultipartFile) Or(d ht.MultipartFile) ht.MultipartFile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBool returns new OptNilBool with value set to v.
func NewOptNilBool(v bool) OptNilBool {
	return OptNilBool{
		Value: v,
		Set:   true,
	}
}

// OptNilBool is optional nullable bool.
type OptNilBool struct {
	Value bool
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBool was set.
func (o OptNilBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBool) SetTo(v bool) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilBool) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilBool) SetToNull() {
	o.Set = true
	o.Null = true
	var v bool
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilEditUserProfileReqGender returns new OptNilEditUserProfileReqGender with value set to v.
func NewOptNilEditUserProfileReqGender(v EditUserProfileReqGender) OptNilEditUserProfileReqGender {
	return OptNilEditUserProfileReqGender{
		Value: v,
		Set:   true,
	}
}

// OptNilEditUserProfileReqGender is optional nullable EditUserProfileReqGender.
type OptNilEditUserProfileReqGender struct {
	Value EditUserProfileReqGender
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilEditUserProfileReqGender was set.
func (o OptNilEditUserProfileReqGender) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilEditUserProfileReqGender) Reset() {
	var v EditUserProfileReqGender
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilEditUserProfileReqGender) SetTo(v EditUserProfileReqGender) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilEditUserProfileReqGender) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilEditUserProfileReqGender) SetToNull() {
	o.Set = true
	o.Null = true
	var v EditUserProfileReqGender
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilEditUserProfileReqGender) Get() (v EditUserProfileReqGender, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilEditUserProfileReqGender) Or(d EditUserProfileReqGender) EditUserProfileReqGender {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilEditUserProfileReqOccupation returns new OptNilEditUserProfileReqOccupation with value set to v.
func NewOptNilEditUserProfileReqOccupation(v EditUserProfileReqOccupation) OptNilEditUserProfileReqOccupation {
	return OptNilEditUserProfileReqOccupation{
		Value: v,
		Set:   true,
	}
}

// OptNilEditUserProfileReqOccupation is optional nullable EditUserProfileReqOccupation.
type OptNilEditUserProfileReqOccupation struct {
	Value EditUserProfileReqOccupation
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilEditUserProfileReqOccupation was set.
func (o OptNilEditUserProfileReqOccupation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilEditUserProfileReqOccupation) Reset() {
	var v EditUserProfileReqOccupation
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilEditUserProfileReqOccupation) SetTo(v EditUserProfileReqOccupation) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilEditUserProfileReqOccupation) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilEditUserProfileReqOccupation) SetToNull() {
	o.Set = true
	o.Null = true
	var v EditUserProfileReqOccupation
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilEditUserProfileReqOccupation) Get() (v EditUserProfileReqOccupation, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilEditUserProfileReqOccupation) Or(d EditUserProfileReqOccupation) EditUserProfileReqOccupation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFloat64 returns new OptNilFloat64 with value set to v.
func NewOptNilFloat64(v float64) OptNilFloat64 {
	return OptNilFloat64{
		Value: v,
		Set:   true,
	}
}

// OptNilFloat64 is optional nullable float64.
type OptNilFloat64 struct {
	Value float64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFloat64 was set.
func (o OptNilFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFloat64) SetTo(v float64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilFloat64) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilFloat64) SetToNull() {
	o.Set = true
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilGetTalkSessionListStatus returns new OptNilGetTalkSessionListStatus with value set to v.
func NewOptNilGetTalkSessionListStatus(v GetTalkSessionListStatus) OptNilGetTalkSessionListStatus {
	return OptNilGetTalkSessionListStatus{
		Value: v,
		Set:   true,
	}
}

// OptNilGetTalkSessionListStatus is optional nullable GetTalkSessionListStatus.
type OptNilGetTalkSessionListStatus struct {
	Value GetTalkSessionListStatus
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGetTalkSessionListStatus was set.
func (o OptNilGetTalkSessionListStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGetTalkSessionListStatus) Reset() {
	var v GetTalkSessionListStatus
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGetTalkSessionListStatus) SetTo(v GetTalkSessionListStatus) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilGetTalkSessionListStatus) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilGetTalkSessionListStatus) SetToNull() {
	o.Set = true
	o.Null = true
	var v GetTalkSessionListStatus
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGetTalkSessionListStatus) Get() (v GetTalkSessionListStatus, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilGetTalkSessionListStatus) Or(d GetTalkSessionListStatus) GetTalkSessionListStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilInt) SetToNull() {
	o.Set = true
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPostOpinionPostReq returns new OptPostOpinionPostReq with value set to v.
func NewOptPostOpinionPostReq(v PostOpinionPostReq) OptPostOpinionPostReq {
	return OptPostOpinionPostReq{
		Value: v,
		Set:   true,
	}
}

// OptPostOpinionPostReq is optional PostOpinionPostReq.
type OptPostOpinionPostReq struct {
	Value PostOpinionPostReq
	Set   bool
}

// IsSet returns true if OptPostOpinionPostReq was set.
func (o OptPostOpinionPostReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPostOpinionPostReq) Reset() {
	var v PostOpinionPostReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPostOpinionPostReq) SetTo(v PostOpinionPostReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPostOpinionPostReq) Get() (v PostOpinionPostReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPostOpinionPostReq) Or(d PostOpinionPostReq) PostOpinionPostReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRegisterUserReq returns new OptRegisterUserReq with value set to v.
func NewOptRegisterUserReq(v RegisterUserReq) OptRegisterUserReq {
	return OptRegisterUserReq{
		Value: v,
		Set:   true,
	}
}

// OptRegisterUserReq is optional RegisterUserReq.
type OptRegisterUserReq struct {
	Value RegisterUserReq
	Set   bool
}

// IsSet returns true if OptRegisterUserReq was set.
func (o OptRegisterUserReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRegisterUserReq) Reset() {
	var v RegisterUserReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRegisterUserReq) SetTo(v RegisterUserReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRegisterUserReq) Get() (v RegisterUserReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRegisterUserReq) Or(d RegisterUserReq) RegisterUserReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptVoteReq returns new OptVoteReq with value set to v.
func NewOptVoteReq(v VoteReq) OptVoteReq {
	return OptVoteReq{
		Value: v,
		Set:   true,
	}
}

// OptVoteReq is optional VoteReq.
type OptVoteReq struct {
	Value VoteReq
	Set   bool
}

// IsSet returns true if OptVoteReq was set.
func (o OptVoteReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVoteReq) Reset() {
	var v VoteReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVoteReq) SetTo(v VoteReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVoteReq) Get() (v VoteReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptVoteReq) Or(d VoteReq) VoteReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type PostOpinionPostInternalServerError struct{}

func (*PostOpinionPostInternalServerError) postOpinionPostRes() {}

type PostOpinionPostOK struct{}

func (*PostOpinionPostOK) postOpinionPostRes() {}

type PostOpinionPostReq struct {
	ParentOpinionID OptNilString `json:"parentOpinionID"`
	VoteStatus      string       `json:"voteStatus"`
	Title           OptNilString `json:"title"`
	OpinionContent  string       `json:"opinionContent"`
	ReferenceURL    OptNilString `json:"referenceURL"`
	Picture         OptNilString `json:"picture"`
}

// GetParentOpinionID returns the value of ParentOpinionID.
func (s *PostOpinionPostReq) GetParentOpinionID() OptNilString {
	return s.ParentOpinionID
}

// GetVoteStatus returns the value of VoteStatus.
func (s *PostOpinionPostReq) GetVoteStatus() string {
	return s.VoteStatus
}

// GetTitle returns the value of Title.
func (s *PostOpinionPostReq) GetTitle() OptNilString {
	return s.Title
}

// GetOpinionContent returns the value of OpinionContent.
func (s *PostOpinionPostReq) GetOpinionContent() string {
	return s.OpinionContent
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *PostOpinionPostReq) GetReferenceURL() OptNilString {
	return s.ReferenceURL
}

// GetPicture returns the value of Picture.
func (s *PostOpinionPostReq) GetPicture() OptNilString {
	return s.Picture
}

// SetParentOpinionID sets the value of ParentOpinionID.
func (s *PostOpinionPostReq) SetParentOpinionID(val OptNilString) {
	s.ParentOpinionID = val
}

// SetVoteStatus sets the value of VoteStatus.
func (s *PostOpinionPostReq) SetVoteStatus(val string) {
	s.VoteStatus = val
}

// SetTitle sets the value of Title.
func (s *PostOpinionPostReq) SetTitle(val OptNilString) {
	s.Title = val
}

// SetOpinionContent sets the value of OpinionContent.
func (s *PostOpinionPostReq) SetOpinionContent(val string) {
	s.OpinionContent = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *PostOpinionPostReq) SetReferenceURL(val OptNilString) {
	s.ReferenceURL = val
}

// SetPicture sets the value of Picture.
func (s *PostOpinionPostReq) SetPicture(val OptNilString) {
	s.Picture = val
}

type RegisterUserBadRequest struct{}

func (*RegisterUserBadRequest) registerUserRes() {}

type RegisterUserInternalServerError struct{}

func (*RegisterUserInternalServerError) registerUserRes() {}

type RegisterUserOK struct {
	DisplayID   string    `json:"displayID"`
	DisplayName string    `json:"displayName"`
	IconURL     OptString `json:"iconURL"`
}

// GetDisplayID returns the value of DisplayID.
func (s *RegisterUserOK) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *RegisterUserOK) GetDisplayName() string {
	return s.DisplayName
}

// GetIconURL returns the value of IconURL.
func (s *RegisterUserOK) GetIconURL() OptString {
	return s.IconURL
}

// SetDisplayID sets the value of DisplayID.
func (s *RegisterUserOK) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *RegisterUserOK) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetIconURL sets the value of IconURL.
func (s *RegisterUserOK) SetIconURL(val OptString) {
	s.IconURL = val
}

func (*RegisterUserOK) registerUserRes() {}

type RegisterUserReq struct {
	// ユーザー名。日本語なども設定可能。.
	DisplayName string `json:"displayName"`
	// ユーザーID。プロフィールのパスなどで使用される。DBのIDとは別。.
	DisplayID string `json:"displayID"`
	// ユーザーアイコン.
	Icon OptMultipartFile `json:"icon"`
	// 生まれ年.
	YearOfBirth OptNilInt `json:"yearOfBirth"`
	// 性別.
	Gender NilRegisterUserReqGender `json:"gender"`
	// 市区町村.
	Municipality OptNilString `json:"municipality"`
	// ユーザーの職業.
	Occupation NilRegisterUserReqOccupation `json:"occupation"`
	// 世帯人数.
	HouseholdSize OptNilInt `json:"householdSize"`
}

// GetDisplayName returns the value of DisplayName.
func (s *RegisterUserReq) GetDisplayName() string {
	return s.DisplayName
}

// GetDisplayID returns the value of DisplayID.
func (s *RegisterUserReq) GetDisplayID() string {
	return s.DisplayID
}

// GetIcon returns the value of Icon.
func (s *RegisterUserReq) GetIcon() OptMultipartFile {
	return s.Icon
}

// GetYearOfBirth returns the value of YearOfBirth.
func (s *RegisterUserReq) GetYearOfBirth() OptNilInt {
	return s.YearOfBirth
}

// GetGender returns the value of Gender.
func (s *RegisterUserReq) GetGender() NilRegisterUserReqGender {
	return s.Gender
}

// GetMunicipality returns the value of Municipality.
func (s *RegisterUserReq) GetMunicipality() OptNilString {
	return s.Municipality
}

// GetOccupation returns the value of Occupation.
func (s *RegisterUserReq) GetOccupation() NilRegisterUserReqOccupation {
	return s.Occupation
}

// GetHouseholdSize returns the value of HouseholdSize.
func (s *RegisterUserReq) GetHouseholdSize() OptNilInt {
	return s.HouseholdSize
}

// SetDisplayName sets the value of DisplayName.
func (s *RegisterUserReq) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetDisplayID sets the value of DisplayID.
func (s *RegisterUserReq) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetIcon sets the value of Icon.
func (s *RegisterUserReq) SetIcon(val OptMultipartFile) {
	s.Icon = val
}

// SetYearOfBirth sets the value of YearOfBirth.
func (s *RegisterUserReq) SetYearOfBirth(val OptNilInt) {
	s.YearOfBirth = val
}

// SetGender sets the value of Gender.
func (s *RegisterUserReq) SetGender(val NilRegisterUserReqGender) {
	s.Gender = val
}

// SetMunicipality sets the value of Municipality.
func (s *RegisterUserReq) SetMunicipality(val OptNilString) {
	s.Municipality = val
}

// SetOccupation sets the value of Occupation.
func (s *RegisterUserReq) SetOccupation(val NilRegisterUserReqOccupation) {
	s.Occupation = val
}

// SetHouseholdSize sets the value of HouseholdSize.
func (s *RegisterUserReq) SetHouseholdSize(val OptNilInt) {
	s.HouseholdSize = val
}

// 性別.
type RegisterUserReqGender string

const (
	RegisterUserReqGenderMale           RegisterUserReqGender = "male"
	RegisterUserReqGenderFemale         RegisterUserReqGender = "female"
	RegisterUserReqGenderOther          RegisterUserReqGender = "other"
	RegisterUserReqGenderPreferNotToSay RegisterUserReqGender = "preferNotToSay"
)

// AllValues returns all RegisterUserReqGender values.
func (RegisterUserReqGender) AllValues() []RegisterUserReqGender {
	return []RegisterUserReqGender{
		RegisterUserReqGenderMale,
		RegisterUserReqGenderFemale,
		RegisterUserReqGenderOther,
		RegisterUserReqGenderPreferNotToSay,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RegisterUserReqGender) MarshalText() ([]byte, error) {
	switch s {
	case RegisterUserReqGenderMale:
		return []byte(s), nil
	case RegisterUserReqGenderFemale:
		return []byte(s), nil
	case RegisterUserReqGenderOther:
		return []byte(s), nil
	case RegisterUserReqGenderPreferNotToSay:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RegisterUserReqGender) UnmarshalText(data []byte) error {
	switch RegisterUserReqGender(data) {
	case RegisterUserReqGenderMale:
		*s = RegisterUserReqGenderMale
		return nil
	case RegisterUserReqGenderFemale:
		*s = RegisterUserReqGenderFemale
		return nil
	case RegisterUserReqGenderOther:
		*s = RegisterUserReqGenderOther
		return nil
	case RegisterUserReqGenderPreferNotToSay:
		*s = RegisterUserReqGenderPreferNotToSay
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ユーザーの職業.
type RegisterUserReqOccupation string

const (
	RegisterUserReqOccupation_0  RegisterUserReqOccupation = "正社員"
	RegisterUserReqOccupation_1  RegisterUserReqOccupation = "契約社員"
	RegisterUserReqOccupation_2  RegisterUserReqOccupation = "公務員"
	RegisterUserReqOccupation_3  RegisterUserReqOccupation = "自営業"
	RegisterUserReqOccupation_4  RegisterUserReqOccupation = "会社役員"
	RegisterUserReqOccupation_5  RegisterUserReqOccupation = "パート・アルバイト"
	RegisterUserReqOccupation_6  RegisterUserReqOccupation = "家事従事者"
	RegisterUserReqOccupation_7  RegisterUserReqOccupation = "学生"
	RegisterUserReqOccupation_8  RegisterUserReqOccupation = "無職"
	RegisterUserReqOccupation_9  RegisterUserReqOccupation = "その他"
	RegisterUserReqOccupation_10 RegisterUserReqOccupation = "無回答"
)

// AllValues returns all RegisterUserReqOccupation values.
func (RegisterUserReqOccupation) AllValues() []RegisterUserReqOccupation {
	return []RegisterUserReqOccupation{
		RegisterUserReqOccupation_0,
		RegisterUserReqOccupation_1,
		RegisterUserReqOccupation_2,
		RegisterUserReqOccupation_3,
		RegisterUserReqOccupation_4,
		RegisterUserReqOccupation_5,
		RegisterUserReqOccupation_6,
		RegisterUserReqOccupation_7,
		RegisterUserReqOccupation_8,
		RegisterUserReqOccupation_9,
		RegisterUserReqOccupation_10,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RegisterUserReqOccupation) MarshalText() ([]byte, error) {
	switch s {
	case RegisterUserReqOccupation_0:
		return []byte(s), nil
	case RegisterUserReqOccupation_1:
		return []byte(s), nil
	case RegisterUserReqOccupation_2:
		return []byte(s), nil
	case RegisterUserReqOccupation_3:
		return []byte(s), nil
	case RegisterUserReqOccupation_4:
		return []byte(s), nil
	case RegisterUserReqOccupation_5:
		return []byte(s), nil
	case RegisterUserReqOccupation_6:
		return []byte(s), nil
	case RegisterUserReqOccupation_7:
		return []byte(s), nil
	case RegisterUserReqOccupation_8:
		return []byte(s), nil
	case RegisterUserReqOccupation_9:
		return []byte(s), nil
	case RegisterUserReqOccupation_10:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RegisterUserReqOccupation) UnmarshalText(data []byte) error {
	switch RegisterUserReqOccupation(data) {
	case RegisterUserReqOccupation_0:
		*s = RegisterUserReqOccupation_0
		return nil
	case RegisterUserReqOccupation_1:
		*s = RegisterUserReqOccupation_1
		return nil
	case RegisterUserReqOccupation_2:
		*s = RegisterUserReqOccupation_2
		return nil
	case RegisterUserReqOccupation_3:
		*s = RegisterUserReqOccupation_3
		return nil
	case RegisterUserReqOccupation_4:
		*s = RegisterUserReqOccupation_4
		return nil
	case RegisterUserReqOccupation_5:
		*s = RegisterUserReqOccupation_5
		return nil
	case RegisterUserReqOccupation_6:
		*s = RegisterUserReqOccupation_6
		return nil
	case RegisterUserReqOccupation_7:
		*s = RegisterUserReqOccupation_7
		return nil
	case RegisterUserReqOccupation_8:
		*s = RegisterUserReqOccupation_8
		return nil
	case RegisterUserReqOccupation_9:
		*s = RegisterUserReqOccupation_9
		return nil
	case RegisterUserReqOccupation_10:
		*s = RegisterUserReqOccupation_10
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SessionId struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *SessionId) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *SessionId) SetAPIKey(val string) {
	s.APIKey = val
}

type TestInternalServerError struct{}

func (*TestInternalServerError) testRes() {}

type TestOK struct {
	OptInt     OptNilInt    `json:"optInt"`
	OptNilInt  OptInt       `json:"optNilInt"`
	OptNilBool OptNilBool   `json:"optNilBool"`
	OptBool    OptBool      `json:"optBool"`
	OptUrl     OptURI       `json:"optUrl"`
	OptNilUrl  OptNilString `json:"optNilUrl"`
}

// GetOptInt returns the value of OptInt.
func (s *TestOK) GetOptInt() OptNilInt {
	return s.OptInt
}

// GetOptNilInt returns the value of OptNilInt.
func (s *TestOK) GetOptNilInt() OptInt {
	return s.OptNilInt
}

// GetOptNilBool returns the value of OptNilBool.
func (s *TestOK) GetOptNilBool() OptNilBool {
	return s.OptNilBool
}

// GetOptBool returns the value of OptBool.
func (s *TestOK) GetOptBool() OptBool {
	return s.OptBool
}

// GetOptUrl returns the value of OptUrl.
func (s *TestOK) GetOptUrl() OptURI {
	return s.OptUrl
}

// GetOptNilUrl returns the value of OptNilUrl.
func (s *TestOK) GetOptNilUrl() OptNilString {
	return s.OptNilUrl
}

// SetOptInt sets the value of OptInt.
func (s *TestOK) SetOptInt(val OptNilInt) {
	s.OptInt = val
}

// SetOptNilInt sets the value of OptNilInt.
func (s *TestOK) SetOptNilInt(val OptInt) {
	s.OptNilInt = val
}

// SetOptNilBool sets the value of OptNilBool.
func (s *TestOK) SetOptNilBool(val OptNilBool) {
	s.OptNilBool = val
}

// SetOptBool sets the value of OptBool.
func (s *TestOK) SetOptBool(val OptBool) {
	s.OptBool = val
}

// SetOptUrl sets the value of OptUrl.
func (s *TestOK) SetOptUrl(val OptURI) {
	s.OptUrl = val
}

// SetOptNilUrl sets the value of OptNilUrl.
func (s *TestOK) SetOptNilUrl(val OptNilString) {
	s.OptNilUrl = val
}

func (*TestOK) testRes() {}

type VoteInternalServerError struct{}

func (*VoteInternalServerError) voteRes() {}

type VoteOKApplicationJSON []VoteOKItem

func (*VoteOKApplicationJSON) voteRes() {}

type VoteOKItem struct {
	// 意見ID.
	ID    string    `json:"id"`
	Title OptString `json:"title"`
	// 意見のテキスト.
	Content string `json:"content"`
	// 親の意見ID。ルートならば無し.
	ParentID OptString `json:"parentID"`
	// 意見投稿主の意見.
	VoteType VoteOKItemVoteType `json:"voteType"`
	// 画像が返る場合もある.
	PictureURL OptString `json:"pictureURL"`
	// 参考文献URL.
	ReferenceURL OptString `json:"referenceURL"`
}

// GetID returns the value of ID.
func (s *VoteOKItem) GetID() string {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *VoteOKItem) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *VoteOKItem) GetContent() string {
	return s.Content
}

// GetParentID returns the value of ParentID.
func (s *VoteOKItem) GetParentID() OptString {
	return s.ParentID
}

// GetVoteType returns the value of VoteType.
func (s *VoteOKItem) GetVoteType() VoteOKItemVoteType {
	return s.VoteType
}

// GetPictureURL returns the value of PictureURL.
func (s *VoteOKItem) GetPictureURL() OptString {
	return s.PictureURL
}

// GetReferenceURL returns the value of ReferenceURL.
func (s *VoteOKItem) GetReferenceURL() OptString {
	return s.ReferenceURL
}

// SetID sets the value of ID.
func (s *VoteOKItem) SetID(val string) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *VoteOKItem) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *VoteOKItem) SetContent(val string) {
	s.Content = val
}

// SetParentID sets the value of ParentID.
func (s *VoteOKItem) SetParentID(val OptString) {
	s.ParentID = val
}

// SetVoteType sets the value of VoteType.
func (s *VoteOKItem) SetVoteType(val VoteOKItemVoteType) {
	s.VoteType = val
}

// SetPictureURL sets the value of PictureURL.
func (s *VoteOKItem) SetPictureURL(val OptString) {
	s.PictureURL = val
}

// SetReferenceURL sets the value of ReferenceURL.
func (s *VoteOKItem) SetReferenceURL(val OptString) {
	s.ReferenceURL = val
}

// 意見投稿主の意見.
type VoteOKItemVoteType string

const (
	VoteOKItemVoteTypeAgree    VoteOKItemVoteType = "agree"
	VoteOKItemVoteTypeDisagree VoteOKItemVoteType = "disagree"
	VoteOKItemVoteTypePass     VoteOKItemVoteType = "pass"
)

// AllValues returns all VoteOKItemVoteType values.
func (VoteOKItemVoteType) AllValues() []VoteOKItemVoteType {
	return []VoteOKItemVoteType{
		VoteOKItemVoteTypeAgree,
		VoteOKItemVoteTypeDisagree,
		VoteOKItemVoteTypePass,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s VoteOKItemVoteType) MarshalText() ([]byte, error) {
	switch s {
	case VoteOKItemVoteTypeAgree:
		return []byte(s), nil
	case VoteOKItemVoteTypeDisagree:
		return []byte(s), nil
	case VoteOKItemVoteTypePass:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *VoteOKItemVoteType) UnmarshalText(data []byte) error {
	switch VoteOKItemVoteType(data) {
	case VoteOKItemVoteTypeAgree:
		*s = VoteOKItemVoteTypeAgree
		return nil
	case VoteOKItemVoteTypeDisagree:
		*s = VoteOKItemVoteTypeDisagree
		return nil
	case VoteOKItemVoteTypePass:
		*s = VoteOKItemVoteTypePass
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type VoteReq struct {
	VoteStatus string `json:"voteStatus"`
}

// GetVoteStatus returns the value of VoteStatus.
func (s *VoteReq) GetVoteStatus() string {
	return s.VoteStatus
}

// SetVoteStatus sets the value of VoteStatus.
func (s *VoteReq) SetVoteStatus(val string) {
	s.VoteStatus = val
}
