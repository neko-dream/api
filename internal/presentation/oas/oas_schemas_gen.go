// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"net/url"

	"github.com/go-faster/errors"
)

// AuthLoginFound is response for AuthLogin operation.
type AuthLoginFound struct {
	Location  OptURI
	SetCookie OptString
}

// GetLocation returns the value of Location.
func (s *AuthLoginFound) GetLocation() OptURI {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *AuthLoginFound) GetSetCookie() OptString {
	return s.SetCookie
}

// SetLocation sets the value of Location.
func (s *AuthLoginFound) SetLocation(val OptURI) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *AuthLoginFound) SetSetCookie(val OptString) {
	s.SetCookie = val
}

type CreateTalkSessionOK struct {
	TalkSessionID     string `json:"talkSessionID"`
	TalkSessionTheme  string `json:"talkSessionTheme"`
	TalkSessionStatus string `json:"talkSessionStatus"`
}

// GetTalkSessionID returns the value of TalkSessionID.
func (s *CreateTalkSessionOK) GetTalkSessionID() string {
	return s.TalkSessionID
}

// GetTalkSessionTheme returns the value of TalkSessionTheme.
func (s *CreateTalkSessionOK) GetTalkSessionTheme() string {
	return s.TalkSessionTheme
}

// GetTalkSessionStatus returns the value of TalkSessionStatus.
func (s *CreateTalkSessionOK) GetTalkSessionStatus() string {
	return s.TalkSessionStatus
}

// SetTalkSessionID sets the value of TalkSessionID.
func (s *CreateTalkSessionOK) SetTalkSessionID(val string) {
	s.TalkSessionID = val
}

// SetTalkSessionTheme sets the value of TalkSessionTheme.
func (s *CreateTalkSessionOK) SetTalkSessionTheme(val string) {
	s.TalkSessionTheme = val
}

// SetTalkSessionStatus sets the value of TalkSessionStatus.
func (s *CreateTalkSessionOK) SetTalkSessionStatus(val string) {
	s.TalkSessionStatus = val
}

type CreateTalkSessionReq struct {
	Theme OptString `json:"theme"`
}

// GetTheme returns the value of Theme.
func (s *CreateTalkSessionReq) GetTheme() OptString {
	return s.Theme
}

// SetTheme sets the value of Theme.
func (s *CreateTalkSessionReq) SetTheme(val OptString) {
	s.Theme = val
}

type EditUserProfileOK struct {
	DisplayID   string `json:"displayID"`
	DisplayName string `json:"displayName"`
}

// GetDisplayID returns the value of DisplayID.
func (s *EditUserProfileOK) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *EditUserProfileOK) GetDisplayName() string {
	return s.DisplayName
}

// SetDisplayID sets the value of DisplayID.
func (s *EditUserProfileOK) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *EditUserProfileOK) SetDisplayName(val string) {
	s.DisplayName = val
}

type GetTalkSessionDetailOK struct {
	TalkSessionID     string `json:"talkSessionID"`
	TalkSessionTheme  string `json:"talkSessionTheme"`
	TalkSessionStatus string `json:"talkSessionStatus"`
}

// GetTalkSessionID returns the value of TalkSessionID.
func (s *GetTalkSessionDetailOK) GetTalkSessionID() string {
	return s.TalkSessionID
}

// GetTalkSessionTheme returns the value of TalkSessionTheme.
func (s *GetTalkSessionDetailOK) GetTalkSessionTheme() string {
	return s.TalkSessionTheme
}

// GetTalkSessionStatus returns the value of TalkSessionStatus.
func (s *GetTalkSessionDetailOK) GetTalkSessionStatus() string {
	return s.TalkSessionStatus
}

// SetTalkSessionID sets the value of TalkSessionID.
func (s *GetTalkSessionDetailOK) SetTalkSessionID(val string) {
	s.TalkSessionID = val
}

// SetTalkSessionTheme sets the value of TalkSessionTheme.
func (s *GetTalkSessionDetailOK) SetTalkSessionTheme(val string) {
	s.TalkSessionTheme = val
}

// SetTalkSessionStatus sets the value of TalkSessionStatus.
func (s *GetTalkSessionDetailOK) SetTalkSessionStatus(val string) {
	s.TalkSessionStatus = val
}

type GetTalkSessionsOK struct{}

type GetUserProfileOK struct {
	DisplayID   string `json:"displayID"`
	DisplayName string `json:"displayName"`
}

// GetDisplayID returns the value of DisplayID.
func (s *GetUserProfileOK) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetUserProfileOK) GetDisplayName() string {
	return s.DisplayName
}

// SetDisplayID sets the value of DisplayID.
func (s *GetUserProfileOK) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetUserProfileOK) SetDisplayName(val string) {
	s.DisplayName = val
}

type IntentionInternalServerError struct{}

func (*IntentionInternalServerError) intentionRes() {}

type IntentionOKApplicationJSON []IntentionOKItem

func (*IntentionOKApplicationJSON) intentionRes() {}

type IntentionOKItem struct {
	// 意見ID.
	OpinionID string `json:"opinionID"`
	// 意見のテキスト.
	OpinionContent string `json:"opinionContent"`
	// 親の意見ID。ルートならば無し.
	ParentOpinionID OptString `json:"parentOpinionID"`
}

// GetOpinionID returns the value of OpinionID.
func (s *IntentionOKItem) GetOpinionID() string {
	return s.OpinionID
}

// GetOpinionContent returns the value of OpinionContent.
func (s *IntentionOKItem) GetOpinionContent() string {
	return s.OpinionContent
}

// GetParentOpinionID returns the value of ParentOpinionID.
func (s *IntentionOKItem) GetParentOpinionID() OptString {
	return s.ParentOpinionID
}

// SetOpinionID sets the value of OpinionID.
func (s *IntentionOKItem) SetOpinionID(val string) {
	s.OpinionID = val
}

// SetOpinionContent sets the value of OpinionContent.
func (s *IntentionOKItem) SetOpinionContent(val string) {
	s.OpinionContent = val
}

// SetParentOpinionID sets the value of ParentOpinionID.
func (s *IntentionOKItem) SetParentOpinionID(val OptString) {
	s.ParentOpinionID = val
}

type ListOpinionsInternalServerError struct{}

func (*ListOpinionsInternalServerError) listOpinionsRes() {}

type ListOpinionsOKApplicationJSON []ListOpinionsOKItem

func (*ListOpinionsOKApplicationJSON) listOpinionsRes() {}

type ListOpinionsOKItem struct {
	// 意見ID.
	OpinionID string `json:"opinionID"`
	// 意見のテキスト.
	OpinionContent string `json:"opinionContent"`
	// 親の意見ID。ルートならば無し.
	ParentOpinionID OptString `json:"parentOpinionID"`
}

// GetOpinionID returns the value of OpinionID.
func (s *ListOpinionsOKItem) GetOpinionID() string {
	return s.OpinionID
}

// GetOpinionContent returns the value of OpinionContent.
func (s *ListOpinionsOKItem) GetOpinionContent() string {
	return s.OpinionContent
}

// GetParentOpinionID returns the value of ParentOpinionID.
func (s *ListOpinionsOKItem) GetParentOpinionID() OptString {
	return s.ParentOpinionID
}

// SetOpinionID sets the value of OpinionID.
func (s *ListOpinionsOKItem) SetOpinionID(val string) {
	s.OpinionID = val
}

// SetOpinionContent sets the value of OpinionContent.
func (s *ListOpinionsOKItem) SetOpinionContent(val string) {
	s.OpinionContent = val
}

// SetParentOpinionID sets the value of ParentOpinionID.
func (s *ListOpinionsOKItem) SetParentOpinionID(val OptString) {
	s.ParentOpinionID = val
}

// OAuthCallbackFound is response for OAuthCallback operation.
type OAuthCallbackFound struct {
	Location  OptURI
	SetCookie OptString
}

// GetLocation returns the value of Location.
func (s *OAuthCallbackFound) GetLocation() OptURI {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *OAuthCallbackFound) GetSetCookie() OptString {
	return s.SetCookie
}

// SetLocation sets the value of Location.
func (s *OAuthCallbackFound) SetLocation(val OptURI) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *OAuthCallbackFound) SetSetCookie(val OptString) {
	s.SetCookie = val
}

// NewOptCreateTalkSessionReq returns new OptCreateTalkSessionReq with value set to v.
func NewOptCreateTalkSessionReq(v CreateTalkSessionReq) OptCreateTalkSessionReq {
	return OptCreateTalkSessionReq{
		Value: v,
		Set:   true,
	}
}

// OptCreateTalkSessionReq is optional CreateTalkSessionReq.
type OptCreateTalkSessionReq struct {
	Value CreateTalkSessionReq
	Set   bool
}

// IsSet returns true if OptCreateTalkSessionReq was set.
func (o OptCreateTalkSessionReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateTalkSessionReq) Reset() {
	var v CreateTalkSessionReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateTalkSessionReq) SetTo(v CreateTalkSessionReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateTalkSessionReq) Get() (v CreateTalkSessionReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateTalkSessionReq) Or(d CreateTalkSessionReq) CreateTalkSessionReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRegisterUserReq returns new OptRegisterUserReq with value set to v.
func NewOptRegisterUserReq(v RegisterUserReq) OptRegisterUserReq {
	return OptRegisterUserReq{
		Value: v,
		Set:   true,
	}
}

// OptRegisterUserReq is optional RegisterUserReq.
type OptRegisterUserReq struct {
	Value RegisterUserReq
	Set   bool
}

// IsSet returns true if OptRegisterUserReq was set.
func (o OptRegisterUserReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRegisterUserReq) Reset() {
	var v RegisterUserReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRegisterUserReq) SetTo(v RegisterUserReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRegisterUserReq) Get() (v RegisterUserReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRegisterUserReq) Or(d RegisterUserReq) RegisterUserReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRegisterUserReqOccupation returns new OptRegisterUserReqOccupation with value set to v.
func NewOptRegisterUserReqOccupation(v RegisterUserReqOccupation) OptRegisterUserReqOccupation {
	return OptRegisterUserReqOccupation{
		Value: v,
		Set:   true,
	}
}

// OptRegisterUserReqOccupation is optional RegisterUserReqOccupation.
type OptRegisterUserReqOccupation struct {
	Value RegisterUserReqOccupation
	Set   bool
}

// IsSet returns true if OptRegisterUserReqOccupation was set.
func (o OptRegisterUserReqOccupation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRegisterUserReqOccupation) Reset() {
	var v RegisterUserReqOccupation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRegisterUserReqOccupation) SetTo(v RegisterUserReqOccupation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRegisterUserReqOccupation) Get() (v RegisterUserReqOccupation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRegisterUserReqOccupation) Or(d RegisterUserReqOccupation) RegisterUserReqOccupation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type PostOpinionPostInternalServerError struct{}

func (*PostOpinionPostInternalServerError) postOpinionPostRes() {}

type PostOpinionPostOK struct{}

func (*PostOpinionPostOK) postOpinionPostRes() {}

type RegisterUserBadRequest struct{}

func (*RegisterUserBadRequest) registerUserRes() {}

type RegisterUserInternalServerError struct{}

func (*RegisterUserInternalServerError) registerUserRes() {}

type RegisterUserOK struct {
	DisplayID   string `json:"displayID"`
	DisplayName string `json:"displayName"`
}

// GetDisplayID returns the value of DisplayID.
func (s *RegisterUserOK) GetDisplayID() string {
	return s.DisplayID
}

// GetDisplayName returns the value of DisplayName.
func (s *RegisterUserOK) GetDisplayName() string {
	return s.DisplayName
}

// SetDisplayID sets the value of DisplayID.
func (s *RegisterUserOK) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *RegisterUserOK) SetDisplayName(val string) {
	s.DisplayName = val
}

func (*RegisterUserOK) registerUserRes() {}

type RegisterUserReq struct {
	// ユーザー名。日本語なども設定可能。.
	DisplayName string `json:"displayName"`
	// ユーザーID。プロフィールのパスなどで使用される。DBのIDとは別。.
	DisplayID string `json:"displayID"`
	// ユーザーアイコンURL.
	Picture OptString `json:"picture"`
	// 生まれ年.
	YearOfBirth OptInt `json:"yearOfBirth"`
	// 性別.
	Gender RegisterUserReqGender `json:"gender"`
	// 市区町村.
	Municipality OptString `json:"municipality"`
	// ユーザーの職業.
	Occupation OptRegisterUserReqOccupation `json:"occupation"`
	// 世帯人数.
	HouseholdSize OptInt `json:"householdSize"`
}

// GetDisplayName returns the value of DisplayName.
func (s *RegisterUserReq) GetDisplayName() string {
	return s.DisplayName
}

// GetDisplayID returns the value of DisplayID.
func (s *RegisterUserReq) GetDisplayID() string {
	return s.DisplayID
}

// GetPicture returns the value of Picture.
func (s *RegisterUserReq) GetPicture() OptString {
	return s.Picture
}

// GetYearOfBirth returns the value of YearOfBirth.
func (s *RegisterUserReq) GetYearOfBirth() OptInt {
	return s.YearOfBirth
}

// GetGender returns the value of Gender.
func (s *RegisterUserReq) GetGender() RegisterUserReqGender {
	return s.Gender
}

// GetMunicipality returns the value of Municipality.
func (s *RegisterUserReq) GetMunicipality() OptString {
	return s.Municipality
}

// GetOccupation returns the value of Occupation.
func (s *RegisterUserReq) GetOccupation() OptRegisterUserReqOccupation {
	return s.Occupation
}

// GetHouseholdSize returns the value of HouseholdSize.
func (s *RegisterUserReq) GetHouseholdSize() OptInt {
	return s.HouseholdSize
}

// SetDisplayName sets the value of DisplayName.
func (s *RegisterUserReq) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetDisplayID sets the value of DisplayID.
func (s *RegisterUserReq) SetDisplayID(val string) {
	s.DisplayID = val
}

// SetPicture sets the value of Picture.
func (s *RegisterUserReq) SetPicture(val OptString) {
	s.Picture = val
}

// SetYearOfBirth sets the value of YearOfBirth.
func (s *RegisterUserReq) SetYearOfBirth(val OptInt) {
	s.YearOfBirth = val
}

// SetGender sets the value of Gender.
func (s *RegisterUserReq) SetGender(val RegisterUserReqGender) {
	s.Gender = val
}

// SetMunicipality sets the value of Municipality.
func (s *RegisterUserReq) SetMunicipality(val OptString) {
	s.Municipality = val
}

// SetOccupation sets the value of Occupation.
func (s *RegisterUserReq) SetOccupation(val OptRegisterUserReqOccupation) {
	s.Occupation = val
}

// SetHouseholdSize sets the value of HouseholdSize.
func (s *RegisterUserReq) SetHouseholdSize(val OptInt) {
	s.HouseholdSize = val
}

// 性別.
type RegisterUserReqGender string

const (
	RegisterUserReqGenderMale           RegisterUserReqGender = "male"
	RegisterUserReqGenderFemale         RegisterUserReqGender = "female"
	RegisterUserReqGenderOther          RegisterUserReqGender = "other"
	RegisterUserReqGenderPreferNotToSay RegisterUserReqGender = "preferNotToSay"
)

// AllValues returns all RegisterUserReqGender values.
func (RegisterUserReqGender) AllValues() []RegisterUserReqGender {
	return []RegisterUserReqGender{
		RegisterUserReqGenderMale,
		RegisterUserReqGenderFemale,
		RegisterUserReqGenderOther,
		RegisterUserReqGenderPreferNotToSay,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RegisterUserReqGender) MarshalText() ([]byte, error) {
	switch s {
	case RegisterUserReqGenderMale:
		return []byte(s), nil
	case RegisterUserReqGenderFemale:
		return []byte(s), nil
	case RegisterUserReqGenderOther:
		return []byte(s), nil
	case RegisterUserReqGenderPreferNotToSay:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RegisterUserReqGender) UnmarshalText(data []byte) error {
	switch RegisterUserReqGender(data) {
	case RegisterUserReqGenderMale:
		*s = RegisterUserReqGenderMale
		return nil
	case RegisterUserReqGenderFemale:
		*s = RegisterUserReqGenderFemale
		return nil
	case RegisterUserReqGenderOther:
		*s = RegisterUserReqGenderOther
		return nil
	case RegisterUserReqGenderPreferNotToSay:
		*s = RegisterUserReqGenderPreferNotToSay
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ユーザーの職業.
type RegisterUserReqOccupation string

const (
	RegisterUserReqOccupation_0 RegisterUserReqOccupation = "正社員"
	RegisterUserReqOccupation_1 RegisterUserReqOccupation = "契約社員"
	RegisterUserReqOccupation_2 RegisterUserReqOccupation = "公務員"
	RegisterUserReqOccupation_3 RegisterUserReqOccupation = "自営業"
	RegisterUserReqOccupation_4 RegisterUserReqOccupation = "会社役員"
	RegisterUserReqOccupation_5 RegisterUserReqOccupation = "パート・アルバイト"
	RegisterUserReqOccupation_6 RegisterUserReqOccupation = "家事従事者"
	RegisterUserReqOccupation_7 RegisterUserReqOccupation = "学生"
	RegisterUserReqOccupation_8 RegisterUserReqOccupation = "無職"
	RegisterUserReqOccupation_9 RegisterUserReqOccupation = "その他"
)

// AllValues returns all RegisterUserReqOccupation values.
func (RegisterUserReqOccupation) AllValues() []RegisterUserReqOccupation {
	return []RegisterUserReqOccupation{
		RegisterUserReqOccupation_0,
		RegisterUserReqOccupation_1,
		RegisterUserReqOccupation_2,
		RegisterUserReqOccupation_3,
		RegisterUserReqOccupation_4,
		RegisterUserReqOccupation_5,
		RegisterUserReqOccupation_6,
		RegisterUserReqOccupation_7,
		RegisterUserReqOccupation_8,
		RegisterUserReqOccupation_9,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RegisterUserReqOccupation) MarshalText() ([]byte, error) {
	switch s {
	case RegisterUserReqOccupation_0:
		return []byte(s), nil
	case RegisterUserReqOccupation_1:
		return []byte(s), nil
	case RegisterUserReqOccupation_2:
		return []byte(s), nil
	case RegisterUserReqOccupation_3:
		return []byte(s), nil
	case RegisterUserReqOccupation_4:
		return []byte(s), nil
	case RegisterUserReqOccupation_5:
		return []byte(s), nil
	case RegisterUserReqOccupation_6:
		return []byte(s), nil
	case RegisterUserReqOccupation_7:
		return []byte(s), nil
	case RegisterUserReqOccupation_8:
		return []byte(s), nil
	case RegisterUserReqOccupation_9:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RegisterUserReqOccupation) UnmarshalText(data []byte) error {
	switch RegisterUserReqOccupation(data) {
	case RegisterUserReqOccupation_0:
		*s = RegisterUserReqOccupation_0
		return nil
	case RegisterUserReqOccupation_1:
		*s = RegisterUserReqOccupation_1
		return nil
	case RegisterUserReqOccupation_2:
		*s = RegisterUserReqOccupation_2
		return nil
	case RegisterUserReqOccupation_3:
		*s = RegisterUserReqOccupation_3
		return nil
	case RegisterUserReqOccupation_4:
		*s = RegisterUserReqOccupation_4
		return nil
	case RegisterUserReqOccupation_5:
		*s = RegisterUserReqOccupation_5
		return nil
	case RegisterUserReqOccupation_6:
		*s = RegisterUserReqOccupation_6
		return nil
	case RegisterUserReqOccupation_7:
		*s = RegisterUserReqOccupation_7
		return nil
	case RegisterUserReqOccupation_8:
		*s = RegisterUserReqOccupation_8
		return nil
	case RegisterUserReqOccupation_9:
		*s = RegisterUserReqOccupation_9
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SessionId struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *SessionId) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *SessionId) SetAPIKey(val string) {
	s.APIKey = val
}
